!function(n){function e(r){if(t[r])return t[r].exports;var i=t[r]={exports:{},id:r,loaded:!1};return n[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var t={};return e.m=n,e.c=t,e.p="",e(0)}({0:function(n,e,t){t(3),n.exports=t(2)},2:function(n,e,t){var r,i;i=t(8).expect,r=t(7),describe("Polynomial",function(){return it("should instantiate without errors",function(){var n,e,t,o,s,a,u;return n=new r,i(n)["instanceof"](r),e=new r([]),t=new r([1]),o=new r([1,2]),s=new r([1,2,0]),a=new r([1,2,null]),u=new r([null,2])}),it("should clone other polynomials",function(){var n,e,t;return n=new r([1,2,3]),e=r(n),i(e).to.equal(n),t=n.clone(),i(t).not.to.equal(n),i(t).to.deep.equal(n)}),it("should serialize and deserialize without loss",function(){var n,e,t,o;return t=new r([1,2,3]),n=JSON.stringify(t),e=JSON.parse(n),o=r(e),i(o).to.deep.equal(t)}),it("should multiply by scalars",function(){var n,e,t,o;return n=new r([1,2,3]),e=n.multiplyByScalar(4),t=n.evaluate(5),i(t).to.equal(86),o=e.evaluate(5),i(o).to.equal(4*t)}),it("should sum multiple polynomials",function(){var n,e,t,o,s;return e=new r([1,2,3]),t=new r([0,4,5,6]),n=new r([1,6,8,6]),o=r.sum([e,t]),i(o).to.deep.equal(n),s=e.addPolynomial(t),i(s).to.deep.equal(n)}),describe("should identify the degree of a formula",function(){return it("constant",function(){var n;return n=new r([1,0]),i(n.isConstant()).to.be["true"],i(n.degree()).to.equal(0)}),it("affine",function(){var n;return n=new r([2,1,null]),i(n.degree()).to.equal(1)}),it("quadratic",function(){var n;return n=new r([3,2,1]),i(n.degree()).to.equal(2)}),it("cubic",function(){var n;return n=new r([4,3,2,1]),i(n.degree()).to.equal(3)})}),describe("should evaluate a continuous formula",function(){return it("constant",function(){var n;return n=new r([2]),i(n.evaluate(0)).to.equal(2),i(n.evaluate(5)).to.equal(2),i(n.evaluate(5.1),0,{batched:!0}).to.equal(2),i(n.evaluate(5.1),0,{discrete:!0}).to.equal(2)}),it("affine",function(){var n,e;return n=new r([2,3]),e=n.evaluate(4),i(e).to.equal(14)}),it("quadratic",function(){var n,e;return n=new r([2,3,4]),e=n.evaluate(5),i(e).to.equal(117)}),it("cubic",function(){var n,e;return n=new r([4,3,2,1]),e=n.evaluate(5),i(e).to.equal(194)})}),describe("should evaluate a bounded formula",function(){return it("min",function(){var n,e;return n=new r([3,2,1]),e=n.evaluate(2,0,{min:100}),i(e).to.equal(100)}),it("max",function(){var n,e,t,o,s;return n=new r([3,2,1]),t=n.evaluate(200,0,{max:100}),i(t).to.equal(100),e=new r([3,2,1]),o=e.evaluate(200,0,{max:1/0}),i(o).to.equal(40403),s=e.evaluate(200,0,{max:null}),i(s).to.equal(40403)})}),describe("should evaluate a batched formula",function(){return it("constant",function(){var n;return n=new r([2]),i(n.evaluate(3.9),0,{batched:!0}).to.equal(2)}),it("affine",function(){var n,e,t;return n=new r([2,3]),e=n.evaluate(4),t=n.evaluate(4.9,0,{batched:!0}),i(t).to.equal(e)}),it("quadratic",function(){var n,e,t;return n=new r([2,3,4]),e=n.evaluate(5),t=n.evaluate(5.9,0,{batched:!0}),i(t).to.equal(e)})}),describe("should evaluate a discrete formula",function(){return it("constant",function(){var n;return n=new r([2]),i(n.evaluate(5.5),0,{discrete:!0}).to.equal(2)}),it("affine",function(){var n,e,t;return n=new r([2,3]),e=n.evaluate(4.5),t=n.evaluate(4.5,0,{discrete:!0}),i(t).to.equal(e)}),it("quadratic",function(){var n,e,t;return n=new r([2,3,4]),t=5.7,e=n.evaluate(t,0,{discrete:!0}),i(e).to.equal(2+(3+Math.floor(4*t))*t)})}),describe("should translate to a new origin",function(){return it("constant",function(){var n,e,t;return n=new r([3]),e=n.translate(4),t=e.evaluate(5),i(t).to.equal(3)}),it("affine",function(){var n,e,t;return n=new r([2,3]),e=n.translate(5),t=e.evaluate(3),i(t).to.equal(26)}),it("quadratic",function(){var n,e,t,o,s,a,u,c,l,f;return e=new r([3,2,1]),f=5,u=e.evaluate(f),i(u).to.equal(3+2*f+1*f*f),o=e.evaluate(f,1),t=e.translate(f),c=t.evaluate(0),i(c).to.equal(u),s=t.evaluate(0,1),n=8,l=t.evaluate(n-f),i(l).to.equal(n*n+2*n+3),a=t.evaluate(n-f,1)}),it("cubic",function(){var n,e,t,o,s,a,u,c,l,f;return e=new r([4,3,2,1]),f=5,u=e.evaluate(f),i(u).to.equal(4+3*f+2*f*f+1*f*f*f),o=e.evaluate(f,1),t=e.translate(f),c=t.evaluate(0),i(c).to.equal(u),s=t.evaluate(0,1),n=8,l=t.evaluate(n-f),i(l).to.equal(4+3*n+2*n*n+1*n*n*n),a=t.evaluate(n-f,1)})}),describe("should evaluate the derivative of a polynomial",function(){return it("constant",function(){var n,e;return n=new r([2]),e=n.evaluate(5,1),i(e).to.equal(0)}),it("affine",function(){var n,e;return n=new r([1,2]),e=n.evaluate(5,1),i(e).to.equal(2)}),it("quadratic",function(){var n,e,t;return n=new r([3,2,1]),t=5,e=n.evaluate(t,1),i(e).to.equal(2*t+2)}),it("cubic",function(){var n,e,t;return n=new r([4,3,2,1]),t=5,e=n.evaluate(t,1),i(e).to.equal(3*t*t+4*t+3)})})})},3:function(n,e,t){t(5),mocha.setup("bdd"),t(4),t(6)},4:function(n,e,t){var r;try{t(12)}catch(i){}r=t(9).expect,describe("The frontend testing harness",function(){return it("should load in a browser environment",function(){return r("undefined"!=typeof window&&null!==window).to.be["true"]})})},5:function(n,e,t){document.getElementById("mocha")||document.write('<div id="mocha"></div>'),t(13),t(20)},6:function(n,e,t){(function(e){e.nextTick(function(){delete t.c[n.id],"undefined"!=typeof window&&window.mochaPhantomJS?mochaPhantomJS.run():mocha.run()})}).call(e,t(19))},7:function(n,e,t){function r(n,e){for(var t=[],r=0;e>=r;r++)t[r]=i(e,r)*Math.pow(n,e-r);return new s(t)}function i(n,e){return a[n]=a[n]||[],null!=a[n][e]?a[n][e]:(a[n][e]=o(n,e),a[n][e])}function o(n,e){return 0>=e||e>=n?1:i(n-1,e-1)+i(n-1,e)}function s(n){return n instanceof s?n:this instanceof s?(this.k=n||[],this):new s(n)}var a=[];s.prototype.toJSON=function(){return this.k},s.prototype.clone=function(){for(var n=[],e=0;e<this.k.length;e++)n[e]=this.k[e];return new s(n)},s.prototype.degree=function(){for(var n=0,e=0;e<this.k.length;e++){var t=this.k[e];t&&(n=e)}return n},s.prototype.isConstant=function(){return 0==this.degree()},s.prototype.multiplyByScalar=function(n){for(var e=[],t=0;t<this.k.length;t++)e[t]=n*this.k[t];return new s(e)},s.sum=function(n){var e=[];n=n||[];for(var t=0;t<n.length;t++)for(var r=s(n[t]),i=0;i<r.k.length;i++)e[i]=(e[i]||0)+r.k[i];return new s(e)},s.prototype.addPolynomial=function(n){return s.sum([this,n])},s.prototype.evaluate=function(n,e,t){if(t=t||{},e=e||0,e>=this.k.length)return 0;t.batched&&(n=Math.floor(n));var r=e+1,i=this.evaluate(n,r,t);t.discrete&&(i=Math.floor(i));var o=this.k[e]+i*n;if(0==e){var s=null==t.max?1/0:t.max,a=null==t.min?-(1/0):t.min;return Math.max(Math.min(o,s),a)}return o},s.prototype.translate=function(n,e){for(var t=[],i=0;i<this.k.length;i++){var o=this.k[i],a=r(n,i).multiplyByScalar(o);t.push(a)}return s.sum(t)},n.exports=s},8:function(n,e,t){n.exports=t(24)},9:function(n,e,t){!function(){function e(n){var t=e.modules[n];if(!t)throw new Error('failed to require "'+n+'"');return"exports"in t||"function"!=typeof t.definition||(t.client=t.component=!0,t.definition.call(this,t.exports={},t),delete t.definition),t.exports}e.loader="component",e.helper={},e.helper.semVerSort=function(n,e){for(var t=n.version.split("."),r=e.version.split("."),i=0;i<t.length;++i){var o=parseInt(t[i],10),s=parseInt(r[i],10);if(o!==s)return o>s?1:-1;var a=t[i].substr((""+o).length),u=r[i].substr((""+s).length);if(""===a&&""!==u)return 1;if(""!==a&&""===u)return-1;if(""!==a&&""!==u)return a>u?1:-1}return 0},e.latest=function(n,t){function r(n){throw new Error('failed to find latest module of "'+n+'"')}var i=/(.*)~(.*)@v?(\d+\.\d+\.\d+[^\/]*)$/,o=/(.*)~(.*)/;o.test(n)||r(n);for(var s=Object.keys(e.modules),a=[],u=[],c=0;c<s.length;c++){var l=s[c];if(new RegExp(n+"@").test(l)){var f=l.substr(n.length+1),p=i.exec(l);null!=p?a.push({version:f,name:l}):u.push({version:f,name:l})}}if(0===a.concat(u).length&&r(n),a.length>0){var h=a.sort(e.helper.semVerSort).pop().name;return t===!0?h:e(h)}var h=u.sort(function(n,e){return n.name>e.name})[0].name;return t===!0?h:e(h)},e.modules={},e.register=function(n,t){e.modules[n]={definition:t}},e.define=function(n,t){e.modules[n]={exports:t}},e.register("chaijs~assertion-error@1.0.0",function(n,e){/*!
	 * assertion-error
	 * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>
	 * MIT Licensed
	 */
/*!
	 * Return a function that will copy properties from
	 * one object to another excluding any originally
	 * listed. Returned function will create a new `{}`.
	 *
	 * @param {String} excluded properties ...
	 * @return {Function}
	 */
function t(){function n(n,t){Object.keys(t).forEach(function(r){~e.indexOf(r)||(n[r]=t[r])})}var e=[].slice.call(arguments);return function(){for(var e=[].slice.call(arguments),t=0,r={};t<e.length;t++)n(r,e[t]);return r}}function r(n,e,r){var i=t("name","message","stack","constructor","toJSON"),o=i(e||{});this.message=n||"Unspecified AssertionError",this.showDiff=!1;for(var s in o)this[s]=o[s];r=r||arguments.callee,r&&Error.captureStackTrace&&Error.captureStackTrace(this,r)}/*!
	 * Primary Exports
	 */
e.exports=r,/*!
	 * Inherit from Error.prototype
	 */
r.prototype=Object.create(Error.prototype),/*!
	 * Statically set name
	 */
r.prototype.name="AssertionError",/*!
	 * Ensure correct constructor
	 */
r.prototype.constructor=r,r.prototype.toJSON=function(n){var e=t("constructor","toJSON","stack"),r=e({name:this.name},this);return!1!==n&&this.stack&&(r.stack=this.stack),r}}),e.register("chaijs~type-detect@0.1.1",function(n,e){function t(n){var e=Object.prototype.toString.call(n);return i[e]?i[e]:null===n?"null":void 0===n?"undefined":n===Object(n)?"object":typeof n}function r(){this.tests={}}/*!
	 * type-detect
	 * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Primary Exports
	 */
var n=e.exports=t,i={"[object Array]":"array","[object RegExp]":"regexp","[object Function]":"function","[object Arguments]":"arguments","[object Date]":"date"};n.Library=r,r.prototype.of=t,r.prototype.define=function(n,e){return 1===arguments.length?this.tests[n]:(this.tests[n]=e,this)},r.prototype.test=function(n,e){if(e===t(n))return!0;var r=this.tests[e];if(r&&"regexp"===t(r))return r.test(n);if(r&&"function"===t(r))return r(n);throw new ReferenceError('Type test "'+e+'" not defined or invalid.')}}),e.register("chaijs~deep-eql@0.1.3",function(n,t){function r(n,e,t){return i(n,e)?!0:"date"===g(n)?s(n,e):"regexp"===g(n)?a(n,e):d.isBuffer(n)?f(n,e):"arguments"===g(n)?u(n,e,t):o(n,e)?"object"!==g(n)&&"object"!==g(e)&&"array"!==g(n)&&"array"!==g(e)?i(n,e):h(n,e,t):!1}/*!
	 * Strict (egal) equality test. Ensures that NaN always
	 * equals NaN and `-0` does not equal `+0`.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} equal match
	 */
function i(n,e){return n===e?0!==n||1/n===1/e:n!==n&&e!==e}/*!
	 * Compare the types of two given objects and
	 * return if they are equal. Note that an Array
	 * has a type of `array` (not `object`) and arguments
	 * have a type of `arguments` (not `array`/`object`).
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */
function o(n,e){return g(n)===g(e)}/*!
	 * Compare two Date objects by asserting that
	 * the time values are equal using `saveValue`.
	 *
	 * @param {Date} a
	 * @param {Date} b
	 * @return {Boolean} result
	 */
function s(n,e){return"date"!==g(e)?!1:i(n.getTime(),e.getTime())}/*!
	 * Compare two regular expressions by converting them
	 * to string and checking for `sameValue`.
	 *
	 * @param {RegExp} a
	 * @param {RegExp} b
	 * @return {Boolean} result
	 */
function a(n,e){return"regexp"!==g(e)?!1:i(n.toString(),e.toString())}/*!
	 * Assert deep equality of two `arguments` objects.
	 * Unfortunately, these must be sliced to arrays
	 * prior to test to ensure no bad behavior.
	 *
	 * @param {Arguments} a
	 * @param {Arguments} b
	 * @param {Array} memoize (optional)
	 * @return {Boolean} result
	 */
function u(n,e,t){return"arguments"!==g(e)?!1:(n=[].slice.call(n),e=[].slice.call(e),r(n,e,t))}/*!
	 * Get enumerable properties of a given object.
	 *
	 * @param {Object} a
	 * @return {Array} property names
	 */
function c(n){var e=[];for(var t in n)e.push(t);return e}/*!
	 * Simple equality for flat iterable objects
	 * such as Arrays or Node.js buffers.
	 *
	 * @param {Iterable} a
	 * @param {Iterable} b
	 * @return {Boolean} result
	 */
function l(n,e){if(n.length!==e.length)return!1;for(var t=0,r=!0;t<n.length;t++)if(n[t]!==e[t]){r=!1;break}return r}/*!
	 * Extension to `iterableEqual` specifically
	 * for Node.js Buffers.
	 *
	 * @param {Buffer} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */
function f(n,e){return d.isBuffer(e)?l(n,e):!1}/*!
	 * Block for `objectEqual` ensuring non-existing
	 * values don't get in.
	 *
	 * @param {Mixed} object
	 * @return {Boolean} result
	 */
function p(n){return null!==n&&void 0!==n}/*!
	 * Recursively check the equality of two objects.
	 * Once basic sameness has been established it will
	 * defer to `deepEqual` for each enumerable key
	 * in the object.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */
function h(n,e,t){if(!p(n)||!p(e))return!1;if(n.prototype!==e.prototype)return!1;var i;if(t){for(i=0;i<t.length;i++)if(t[i][0]===n&&t[i][1]===e||t[i][0]===e&&t[i][1]===n)return!0}else t=[];try{var o=c(n),s=c(e)}catch(a){return!1}if(o.sort(),s.sort(),!l(o,s))return!1;t.push([n,e]);var u;for(i=o.length-1;i>=0;i--)if(u=o[i],!r(n[u],e[u],t))return!1;return!0}/*!
	 * deep-eql
	 * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependencies
	 */
var d,g=e("chaijs~type-detect@0.1.1");try{d=e("buffer").Buffer}catch(m){d={},d.isBuffer=function(){return!1}}/*!
	 * Primary Export
	 */
t.exports=r}),e.register("chai",function(n,t){t.exports=e("chai/lib/chai.js")}),e.register("chai/lib/chai.js",function(n,t){/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var r=[],n=t.exports={};/*!
	 * Chai version
	 */
n.version="2.2.0",/*!
	 * Assertion Error
	 */
n.AssertionError=e("chaijs~assertion-error@1.0.0");/*!
	 * Utils for plugins (not exported)
	 */
var i=e("chai/lib/chai/utils/index.js");n.use=function(n){return~r.indexOf(n)||(n(this,i),r.push(n)),this},/*!
	 * Utility Functions
	 */
n.util=i;/*!
	 * Configuration
	 */
var o=e("chai/lib/chai/config.js");n.config=o;/*!
	 * Primary `Assertion` prototype
	 */
var s=e("chai/lib/chai/assertion.js");n.use(s);/*!
	 * Core Assertions
	 */
var a=e("chai/lib/chai/core/assertions.js");n.use(a);/*!
	 * Expect interface
	 */
var u=e("chai/lib/chai/interface/expect.js");n.use(u);/*!
	 * Should interface
	 */
var c=e("chai/lib/chai/interface/should.js");n.use(c);/*!
	 * Assert interface
	 */
var l=e("chai/lib/chai/interface/assert.js");n.use(l)}),e.register("chai/lib/chai/assertion.js",function(n,t){/*!
	 * chai
	 * http://chaijs.com
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var r=e("chai/lib/chai/config.js");t.exports=function(n,e){/*!
	   * Assertion Constructor
	   *
	   * Creates object for chaining.
	   *
	   * @api private
	   */
function t(n,e,t){o(this,"ssfi",t||arguments.callee),o(this,"object",n),o(this,"message",e)}/*!
	   * Module dependencies.
	   */
var i=n.AssertionError,o=e.flag;/*!
	   * Module export.
	   */
n.Assertion=t,Object.defineProperty(t,"includeStack",{get:function(){return console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),r.includeStack},set:function(n){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),r.includeStack=n}}),Object.defineProperty(t,"showDiff",{get:function(){return console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),r.showDiff},set:function(n){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),r.showDiff=n}}),t.addProperty=function(n,t){e.addProperty(this.prototype,n,t)},t.addMethod=function(n,t){e.addMethod(this.prototype,n,t)},t.addChainableMethod=function(n,t,r){e.addChainableMethod(this.prototype,n,t,r)},t.overwriteProperty=function(n,t){e.overwriteProperty(this.prototype,n,t)},t.overwriteMethod=function(n,t){e.overwriteMethod(this.prototype,n,t)},t.overwriteChainableMethod=function(n,t,r){e.overwriteChainableMethod(this.prototype,n,t,r)},/*!
	   * ### .assert(expression, message, negateMessage, expected, actual)
	   *
	   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.
	   *
	   * @name assert
	   * @param {Philosophical} expression to be tested
	   * @param {String or Function} message or function that returns message to display if expression fails
	   * @param {String or Function} negatedMessage or function that returns negatedMessage to display if negated expression fails
	   * @param {Mixed} expected value (remember to check for negation)
	   * @param {Mixed} actual (optional) will default to `this.obj`
	   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails
	   * @api private
	   */
t.prototype.assert=function(n,t,s,a,u,c){var l=e.test(this,arguments);if(!0!==c&&(c=!1),!0!==r.showDiff&&(c=!1),!l){var t=e.getMessage(this,arguments),f=e.getActual(this,arguments);throw new i(t,{actual:f,expected:a,showDiff:c},r.includeStack?this.assert:o(this,"ssfi"))}},/*!
	   * ### ._obj
	   *
	   * Quick reference to stored `actual` value for plugin developers.
	   *
	   * @api private
	   */
Object.defineProperty(t.prototype,"_obj",{get:function(){return o(this,"object")},set:function(n){o(this,"object",n)}})}}),e.register("chai/lib/chai/config.js",function(n,e){e.exports={includeStack:!1,showDiff:!0,truncateThreshold:40}}),e.register("chai/lib/chai/core/assertions.js",function(n,e){/*!
	 * chai
	 * http://chaijs.com
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e){function t(n,t){t&&k(this,"message",t),n=n.toLowerCase();var r=k(this,"object"),i=~["a","e","i","o","u"].indexOf(n.charAt(0))?"an ":"a ";this.assert(n===e.type(r),"expected #{this} to be "+i+n,"expected #{this} not to be "+i+n)}function r(){k(this,"contains",!0)}function i(n,t){t&&k(this,"message",t);var r=k(this,"object"),i=!1;if("array"===e.type(r)&&"object"===e.type(n)){for(var o in r)if(e.eql(r[o],n)){i=!0;break}}else if("object"===e.type(n)){if(!k(this,"negate")){for(var s in n)new j(r).property(s,n[s]);return}var a={};for(var s in n)a[s]=r[s];i=e.eql(a,n)}else i=r&&~r.indexOf(n);this.assert(i,"expected #{this} to include "+e.inspect(n),"expected #{this} to not include "+e.inspect(n))}function o(){var n=k(this,"object"),e=Object.prototype.toString.call(n);this.assert("[object Arguments]"===e,"expected #{this} to be arguments but got "+e,"expected #{this} to not be arguments")}function s(n,e){e&&k(this,"message",e);var t=k(this,"object");return k(this,"deep")?this.eql(n):void this.assert(n===t,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",n,this._obj,!0)}function a(n,t){t&&k(this,"message",t),this.assert(e.eql(n,k(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",n,this._obj,!0)}function u(n,e){e&&k(this,"message",e);var t=k(this,"object");if(k(this,"doLength")){new j(t,e).to.have.property("length");var r=t.length;this.assert(r>n,"expected #{this} to have a length above #{exp} but got #{act}","expected #{this} to not have a length above #{exp}",n,r)}else this.assert(t>n,"expected #{this} to be above "+n,"expected #{this} to be at most "+n)}function c(n,e){e&&k(this,"message",e);var t=k(this,"object");if(k(this,"doLength")){new j(t,e).to.have.property("length");var r=t.length;this.assert(r>=n,"expected #{this} to have a length at least #{exp} but got #{act}","expected #{this} to have a length below #{exp}",n,r)}else this.assert(t>=n,"expected #{this} to be at least "+n,"expected #{this} to be below "+n)}function l(n,e){e&&k(this,"message",e);var t=k(this,"object");if(k(this,"doLength")){new j(t,e).to.have.property("length");var r=t.length;this.assert(n>r,"expected #{this} to have a length below #{exp} but got #{act}","expected #{this} to not have a length below #{exp}",n,r)}else this.assert(n>t,"expected #{this} to be below "+n,"expected #{this} to be at least "+n)}function f(n,e){e&&k(this,"message",e);var t=k(this,"object");if(k(this,"doLength")){new j(t,e).to.have.property("length");var r=t.length;this.assert(n>=r,"expected #{this} to have a length at most #{exp} but got #{act}","expected #{this} to have a length above #{exp}",n,r)}else this.assert(n>=t,"expected #{this} to be at most "+n,"expected #{this} to be above "+n)}function p(n,t){t&&k(this,"message",t);var r=e.getName(n);this.assert(k(this,"object")instanceof n,"expected #{this} to be an instance of "+r,"expected #{this} to not be an instance of "+r)}function h(n,t){t&&k(this,"message",t);var r=k(this,"object");this.assert(r.hasOwnProperty(n),"expected #{this} to have own property "+e.inspect(n),"expected #{this} to not have own property "+e.inspect(n))}function d(){k(this,"doLength",!0)}function g(n,e){e&&k(this,"message",e);var t=k(this,"object");new j(t,e).to.have.property("length");var r=t.length;this.assert(r==n,"expected #{this} to have a length of #{exp} but got #{act}","expected #{this} to not have a length of #{act}",n,r)}function m(n){var t,r=k(this,"object"),i=!0,o="keys must be given single argument of Array|Object|String, or multiple String arguments";switch(e.type(n)){case"array":if(arguments.length>1)throw new Error(o);break;case"object":if(arguments.length>1)throw new Error(o);n=Object.keys(n);break;default:n=Array.prototype.slice.call(arguments)}if(!n.length)throw new Error("keys required");var s=Object.keys(r),a=n,u=n.length,c=k(this,"any"),l=k(this,"all");if(c||l||(l=!0),c){var f=a.filter(function(n){return~s.indexOf(n)});i=f.length>0}if(l&&(i=n.every(function(n){return~s.indexOf(n)}),k(this,"negate")||k(this,"contains")||(i=i&&n.length==s.length)),u>1){n=n.map(function(n){return e.inspect(n)});var p=n.pop();l&&(t=n.join(", ")+", and "+p),c&&(t=n.join(", ")+", or "+p)}else t=e.inspect(n[0]);t=(u>1?"keys ":"key ")+t,t=(k(this,"contains")?"contain ":"have ")+t,this.assert(i,"expected #{this} to "+t,"expected #{this} to not "+t,a.slice(0).sort(),s.sort(),!0)}function b(n,t,r){r&&k(this,"message",r);var i=k(this,"object");new j(i,r).is.a("function");var o=!1,s=null,a=null,u=null;0===arguments.length?(t=null,n=null):n&&(n instanceof RegExp||"string"==typeof n)?(t=n,n=null):n&&n instanceof Error?(s=n,n=null,t=null):"function"==typeof n?(a=n.prototype.name||n.name,"Error"===a&&n!==Error&&(a=(new n).name)):n=null;try{i()}catch(c){if(s)return this.assert(c===s,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}",s instanceof Error?s.toString():s,c instanceof Error?c.toString():c),k(this,"object",c),this;if(n&&(this.assert(c instanceof n,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp} but #{act} was thrown",a,c instanceof Error?c.toString():c),!t))return k(this,"object",c),this;var l="object"===e.type(c)&&"message"in c?c.message:""+c;if(null!=l&&t&&t instanceof RegExp)return this.assert(t.exec(l),"expected #{this} to throw error matching #{exp} but got #{act}","expected #{this} to throw error not matching #{exp}",t,l),k(this,"object",c),this;if(null!=l&&t&&"string"==typeof t)return this.assert(~l.indexOf(t),"expected #{this} to throw error including #{exp} but got #{act}","expected #{this} to throw error not including #{act}",t,l),k(this,"object",c),this;o=!0,u=c}var f="",p=null!==a?a:s?"#{exp}":"an error";o&&(f=" but #{act} was thrown"),this.assert(o===!0,"expected #{this} to throw "+p+f,"expected #{this} to not throw "+p+f,s instanceof Error?s.toString():s,u instanceof Error?u.toString():u),k(this,"object",u)}function v(n,e,t){return n.every(function(n){return t?e.some(function(e){return t(n,e)}):-1!==e.indexOf(n)})}function y(n,e,t){t&&k(this,"message",t);var r=k(this,"object");new j(n,t).to.have.property(e),new j(r).is.a("function");var i=n[e];r(),this.assert(i!==n[e],"expected ."+e+" to change","expected ."+e+" to not change")}function w(n,e,t){t&&k(this,"message",t);var r=k(this,"object");new j(n,t).to.have.property(e),new j(r).is.a("function");var i=n[e];r(),this.assert(n[e]-i>0,"expected ."+e+" to increase","expected ."+e+" to not increase")}function x(n,e,t){t&&k(this,"message",t);var r=k(this,"object");new j(n,t).to.have.property(e),new j(r).is.a("function");var i=n[e];r(),this.assert(n[e]-i<0,"expected ."+e+" to decrease","expected ."+e+" to not decrease")}var j=n.Assertion,k=(Object.prototype.toString,e.flag);["to","be","been","is","and","has","have","with","that","which","at","of","same"].forEach(function(n){j.addProperty(n,function(){return this})}),j.addProperty("not",function(){k(this,"negate",!0)}),j.addProperty("deep",function(){k(this,"deep",!0)}),j.addProperty("any",function(){k(this,"any",!0),k(this,"all",!1)}),j.addProperty("all",function(){k(this,"all",!0),k(this,"any",!1)}),j.addChainableMethod("an",t),j.addChainableMethod("a",t),j.addChainableMethod("include",i,r),j.addChainableMethod("contain",i,r),j.addChainableMethod("contains",i,r),j.addChainableMethod("includes",i,r),j.addProperty("ok",function(){this.assert(k(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")}),j.addProperty("true",function(){this.assert(!0===k(this,"object"),"expected #{this} to be true","expected #{this} to be false",this.negate?!1:!0)}),j.addProperty("false",function(){this.assert(!1===k(this,"object"),"expected #{this} to be false","expected #{this} to be true",this.negate?!0:!1)}),j.addProperty("null",function(){this.assert(null===k(this,"object"),"expected #{this} to be null","expected #{this} not to be null")}),j.addProperty("undefined",function(){this.assert(void 0===k(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")}),j.addProperty("exist",function(){this.assert(null!=k(this,"object"),"expected #{this} to exist","expected #{this} to not exist")}),j.addProperty("empty",function(){var n=k(this,"object"),e=n;Array.isArray(n)||"string"==typeof object?e=n.length:"object"==typeof n&&(e=Object.keys(n).length),this.assert(!e,"expected #{this} to be empty","expected #{this} not to be empty")}),j.addProperty("arguments",o),j.addProperty("Arguments",o),j.addMethod("equal",s),j.addMethod("equals",s),j.addMethod("eq",s),j.addMethod("eql",a),j.addMethod("eqls",a),j.addMethod("above",u),j.addMethod("gt",u),j.addMethod("greaterThan",u),j.addMethod("least",c),j.addMethod("gte",c),j.addMethod("below",l),j.addMethod("lt",l),j.addMethod("lessThan",l),j.addMethod("most",f),j.addMethod("lte",f),j.addMethod("within",function(n,e,t){t&&k(this,"message",t);var r=k(this,"object"),i=n+".."+e;if(k(this,"doLength")){new j(r,t).to.have.property("length");var o=r.length;this.assert(o>=n&&e>=o,"expected #{this} to have a length within "+i,"expected #{this} to not have a length within "+i)}else this.assert(r>=n&&e>=r,"expected #{this} to be within "+i,"expected #{this} to not be within "+i)}),j.addMethod("instanceof",p),j.addMethod("instanceOf",p),j.addMethod("property",function(n,t,r){r&&k(this,"message",r);var i=!!k(this,"deep"),o=i?"deep property ":"property ",s=k(this,"negate"),a=k(this,"object"),u=i?e.getPathInfo(n,a):null,c=i?u.exists:e.hasProperty(n,a),l=i?u.value:a[n];if(s&&void 0!==t){if(void 0===l)throw r=null!=r?r+": ":"",new Error(r+e.inspect(a)+" has no "+o+e.inspect(n))}else this.assert(c,"expected #{this} to have a "+o+e.inspect(n),"expected #{this} to not have "+o+e.inspect(n));void 0!==t&&this.assert(t===l,"expected #{this} to have a "+o+e.inspect(n)+" of #{exp}, but got #{act}","expected #{this} to not have a "+o+e.inspect(n)+" of #{act}",t,l),k(this,"object",l)}),j.addMethod("ownProperty",h),j.addMethod("haveOwnProperty",h),j.addChainableMethod("length",g,d),j.addMethod("lengthOf",g),j.addMethod("match",function(n,e){e&&k(this,"message",e);var t=k(this,"object");this.assert(n.exec(t),"expected #{this} to match "+n,"expected #{this} not to match "+n)}),j.addMethod("string",function(n,t){t&&k(this,"message",t);var r=k(this,"object");new j(r,t).is.a("string"),this.assert(~r.indexOf(n),"expected #{this} to contain "+e.inspect(n),"expected #{this} to not contain "+e.inspect(n))}),j.addMethod("keys",m),j.addMethod("key",m),j.addMethod("throw",b),j.addMethod("throws",b),j.addMethod("Throw",b),j.addMethod("respondTo",function(n,t){t&&k(this,"message",t);var r=k(this,"object"),i=k(this,"itself"),o="function"!==e.type(r)||i?r[n]:r.prototype[n];this.assert("function"==typeof o,"expected #{this} to respond to "+e.inspect(n),"expected #{this} to not respond to "+e.inspect(n))}),j.addProperty("itself",function(){k(this,"itself",!0)}),j.addMethod("satisfy",function(n,t){t&&k(this,"message",t);var r=k(this,"object"),i=n(r);this.assert(i,"expected #{this} to satisfy "+e.objDisplay(n),"expected #{this} to not satisfy"+e.objDisplay(n),this.negate?!1:!0,i)}),j.addMethod("closeTo",function(n,t,r){r&&k(this,"message",r);var i=k(this,"object");if(new j(i,r).is.a("number"),"number"!==e.type(n)||"number"!==e.type(t))throw new Error("the arguments to closeTo must be numbers");this.assert(Math.abs(i-n)<=t,"expected #{this} to be close to "+n+" +/- "+t,"expected #{this} not to be close to "+n+" +/- "+t)}),j.addMethod("members",function(n,t){t&&k(this,"message",t);var r=k(this,"object");new j(r).to.be.an("array"),new j(n).to.be.an("array");var i=k(this,"deep")?e.eql:void 0;return k(this,"contains")?this.assert(v(n,r,i),"expected #{this} to be a superset of #{act}","expected #{this} to not be a superset of #{act}",r,n):void this.assert(v(r,n,i)&&v(n,r,i),"expected #{this} to have the same members as #{act}","expected #{this} to not have the same members as #{act}",r,n)}),j.addChainableMethod("change",y),j.addChainableMethod("changes",y),j.addChainableMethod("increase",w),j.addChainableMethod("increases",w),j.addChainableMethod("decrease",x),j.addChainableMethod("decreases",x)}}),e.register("chai/lib/chai/interface/assert.js",function(n,e){/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e){/*!
	   * Chai dependencies.
	   */
var t=n.Assertion,r=e.flag,i=n.assert=function(e,r){var i=new t(null,null,n.assert);i.assert(e,r,"[ negation message unavailable ]")};i.fail=function(e,t,r,o){throw r=r||"assert.fail()",new n.AssertionError(r,{actual:e,expected:t,operator:o},i.fail)},i.ok=function(n,e){new t(n,e).is.ok},i.notOk=function(n,e){new t(n,e).is.not.ok},i.equal=function(n,e,o){var s=new t(n,o,i.equal);s.assert(e==r(s,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",e,n)},i.notEqual=function(n,e,o){var s=new t(n,o,i.notEqual);s.assert(e!=r(s,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",e,n)},i.strictEqual=function(n,e,r){new t(n,r).to.equal(e)},i.notStrictEqual=function(n,e,r){new t(n,r).to.not.equal(e)},i.deepEqual=function(n,e,r){new t(n,r).to.eql(e)},i.notDeepEqual=function(n,e,r){new t(n,r).to.not.eql(e)},i.isAbove=function(n,e,r){new t(n,r).to.be.above(e)},i.isBelow=function(n,e,r){new t(n,r).to.be.below(e)},i.isTrue=function(n,e){new t(n,e).is["true"]},i.isFalse=function(n,e){new t(n,e).is["false"]},i.isNull=function(n,e){new t(n,e).to.equal(null)},i.isNotNull=function(n,e){new t(n,e).to.not.equal(null)},i.isUndefined=function(n,e){new t(n,e).to.equal(void 0)},i.isDefined=function(n,e){new t(n,e).to.not.equal(void 0)},i.isFunction=function(n,e){new t(n,e).to.be.a("function")},i.isNotFunction=function(n,e){new t(n,e).to.not.be.a("function")},i.isObject=function(n,e){new t(n,e).to.be.a("object")},i.isNotObject=function(n,e){new t(n,e).to.not.be.a("object")},i.isArray=function(n,e){new t(n,e).to.be.an("array")},i.isNotArray=function(n,e){new t(n,e).to.not.be.an("array")},i.isString=function(n,e){new t(n,e).to.be.a("string")},i.isNotString=function(n,e){new t(n,e).to.not.be.a("string")},i.isNumber=function(n,e){new t(n,e).to.be.a("number")},i.isNotNumber=function(n,e){new t(n,e).to.not.be.a("number")},i.isBoolean=function(n,e){new t(n,e).to.be.a("boolean")},i.isNotBoolean=function(n,e){new t(n,e).to.not.be.a("boolean")},i.typeOf=function(n,e,r){new t(n,r).to.be.a(e)},i.notTypeOf=function(n,e,r){new t(n,r).to.not.be.a(e)},i.instanceOf=function(n,e,r){new t(n,r).to.be.instanceOf(e)},i.notInstanceOf=function(n,e,r){new t(n,r).to.not.be.instanceOf(e)},i.include=function(n,e,r){new t(n,r,i.include).include(e)},i.notInclude=function(n,e,r){new t(n,r,i.notInclude).not.include(e)},i.match=function(n,e,r){new t(n,r).to.match(e)},i.notMatch=function(n,e,r){new t(n,r).to.not.match(e)},i.property=function(n,e,r){new t(n,r).to.have.property(e)},i.notProperty=function(n,e,r){new t(n,r).to.not.have.property(e)},i.deepProperty=function(n,e,r){new t(n,r).to.have.deep.property(e)},i.notDeepProperty=function(n,e,r){new t(n,r).to.not.have.deep.property(e)},i.propertyVal=function(n,e,r,i){new t(n,i).to.have.property(e,r)},i.propertyNotVal=function(n,e,r,i){new t(n,i).to.not.have.property(e,r)},i.deepPropertyVal=function(n,e,r,i){new t(n,i).to.have.deep.property(e,r)},i.deepPropertyNotVal=function(n,e,r,i){new t(n,i).to.not.have.deep.property(e,r)},i.lengthOf=function(n,e,r){new t(n,r).to.have.length(e)},i.Throw=function(n,e,i,o){("string"==typeof e||e instanceof RegExp)&&(i=e,e=null);var s=new t(n,o).to.Throw(e,i);return r(s,"object")},i.doesNotThrow=function(n,e,r){"string"==typeof e&&(r=e,e=null),new t(n,r).to.not.Throw(e)},i.operator=function(n,i,o,s){var a;switch(i){case"==":a=n==o;break;case"===":a=n===o;break;case">":a=n>o;break;case">=":a=n>=o;break;case"<":a=o>n;break;case"<=":a=o>=n;break;case"!=":a=n!=o;break;case"!==":a=n!==o;break;default:throw new Error('Invalid operator "'+i+'"')}var u=new t(a,s);u.assert(!0===r(u,"object"),"expected "+e.inspect(n)+" to be "+i+" "+e.inspect(o),"expected "+e.inspect(n)+" to not be "+i+" "+e.inspect(o))},i.closeTo=function(n,e,r,i){new t(n,i).to.be.closeTo(e,r)},i.sameMembers=function(n,e,r){new t(n,r).to.have.same.members(e)},i.sameDeepMembers=function(n,e,r){new t(n,r).to.have.same.deep.members(e)},i.includeMembers=function(n,e,r){new t(n,r).to.include.members(e)},i.changes=function(n,e,r){new t(n).to.change(e,r)},i.doesNotChange=function(n,e,r){new t(n).to.not.change(e,r)},i.increases=function(n,e,r){new t(n).to.increase(e,r)},i.doesNotIncrease=function(n,e,r){new t(n).to.not.increase(e,r)},i.decreases=function(n,e,r){new t(n).to.decrease(e,r)},i.doesNotDecrease=function(n,e,r){new t(n).to.not.decrease(e,r)},/*!
	   * Undocumented / untested
	   */
i.ifError=function(n,e){new t(n,e).to.not.be.ok},/*!
	   * Aliases.
	   */
function o(n,e){return i[e]=i[n],o}("Throw","throw")("Throw","throws")}}),e.register("chai/lib/chai/interface/expect.js",function(n,e){/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e){n.expect=function(e,t){return new n.Assertion(e,t)},n.expect.fail=function(e,t,r,i){throw r=r||"expect.fail()",new n.AssertionError(r,{actual:e,expected:t,operator:i},n.expect.fail)}}}),e.register("chai/lib/chai/interface/should.js",function(n,e){/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e){function t(){function e(){return this instanceof String||this instanceof Number||this instanceof Boolean?new r(this.valueOf(),null,e):new r(this,null,e)}function t(n){Object.defineProperty(this,"should",{value:n,enumerable:!0,configurable:!0,writable:!0})}Object.defineProperty(Object.prototype,"should",{set:t,get:e,configurable:!0});var i={};return i.fail=function(e,t,r,o){throw r=r||"should.fail()",new n.AssertionError(r,{actual:e,expected:t,operator:o},i.fail)},i.equal=function(n,e,t){new r(n,t).to.equal(e)},i.Throw=function(n,e,t,i){new r(n,i).to.Throw(e,t)},i.exist=function(n,e){new r(n,e).to.exist},i.not={},i.not.equal=function(n,e,t){new r(n,t).to.not.equal(e)},i.not.Throw=function(n,e,t,i){new r(n,i).to.not.Throw(e,t)},i.not.exist=function(n,e){new r(n,e).to.not.exist},i["throw"]=i.Throw,i.not["throw"]=i.not.Throw,i}var r=n.Assertion;n.should=t,n.Should=t}}),e.register("chai/lib/chai/utils/addChainableMethod.js",function(n,t){/*!
	 * Chai - addChainingMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependencies
	 */
var r=e("chai/lib/chai/utils/transferFlags.js"),i=e("chai/lib/chai/utils/flag.js"),o=e("chai/lib/chai/config.js"),s="__proto__"in Object,a=/^(?:length|name|arguments|caller)$/,u=Function.prototype.call,c=Function.prototype.apply;t.exports=function(n,e,t,l){"function"!=typeof l&&(l=function(){});var f={method:t,chainingBehavior:l};n.__methods||(n.__methods={}),n.__methods[e]=f,Object.defineProperty(n,e,{get:function(){f.chainingBehavior.call(this);var e=function p(){var n=i(this,"ssfi");n&&o.includeStack===!1&&i(this,"ssfi",p);var e=f.method.apply(this,arguments);return void 0===e?this:e};if(s){var t=e.__proto__=Object.create(this);t.call=u,t.apply=c}else{var l=Object.getOwnPropertyNames(n);l.forEach(function(t){if(!a.test(t)){var r=Object.getOwnPropertyDescriptor(n,t);Object.defineProperty(e,t,r)}})}return r(this,e),e},configurable:!0})}}),e.register("chai/lib/chai/utils/addMethod.js",function(n,t){/*!
	 * Chai - addMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var r=e("chai/lib/chai/config.js"),i=e("chai/lib/chai/utils/flag.js");t.exports=function(n,e,t){n[e]=function(){var o=i(this,"ssfi");o&&r.includeStack===!1&&i(this,"ssfi",n[e]);var s=t.apply(this,arguments);return void 0===s?this:s}}}),e.register("chai/lib/chai/utils/addProperty.js",function(n,e){/*!
	 * Chai - addProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e,t){Object.defineProperty(n,e,{get:function(){var n=t.call(this);return void 0===n?this:n},configurable:!0})}}),e.register("chai/lib/chai/utils/flag.js",function(n,e){/*!
	 * Chai - flag utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e,t){var r=n.__flags||(n.__flags=Object.create(null));return 3!==arguments.length?r[e]:void(r[e]=t)}}),e.register("chai/lib/chai/utils/getActual.js",function(n,e){/*!
	 * Chai - getActual utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e){return e.length>4?e[4]:n._obj}}),e.register("chai/lib/chai/utils/getEnumerableProperties.js",function(n,e){/*!
	 * Chai - getEnumerableProperties utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n){var e=[];for(var t in n)e.push(t);return e}}),e.register("chai/lib/chai/utils/getMessage.js",function(n,t){/*!
	 * Chai - message composition utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependancies
	 */
var r=e("chai/lib/chai/utils/flag.js"),i=e("chai/lib/chai/utils/getActual.js"),o=(e("chai/lib/chai/utils/inspect.js"),e("chai/lib/chai/utils/objDisplay.js"));t.exports=function(n,e){var t=r(n,"negate"),s=r(n,"object"),a=e[3],u=i(n,e),c=t?e[2]:e[1],l=r(n,"message");return"function"==typeof c&&(c=c()),c=c||"",c=c.replace(/#{this}/g,o(s)).replace(/#{act}/g,o(u)).replace(/#{exp}/g,o(a)),l?l+": "+c:c}}),e.register("chai/lib/chai/utils/getName.js",function(n,e){/*!
	 * Chai - getName utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n){if(n.name)return n.name;var e=/^\s?function ([^(]*)\(/.exec(n);return e&&e[1]?e[1]:""}}),e.register("chai/lib/chai/utils/getPathValue.js",function(n,t){/*!
	 * Chai - getPathValue utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * @see https://github.com/logicalparadox/filtr
	 * MIT Licensed
	 */
var r=e("chai/lib/chai/utils/getPathInfo.js");t.exports=function(n,e){var t=r(n,e);return t.value}}),e.register("chai/lib/chai/utils/getPathInfo.js",function(n,t){/*!
	 * ## parsePath(path)
	 *
	 * Helper function used to parse string object
	 * paths. Use in conjunction with `_getPathValue`.
	 *
	 *      var parsed = parsePath('myobject.property.subprop');
	 *
	 * ### Paths:
	 *
	 * * Can be as near infinitely deep and nested
	 * * Arrays are also valid using the formal `myobject.document[3].property`.
	 * * Literal dots and brackets (not delimiter) must be backslash-escaped.
	 *
	 * @param {String} path
	 * @returns {Object} parsed
	 * @api private
	 */
function r(n){var e=n.replace(/([^\\])\[/g,"$1.["),t=e.match(/(\\\.|[^.]+?)+/g);return t.map(function(n){var e=/^\[(\d+)\]$/,t=e.exec(n);return t?{i:parseFloat(t[1])}:{p:n.replace(/\\([.\[\]])/g,"$1")}})}/*!
	 * ## _getPathValue(parsed, obj)
	 *
	 * Helper companion function for `.parsePath` that returns
	 * the value located at the parsed address.
	 *
	 *      var value = getPathValue(parsed, obj);
	 *
	 * @param {Object} parsed definition from `parsePath`.
	 * @param {Object} object to search against
	 * @param {Number} object to search against
	 * @returns {Object|Undefined} value
	 * @api private
	 */
function i(n,e,t){var r,i=e;t=void 0===t?n.length:t;for(var o=0,s=t;s>o;o++){var a=n[o];i?("undefined"!=typeof a.p?i=i[a.p]:"undefined"!=typeof a.i&&(i=i[a.i]),o==s-1&&(r=i)):r=void 0}return r}/*!
	 * Chai - getPathInfo utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var o=e("chai/lib/chai/utils/hasProperty.js");t.exports=function(n,e){var t=r(n),s=t[t.length-1],a={parent:t.length>1?i(t,e,t.length-1):e,name:s.p||s.i,value:i(t,e)};return a.exists=o(a.name,a.parent),a}}),e.register("chai/lib/chai/utils/hasProperty.js",function(n,t){/*!
	 * Chai - hasProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var r=e("chai/lib/chai/utils/type.js"),i={number:Number,string:String};t.exports=function(n,e){var t=r(e);return"null"===t||"undefined"===t?!1:(i[t]&&"object"!=typeof e&&(e=new i[t](e)),n in e)}}),e.register("chai/lib/chai/utils/getProperties.js",function(n,e){/*!
	 * Chai - getProperties utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n){function e(n){-1===t.indexOf(n)&&t.push(n)}for(var t=Object.getOwnPropertyNames(subject),r=Object.getPrototypeOf(subject);null!==r;)Object.getOwnPropertyNames(r).forEach(e),r=Object.getPrototypeOf(r);return t}}),e.register("chai/lib/chai/utils/index.js",function(n,t){/*!
	 * chai
	 * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Main exports
	 */
var n=t.exports={};/*!
	 * test utility
	 */
n.test=e("chai/lib/chai/utils/test.js"),/*!
	 * type utility
	 */
n.type=e("chai/lib/chai/utils/type.js"),/*!
	 * message utility
	 */
n.getMessage=e("chai/lib/chai/utils/getMessage.js"),/*!
	 * actual utility
	 */
n.getActual=e("chai/lib/chai/utils/getActual.js"),/*!
	 * Inspect util
	 */
n.inspect=e("chai/lib/chai/utils/inspect.js"),/*!
	 * Object Display util
	 */
n.objDisplay=e("chai/lib/chai/utils/objDisplay.js"),/*!
	 * Flag utility
	 */
n.flag=e("chai/lib/chai/utils/flag.js"),/*!
	 * Flag transferring utility
	 */
n.transferFlags=e("chai/lib/chai/utils/transferFlags.js"),/*!
	 * Deep equal utility
	 */
n.eql=e("chaijs~deep-eql@0.1.3"),/*!
	 * Deep path value
	 */
n.getPathValue=e("chai/lib/chai/utils/getPathValue.js"),/*!
	 * Deep path info
	 */
n.getPathInfo=e("chai/lib/chai/utils/getPathInfo.js"),/*!
	 * Check if a property exists
	 */
n.hasProperty=e("chai/lib/chai/utils/hasProperty.js"),/*!
	 * Function name
	 */
n.getName=e("chai/lib/chai/utils/getName.js"),/*!
	 * add Property
	 */
n.addProperty=e("chai/lib/chai/utils/addProperty.js"),/*!
	 * add Method
	 */
n.addMethod=e("chai/lib/chai/utils/addMethod.js"),/*!
	 * overwrite Property
	 */
n.overwriteProperty=e("chai/lib/chai/utils/overwriteProperty.js"),/*!
	 * overwrite Method
	 */
n.overwriteMethod=e("chai/lib/chai/utils/overwriteMethod.js"),/*!
	 * Add a chainable method
	 */
n.addChainableMethod=e("chai/lib/chai/utils/addChainableMethod.js"),/*!
	 * Overwrite chainable method
	 */
n.overwriteChainableMethod=e("chai/lib/chai/utils/overwriteChainableMethod.js")}),e.register("chai/lib/chai/utils/inspect.js",function(n,t){function r(n,e,t,r){var o={showHidden:e,seen:[],stylize:function(n){return n}};return i(o,n,"undefined"==typeof t?2:t)}function i(e,t,r){if(t&&"function"==typeof t.inspect&&t.inspect!==n.inspect&&(!t.constructor||t.constructor.prototype!==t)){var d=t.inspect(r);return"string"!=typeof d&&(d=i(e,d,r)),d}var y=o(e,t);if(y)return y;if(v(t)){if("outerHTML"in t)return t.outerHTML;try{if(document.xmlVersion){var w=new XMLSerializer;return w.serializeToString(t)}var x="http://www.w3.org/1999/xhtml",j=document.createElementNS(x,"_");return j.appendChild(t.cloneNode(!1)),html=j.innerHTML.replace("><",">"+t.innerHTML+"<"),j.innerHTML="",html}catch(k){}}var S=b(t),E=e.showHidden?m(t):S;if(0===E.length||h(t)&&(1===E.length&&"stack"===E[0]||2===E.length&&"description"===E[0]&&"stack"===E[1])){if("function"==typeof t){var O=g(t),T=O?": "+O:"";return e.stylize("[Function"+T+"]","special")}if(f(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(p(t))return e.stylize(Date.prototype.toUTCString.call(t),"date");if(h(t))return s(t)}var q="",M=!1,P=["{","}"];if(l(t)&&(M=!0,P=["[","]"]),"function"==typeof t){var O=g(t),T=O?": "+O:"";q=" [Function"+T+"]"}if(f(t)&&(q=" "+RegExp.prototype.toString.call(t)),p(t)&&(q=" "+Date.prototype.toUTCString.call(t)),h(t))return s(t);if(0===E.length&&(!M||0==t.length))return P[0]+q+P[1];if(0>r)return f(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special");e.seen.push(t);var R;return R=M?a(e,t,r,S,E):E.map(function(n){return u(e,t,r,S,n,M)}),e.seen.pop(),c(R,q,P)}function o(n,e){switch(typeof e){case"undefined":return n.stylize("undefined","undefined");case"string":var t="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return n.stylize(t,"string");case"number":return 0===e&&1/e===-(1/0)?n.stylize("-0","number"):n.stylize(""+e,"number");case"boolean":return n.stylize(""+e,"boolean")}return null===e?n.stylize("null","null"):void 0}function s(n){return"["+Error.prototype.toString.call(n)+"]"}function a(n,e,t,r,i){for(var o=[],s=0,a=e.length;a>s;++s)o.push(Object.prototype.hasOwnProperty.call(e,String(s))?u(n,e,t,r,String(s),!0):"");return i.forEach(function(i){i.match(/^\d+$/)||o.push(u(n,e,t,r,i,!0))}),o}function u(n,e,t,r,o,s){var a,u;if(e.__lookupGetter__&&(e.__lookupGetter__(o)?u=e.__lookupSetter__(o)?n.stylize("[Getter/Setter]","special"):n.stylize("[Getter]","special"):e.__lookupSetter__(o)&&(u=n.stylize("[Setter]","special"))),r.indexOf(o)<0&&(a="["+o+"]"),u||(n.seen.indexOf(e[o])<0?(u=null===t?i(n,e[o],null):i(n,e[o],t-1),u.indexOf("\n")>-1&&(u=s?u.split("\n").map(function(n){return"  "+n}).join("\n").substr(2):"\n"+u.split("\n").map(function(n){return"   "+n}).join("\n"))):u=n.stylize("[Circular]","special")),"undefined"==typeof a){if(s&&o.match(/^\d+$/))return u;a=JSON.stringify(""+o),a.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=n.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=n.stylize(a,"string"))}return a+": "+u}function c(n,e,t){var r=0,i=n.reduce(function(n,e){return r++,e.indexOf("\n")>=0&&r++,n+e.length+1},0);return i>60?t[0]+(""===e?"":e+"\n ")+" "+n.join(",\n  ")+" "+t[1]:t[0]+e+" "+n.join(", ")+" "+t[1]}function l(n){return Array.isArray(n)||"object"==typeof n&&"[object Array]"===d(n)}function f(n){return"object"==typeof n&&"[object RegExp]"===d(n)}function p(n){return"object"==typeof n&&"[object Date]"===d(n)}function h(n){return"object"==typeof n&&"[object Error]"===d(n)}function d(n){return Object.prototype.toString.call(n)}var g=e("chai/lib/chai/utils/getName.js"),m=e("chai/lib/chai/utils/getProperties.js"),b=e("chai/lib/chai/utils/getEnumerableProperties.js");t.exports=r;var v=function(n){return"object"==typeof HTMLElement?n instanceof HTMLElement:n&&"object"==typeof n&&1===n.nodeType&&"string"==typeof n.nodeName}}),e.register("chai/lib/chai/utils/objDisplay.js",function(n,t){/*!
	 * Chai - flag utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependancies
	 */
var r=e("chai/lib/chai/utils/inspect.js"),i=e("chai/lib/chai/config.js");t.exports=function(n){var e=r(n),t=Object.prototype.toString.call(n);if(i.truncateThreshold&&e.length>=i.truncateThreshold){if("[object Function]"===t)return n.name&&""!==n.name?"[Function: "+n.name+"]":"[Function]";if("[object Array]"===t)return"[ Array("+n.length+") ]";if("[object Object]"===t){var o=Object.keys(n),s=o.length>2?o.splice(0,2).join(", ")+", ...":o.join(", ");return"{ Object ("+s+") }"}return e}return e}}),e.register("chai/lib/chai/utils/overwriteMethod.js",function(n,e){/*!
	 * Chai - overwriteMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e,t){var r=n[e],i=function(){return this};r&&"function"==typeof r&&(i=r),n[e]=function(){var n=t(i).apply(this,arguments);return void 0===n?this:n}}}),e.register("chai/lib/chai/utils/overwriteProperty.js",function(n,e){/*!
	 * Chai - overwriteProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e,t){var r=Object.getOwnPropertyDescriptor(n,e),i=function(){};r&&"function"==typeof r.get&&(i=r.get),Object.defineProperty(n,e,{get:function(){var n=t(i).call(this);return void 0===n?this:n},configurable:!0})}}),e.register("chai/lib/chai/utils/overwriteChainableMethod.js",function(n,e){/*!
	 * Chai - overwriteChainableMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e,t,r){var i=n.__methods[e],o=i.chainingBehavior;i.chainingBehavior=function(){var n=r(o).call(this);return void 0===n?this:n};var s=i.method;i.method=function(){var n=t(s).apply(this,arguments);return void 0===n?this:n}}}),e.register("chai/lib/chai/utils/test.js",function(n,t){/*!
	 * Chai - test utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependancies
	 */
var r=e("chai/lib/chai/utils/flag.js");t.exports=function(n,e){var t=r(n,"negate"),i=e[0];return t?!i:i}}),e.register("chai/lib/chai/utils/transferFlags.js",function(n,e){/*!
	 * Chai - transferFlags utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
e.exports=function(n,e,t){var r=n.__flags||(n.__flags=Object.create(null));e.__flags||(e.__flags=Object.create(null)),t=3===arguments.length?t:!0;for(var i in r)(t||"object"!==i&&"ssfi"!==i&&"message"!=i)&&(e.__flags[i]=r[i])}}),e.register("chai/lib/chai/utils/type.js",function(n,e){/*!
	 * Chai - type utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Detectable javascript natives
	 */
var t={"[object Arguments]":"arguments","[object Array]":"array","[object Date]":"date","[object Function]":"function","[object Number]":"number","[object RegExp]":"regexp","[object String]":"string"};e.exports=function(n){var e=Object.prototype.toString.call(n);return t[e]?t[e]:null===n?"null":void 0===n?"undefined":n===Object(n)?"object":typeof n}}),n.exports=e("chai")}()},12:function(n,e,t){n.exports=t.p+"test.html"},13:function(n,e,t){var r=t(14);"string"==typeof r&&(r=[[n.id,r,""]]);t(21)(r,{})},14:function(n,e,t){e=n.exports=t(25)(),e.push([n.id,"@charset \"utf-8\";body{margin:0}#mocha{font:20px/1.5 \"Helvetica Neue\",Helvetica,Arial,sans-serif;margin:60px 50px}#mocha ul,#mocha li{margin:0;padding:0}#mocha ul{list-style:none}#mocha h2{margin:0}#mocha h1{margin:15px 0 0;font-size:1em;font-weight:200}#mocha h1 a{text-decoration:none;color:inherit}#mocha h1 a:hover{text-decoration:underline}#mocha .suite .suite h1{margin-top:0;font-size:.8em}#mocha .hidden{display:none}#mocha h2{font-size:12px;font-weight:400;cursor:pointer}#mocha .suite,#mocha .test{margin-left:15px}#mocha .test{overflow:hidden}#mocha .test.pending:hover h2::after{content:'(pending)';font-family:arial,sans-serif}#mocha .test.pass.medium .duration{background:#c09853}#mocha .test.pass.slow .duration{background:#b94a48}#mocha .test.pass::before{content:'✓';font-size:12px;display:block;float:left;margin-right:5px;color:#00d6b2}#mocha .test.pass .duration{font-size:9px;margin-left:5px;padding:2px 5px;color:#fff;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.2);-moz-box-shadow:inset 0 1px 1px rgba(0,0,0,.2);box-shadow:inset 0 1px 1px rgba(0,0,0,.2);-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;-o-border-radius:5px;border-radius:5px}#mocha .test.pass.fast .duration{display:none}#mocha .test.pending{color:#0b97c4}#mocha .test.pending::before{content:'◦';color:#0b97c4}#mocha .test.fail{color:#c00}#mocha .test.fail pre{color:#000}#mocha .test.fail::before{content:'✖';font-size:12px;display:block;float:left;margin-right:5px;color:#c00}#mocha .test pre.error{color:#c00;max-height:300px;overflow:auto}#mocha .test pre{display:block;float:left;clear:left;font:12px/1.5 monaco,monospace;margin:5px;padding:15px;border:1px solid #eee;max-width:calc(100% - 42px);word-wrap:break-word;border-bottom-color:#ddd;-webkit-border-radius:3px;-webkit-box-shadow:0 1px 3px #eee;-moz-border-radius:3px;-moz-box-shadow:0 1px 3px #eee;border-radius:3px}#mocha .test h2{position:relative}#mocha .test a.replay{position:absolute;top:3px;right:0;text-decoration:none;vertical-align:middle;display:block;width:15px;height:15px;line-height:15px;text-align:center;background:#eee;font-size:15px;-moz-border-radius:15px;border-radius:15px;-webkit-transition:opacity 200ms;-moz-transition:opacity 200ms;transition:opacity 200ms;opacity:.3;color:#888}#mocha .test:hover a.replay{opacity:1}#mocha-report.pass .test.fail,#mocha-report.fail .test.pass,#mocha-report.pending .test.pass,#mocha-report.pending .test.fail{display:none}#mocha-report.pending .test.pass.pending{display:block}#mocha-error{color:#c00;font-size:1.5em;font-weight:100;letter-spacing:1px}#mocha-stats{position:fixed;top:15px;right:10px;font-size:12px;margin:0;color:#888;z-index:1}#mocha-stats .progress{float:right;padding-top:0}#mocha-stats em{color:#000}#mocha-stats a{text-decoration:none;color:inherit}#mocha-stats a:hover{border-bottom:1px solid #eee}#mocha-stats li{display:inline-block;margin:0 5px;list-style:none;padding-top:11px}#mocha-stats canvas{width:40px;height:40px}#mocha code .comment{color:#ddd}#mocha code .init{color:#2f6fad}#mocha code .string{color:#5890ad}#mocha code .keyword{color:#8a6343}#mocha code .number{color:#2f6fad}@media screen and (max-device-width:480px){#mocha{margin:60px 0}#mocha #stats{position:absolute}}",""])},19:function(n,e,t){function r(){if(!a){a=!0;for(var n,e=s.length;e;){n=s,s=[];for(var t=-1;++t<e;)n[t]();e=s.length}a=!1}}function i(){}var o=n.exports={},s=[],a=!1;o.nextTick=function(n){s.push(n),a||setTimeout(r,0)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=i,o.addListener=i,o.once=i,o.off=i,o.removeListener=i,o.removeAllListeners=i,o.emit=i,o.binding=function(n){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(n){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},20:function(n,e,t){t(22)(t(23))},21:function(n,e,t){function r(n,e){for(var t=0;t<n.length;t++){var r=n[t],i=l[r.id];if(i){i.refs++;for(var o=0;o<i.parts.length;o++)i.parts[o](r.parts[o]);for(;o<r.parts.length;o++)i.parts.push(s(r.parts[o],e))}else{for(var a=[],o=0;o<r.parts.length;o++)a.push(s(r.parts[o],e));l[r.id]={id:r.id,refs:1,parts:a}}}}function i(n){for(var e=[],t={},r=0;r<n.length;r++){var i=n[r],o=i[0],s=i[1],a=i[2],u=i[3],c={css:s,media:a,sourceMap:u};t[o]?t[o].parts.push(c):e.push(t[o]={id:o,parts:[c]})}return e}function o(){var n=document.createElement("style"),e=h();return n.type="text/css",e.appendChild(n),n}function s(n,e){var t,r,i;if(e.singleton){var s=g++;t=d||(d=o()),r=u.bind(null,t,s,!1),i=u.bind(null,t,s,!0)}else t=o(),r=c.bind(null,t),i=function(){t.parentNode.removeChild(t)};return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else i()}}function a(n,e,t){var r=["/** >>"+e+" **/","/** "+e+"<< **/"],i=n.lastIndexOf(r[0]),o=t?r[0]+t+r[1]:"";if(n.lastIndexOf(r[0])>=0){var s=n.lastIndexOf(r[1])+r[1].length;return n.slice(0,i)+o+n.slice(s)}return n+o}function u(n,e,t,r){var i=t?"":r.css;if(n.styleSheet)n.styleSheet.cssText=a(n.styleSheet.cssText,e,i);else{var o=document.createTextNode(i),s=n.childNodes;s[e]&&n.removeChild(s[e]),s.length?n.insertBefore(o,s[e]):n.appendChild(o)}}function c(n,e){var t=e.css,r=e.media,i=e.sourceMap;if(i&&"function"==typeof btoa)try{t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(JSON.stringify(i))+" */",t='@import url("data:text/css;base64,'+btoa(t)+'")'}catch(o){}if(r&&n.setAttribute("media",r),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var l={},f=function(n){var e;return function(){return"undefined"==typeof e&&(e=n.apply(this,arguments)),e}},p=f(function(){return/msie 9\b/.test(window.navigator.userAgent.toLowerCase())}),h=f(function(){return document.head||document.getElementsByTagName("head")[0]}),d=null,g=0;n.exports=function(n,e){e=e||{},"undefined"==typeof e.singleton&&(e.singleton=p());var t=i(n);return r(t,e),function(n){for(var o=[],s=0;s<t.length;s++){var a=t[s],u=l[a.id];u.refs--,o.push(u)}if(n){var c=i(n);r(c,e)}for(var s=0;s<o.length;s++){var u=o[s];if(0===u.refs){for(var f=0;f<u.parts.length;f++)u.parts[f]();delete l[u.id]}}}}},22:function(n,e,t){n.exports=function(n){"function"==typeof execScript?execScript(n):eval.call(null,n)}},23:function(n,e,t){n.exports=";(function(){\n\n// CommonJS require()\n\nfunction require(p){\n    var path = require.resolve(p)\n      , mod = require.modules[path];\n    if (!mod) throw new Error('failed to require \"' + p + '\"');\n    if (!mod.exports) {\n      mod.exports = {};\n      mod.call(mod.exports, mod, mod.exports, require.relative(path));\n    }\n    return mod.exports;\n  }\n\nrequire.modules = {};\n\nrequire.resolve = function (path){\n    var orig = path\n      , reg = path + '.js'\n      , index = path + '/index.js';\n    return require.modules[reg] && reg\n      || require.modules[index] && index\n      || orig;\n  };\n\nrequire.register = function (path, fn){\n    require.modules[path] = fn;\n  };\n\nrequire.relative = function (parent) {\n    return function(p){\n      if ('.' != p.charAt(0)) return require(p);\n\n      var path = parent.split('/')\n        , segs = p.split('/');\n      path.pop();\n\n      for (var i = 0; i < segs.length; i++) {\n        var seg = segs[i];\n        if ('..' == seg) path.pop();\n        else if ('.' != seg) path.push(seg);\n      }\n\n      return require(path.join('/'));\n    };\n  };\n\n\nrequire.register(\"browser/debug.js\", function(module, exports, require){\nmodule.exports = function(type){\n  return function(){\n  }\n};\n\n}); // module: browser/debug.js\n\nrequire.register(\"browser/diff.js\", function(module, exports, require){\n/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n *\n * JsDiff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\nvar JsDiff = (function() {\n  /*jshint maxparams: 5*/\n  function clonePath(path) {\n    return { newPos: path.newPos, components: path.components.slice(0) };\n  }\n  function removeEmpty(array) {\n    var ret = [];\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  }\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n\n    return n;\n  }\n\n  var Diff = function(ignoreWhitespace) {\n    this.ignoreWhitespace = ignoreWhitespace;\n  };\n  Diff.prototype = {\n      diff: function(oldString, newString) {\n        // Handle the identity case (this is due to unrolling editLength == 0\n        if (newString === oldString) {\n          return [{ value: newString }];\n        }\n        if (!newString) {\n          return [{ value: oldString, removed: true }];\n        }\n        if (!oldString) {\n          return [{ value: newString, added: true }];\n        }\n\n        newString = this.tokenize(newString);\n        oldString = this.tokenize(oldString);\n\n        var newLen = newString.length, oldLen = oldString.length;\n        var maxEditLength = newLen + oldLen;\n        var bestPath = [{ newPos: -1, components: [] }];\n\n        // Seed editLength = 0\n        var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n        if (bestPath[0].newPos+1 >= newLen && oldPos+1 >= oldLen) {\n          return bestPath[0].components;\n        }\n\n        for (var editLength = 1; editLength <= maxEditLength; editLength++) {\n          for (var diagonalPath = -1*editLength; diagonalPath <= editLength; diagonalPath+=2) {\n            var basePath;\n            var addPath = bestPath[diagonalPath-1],\n                removePath = bestPath[diagonalPath+1];\n            oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n            if (addPath) {\n              // No one else is going to attempt to use this value, clear it\n              bestPath[diagonalPath-1] = undefined;\n            }\n\n            var canAdd = addPath && addPath.newPos+1 < newLen;\n            var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n            if (!canAdd && !canRemove) {\n              bestPath[diagonalPath] = undefined;\n              continue;\n            }\n\n            // Select the diagonal that we want to branch from. We select the prior\n            // path whose position in the new string is the farthest from the origin\n            // and does not pass the bounds of the diff graph\n            if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n              basePath = clonePath(removePath);\n              this.pushComponent(basePath.components, oldString[oldPos], undefined, true);\n            } else {\n              basePath = clonePath(addPath);\n              basePath.newPos++;\n              this.pushComponent(basePath.components, newString[basePath.newPos], true, undefined);\n            }\n\n            var oldPos = this.extractCommon(basePath, newString, oldString, diagonalPath);\n\n            if (basePath.newPos+1 >= newLen && oldPos+1 >= oldLen) {\n              return basePath.components;\n            } else {\n              bestPath[diagonalPath] = basePath;\n            }\n          }\n        }\n      },\n\n      pushComponent: function(components, value, added, removed) {\n        var last = components[components.length-1];\n        if (last && last.added === added && last.removed === removed) {\n          // We need to clone here as the component clone operation is just\n          // as shallow array clone\n          components[components.length-1] =\n            {value: this.join(last.value, value), added: added, removed: removed };\n        } else {\n          components.push({value: value, added: added, removed: removed });\n        }\n      },\n      extractCommon: function(basePath, newString, oldString, diagonalPath) {\n        var newLen = newString.length,\n            oldLen = oldString.length,\n            newPos = basePath.newPos,\n            oldPos = newPos - diagonalPath;\n        while (newPos+1 < newLen && oldPos+1 < oldLen && this.equals(newString[newPos+1], oldString[oldPos+1])) {\n          newPos++;\n          oldPos++;\n\n          this.pushComponent(basePath.components, newString[newPos], undefined, undefined);\n        }\n        basePath.newPos = newPos;\n        return oldPos;\n      },\n\n      equals: function(left, right) {\n        var reWhitespace = /\\S/;\n        if (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right)) {\n          return true;\n        } else {\n          return left === right;\n        }\n      },\n      join: function(left, right) {\n        return left + right;\n      },\n      tokenize: function(value) {\n        return value;\n      }\n  };\n\n  var CharDiff = new Diff();\n\n  var WordDiff = new Diff(true);\n  var WordWithSpaceDiff = new Diff();\n  WordDiff.tokenize = WordWithSpaceDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/(\\s+|\\b)/));\n  };\n\n  var CssDiff = new Diff(true);\n  CssDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/([{}:;,]|\\s+)/));\n  };\n\n  var LineDiff = new Diff();\n  LineDiff.tokenize = function(value) {\n    var retLines = [],\n        lines = value.split(/^/m);\n\n    for(var i = 0; i < lines.length; i++) {\n      var line = lines[i],\n          lastLine = lines[i - 1];\n\n      // Merge lines that may contain windows new lines\n      if (line == '\\n' && lastLine && lastLine[lastLine.length - 1] === '\\r') {\n        retLines[retLines.length - 1] += '\\n';\n      } else if (line) {\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  return {\n    Diff: Diff,\n\n    diffChars: function(oldStr, newStr) { return CharDiff.diff(oldStr, newStr); },\n    diffWords: function(oldStr, newStr) { return WordDiff.diff(oldStr, newStr); },\n    diffWordsWithSpace: function(oldStr, newStr) { return WordWithSpaceDiff.diff(oldStr, newStr); },\n    diffLines: function(oldStr, newStr) { return LineDiff.diff(oldStr, newStr); },\n\n    diffCss: function(oldStr, newStr) { return CssDiff.diff(oldStr, newStr); },\n\n    createPatch: function(fileName, oldStr, newStr, oldHeader, newHeader) {\n      var ret = [];\n\n      ret.push('Index: ' + fileName);\n      ret.push('===================================================================');\n      ret.push('--- ' + fileName + (typeof oldHeader === 'undefined' ? '' : '\\t' + oldHeader));\n      ret.push('+++ ' + fileName + (typeof newHeader === 'undefined' ? '' : '\\t' + newHeader));\n\n      var diff = LineDiff.diff(oldStr, newStr);\n      if (!diff[diff.length-1].value) {\n        diff.pop();   // Remove trailing newline add\n      }\n      diff.push({value: '', lines: []});   // Append an empty value to make cleanup easier\n\n      function contextLines(lines) {\n        return lines.map(function(entry) { return ' ' + entry; });\n      }\n      function eofNL(curRange, i, current) {\n        var last = diff[diff.length-2],\n            isLast = i === diff.length-2,\n            isLastOfType = i === diff.length-3 && (current.added !== last.added || current.removed !== last.removed);\n\n        // Figure out if this is the last line for the given file and missing NL\n        if (!/\\n$/.test(current.value) && (isLast || isLastOfType)) {\n          curRange.push('\\\\ No newline at end of file');\n        }\n      }\n\n      var oldRangeStart = 0, newRangeStart = 0, curRange = [],\n          oldLine = 1, newLine = 1;\n      for (var i = 0; i < diff.length; i++) {\n        var current = diff[i],\n            lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n        current.lines = lines;\n\n        if (current.added || current.removed) {\n          if (!oldRangeStart) {\n            var prev = diff[i-1];\n            oldRangeStart = oldLine;\n            newRangeStart = newLine;\n\n            if (prev) {\n              curRange = contextLines(prev.lines.slice(-4));\n              oldRangeStart -= curRange.length;\n              newRangeStart -= curRange.length;\n            }\n          }\n          curRange.push.apply(curRange, lines.map(function(entry) { return (current.added?'+':'-') + entry; }));\n          eofNL(curRange, i, current);\n\n          if (current.added) {\n            newLine += lines.length;\n          } else {\n            oldLine += lines.length;\n          }\n        } else {\n          if (oldRangeStart) {\n            // Close out any changes that have been output (or join overlapping)\n            if (lines.length <= 8 && i < diff.length-2) {\n              // Overlapping\n              curRange.push.apply(curRange, contextLines(lines));\n            } else {\n              // end the range and output\n              var contextSize = Math.min(lines.length, 4);\n              ret.push(\n                  '@@ -' + oldRangeStart + ',' + (oldLine-oldRangeStart+contextSize)\n                  + ' +' + newRangeStart + ',' + (newLine-newRangeStart+contextSize)\n                  + ' @@');\n              ret.push.apply(ret, curRange);\n              ret.push.apply(ret, contextLines(lines.slice(0, contextSize)));\n              if (lines.length <= 4) {\n                eofNL(ret, i, current);\n              }\n\n              oldRangeStart = 0;  newRangeStart = 0; curRange = [];\n            }\n          }\n          oldLine += lines.length;\n          newLine += lines.length;\n        }\n      }\n\n      return ret.join('\\n') + '\\n';\n    },\n\n    applyPatch: function(oldStr, uniDiff) {\n      var diffstr = uniDiff.split('\\n');\n      var diff = [];\n      var remEOFNL = false,\n          addEOFNL = false;\n\n      for (var i = (diffstr[0][0]==='I'?4:0); i < diffstr.length; i++) {\n        if(diffstr[i][0] === '@') {\n          var meh = diffstr[i].split(/@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@/);\n          diff.unshift({\n            start:meh[3],\n            oldlength:meh[2],\n            oldlines:[],\n            newlength:meh[4],\n            newlines:[]\n          });\n        } else if(diffstr[i][0] === '+') {\n          diff[0].newlines.push(diffstr[i].substr(1));\n        } else if(diffstr[i][0] === '-') {\n          diff[0].oldlines.push(diffstr[i].substr(1));\n        } else if(diffstr[i][0] === ' ') {\n          diff[0].newlines.push(diffstr[i].substr(1));\n          diff[0].oldlines.push(diffstr[i].substr(1));\n        } else if(diffstr[i][0] === '\\\\') {\n          if (diffstr[i-1][0] === '+') {\n            remEOFNL = true;\n          } else if(diffstr[i-1][0] === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n\n      var str = oldStr.split('\\n');\n      for (var i = diff.length - 1; i >= 0; i--) {\n        var d = diff[i];\n        for (var j = 0; j < d.oldlength; j++) {\n          if(str[d.start-1+j] !== d.oldlines[j]) {\n            return false;\n          }\n        }\n        Array.prototype.splice.apply(str,[d.start-1,+d.oldlength].concat(d.newlines));\n      }\n\n      if (remEOFNL) {\n        while (!str[str.length-1]) {\n          str.pop();\n        }\n      } else if (addEOFNL) {\n        str.push('');\n      }\n      return str.join('\\n');\n    },\n\n    convertChangesToXML: function(changes){\n      var ret = [];\n      for ( var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n        if (change.added) {\n          ret.push('<ins>');\n        } else if (change.removed) {\n          ret.push('<del>');\n        }\n\n        ret.push(escapeHTML(change.value));\n\n        if (change.added) {\n          ret.push('</ins>');\n        } else if (change.removed) {\n          ret.push('</del>');\n        }\n      }\n      return ret.join('');\n    },\n\n    // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n    convertChangesToDMP: function(changes){\n      var ret = [], change;\n      for ( var i = 0; i < changes.length; i++) {\n        change = changes[i];\n        ret.push([(change.added ? 1 : change.removed ? -1 : 0), change.value]);\n      }\n      return ret;\n    }\n  };\n})();\n\nif (typeof module !== 'undefined') {\n    module.exports = JsDiff;\n}\n\n}); // module: browser/diff.js\n\nrequire.register(\"browser/escape-string-regexp.js\", function(module, exports, require){\n'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  return str.replace(matchOperatorsRe,  '\\\\$&');\n};\n\n}); // module: browser/escape-string-regexp.js\n\nrequire.register(\"browser/events.js\", function(module, exports, require){\n/**\n * Module exports.\n */\n\nexports.EventEmitter = EventEmitter;\n\n/**\n * Check if `obj` is an array.\n */\n\nfunction isArray(obj) {\n  return '[object Array]' == {}.toString.call(obj);\n}\n\n/**\n * Event emitter constructor.\n *\n * @api public\n */\n\nfunction EventEmitter(){};\n\n/**\n * Adds a listener.\n *\n * @api public\n */\n\nEventEmitter.prototype.on = function (name, fn) {\n  if (!this.$events) {\n    this.$events = {};\n  }\n\n  if (!this.$events[name]) {\n    this.$events[name] = fn;\n  } else if (isArray(this.$events[name])) {\n    this.$events[name].push(fn);\n  } else {\n    this.$events[name] = [this.$events[name], fn];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n/**\n * Adds a volatile listener.\n *\n * @api public\n */\n\nEventEmitter.prototype.once = function (name, fn) {\n  var self = this;\n\n  function on () {\n    self.removeListener(name, on);\n    fn.apply(this, arguments);\n  };\n\n  on.listener = fn;\n  this.on(name, on);\n\n  return this;\n};\n\n/**\n * Removes a listener.\n *\n * @api public\n */\n\nEventEmitter.prototype.removeListener = function (name, fn) {\n  if (this.$events && this.$events[name]) {\n    var list = this.$events[name];\n\n    if (isArray(list)) {\n      var pos = -1;\n\n      for (var i = 0, l = list.length; i < l; i++) {\n        if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\n          pos = i;\n          break;\n        }\n      }\n\n      if (pos < 0) {\n        return this;\n      }\n\n      list.splice(pos, 1);\n\n      if (!list.length) {\n        delete this.$events[name];\n      }\n    } else if (list === fn || (list.listener && list.listener === fn)) {\n      delete this.$events[name];\n    }\n  }\n\n  return this;\n};\n\n/**\n * Removes all listeners for an event.\n *\n * @api public\n */\n\nEventEmitter.prototype.removeAllListeners = function (name) {\n  if (name === undefined) {\n    this.$events = {};\n    return this;\n  }\n\n  if (this.$events && this.$events[name]) {\n    this.$events[name] = null;\n  }\n\n  return this;\n};\n\n/**\n * Gets all listeners for a certain event.\n *\n * @api public\n */\n\nEventEmitter.prototype.listeners = function (name) {\n  if (!this.$events) {\n    this.$events = {};\n  }\n\n  if (!this.$events[name]) {\n    this.$events[name] = [];\n  }\n\n  if (!isArray(this.$events[name])) {\n    this.$events[name] = [this.$events[name]];\n  }\n\n  return this.$events[name];\n};\n\n/**\n * Emits an event.\n *\n * @api public\n */\n\nEventEmitter.prototype.emit = function (name) {\n  if (!this.$events) {\n    return false;\n  }\n\n  var handler = this.$events[name];\n\n  if (!handler) {\n    return false;\n  }\n\n  var args = [].slice.call(arguments, 1);\n\n  if ('function' == typeof handler) {\n    handler.apply(this, args);\n  } else if (isArray(handler)) {\n    var listeners = handler.slice();\n\n    for (var i = 0, l = listeners.length; i < l; i++) {\n      listeners[i].apply(this, args);\n    }\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\n}); // module: browser/events.js\n\nrequire.register(\"browser/fs.js\", function(module, exports, require){\n\n}); // module: browser/fs.js\n\nrequire.register(\"browser/glob.js\", function(module, exports, require){\n\n}); // module: browser/glob.js\n\nrequire.register(\"browser/path.js\", function(module, exports, require){\n\n}); // module: browser/path.js\n\nrequire.register(\"browser/progress.js\", function(module, exports, require){\n/**\n * Expose `Progress`.\n */\n\nmodule.exports = Progress;\n\n/**\n * Initialize a new `Progress` indicator.\n */\n\nfunction Progress() {\n  this.percent = 0;\n  this.size(0);\n  this.fontSize(11);\n  this.font('helvetica, arial, sans-serif');\n}\n\n/**\n * Set progress size to `n`.\n *\n * @param {Number} n\n * @return {Progress} for chaining\n * @api public\n */\n\nProgress.prototype.size = function(n){\n  this._size = n;\n  return this;\n};\n\n/**\n * Set text to `str`.\n *\n * @param {String} str\n * @return {Progress} for chaining\n * @api public\n */\n\nProgress.prototype.text = function(str){\n  this._text = str;\n  return this;\n};\n\n/**\n * Set font size to `n`.\n *\n * @param {Number} n\n * @return {Progress} for chaining\n * @api public\n */\n\nProgress.prototype.fontSize = function(n){\n  this._fontSize = n;\n  return this;\n};\n\n/**\n * Set font `family`.\n *\n * @param {String} family\n * @return {Progress} for chaining\n */\n\nProgress.prototype.font = function(family){\n  this._font = family;\n  return this;\n};\n\n/**\n * Update percentage to `n`.\n *\n * @param {Number} n\n * @return {Progress} for chaining\n */\n\nProgress.prototype.update = function(n){\n  this.percent = n;\n  return this;\n};\n\n/**\n * Draw on `ctx`.\n *\n * @param {CanvasRenderingContext2d} ctx\n * @return {Progress} for chaining\n */\n\nProgress.prototype.draw = function(ctx){\n  try {\n    var percent = Math.min(this.percent, 100)\n      , size = this._size\n      , half = size / 2\n      , x = half\n      , y = half\n      , rad = half - 1\n      , fontSize = this._fontSize;\n\n    ctx.font = fontSize + 'px ' + this._font;\n\n    var angle = Math.PI * 2 * (percent / 100);\n    ctx.clearRect(0, 0, size, size);\n\n    // outer circle\n    ctx.strokeStyle = '#9f9f9f';\n    ctx.beginPath();\n    ctx.arc(x, y, rad, 0, angle, false);\n    ctx.stroke();\n\n    // inner circle\n    ctx.strokeStyle = '#eee';\n    ctx.beginPath();\n    ctx.arc(x, y, rad - 1, 0, angle, true);\n    ctx.stroke();\n\n    // text\n    var text = this._text || (percent | 0) + '%'\n      , w = ctx.measureText(text).width;\n\n    ctx.fillText(\n        text\n      , x - w / 2 + 1\n      , y + fontSize / 2 - 1);\n  } catch (ex) {} //don't fail if we can't render progress\n  return this;\n};\n\n}); // module: browser/progress.js\n\nrequire.register(\"browser/tty.js\", function(module, exports, require){\nexports.isatty = function(){\n  return true;\n};\n\nexports.getWindowSize = function(){\n  if ('innerHeight' in global) {\n    return [global.innerHeight, global.innerWidth];\n  } else {\n    // In a Web Worker, the DOM Window is not available.\n    return [640, 480];\n  }\n};\n\n}); // module: browser/tty.js\n\nrequire.register(\"context.js\", function(module, exports, require){\n/**\n * Expose `Context`.\n */\n\nmodule.exports = Context;\n\n/**\n * Initialize a new `Context`.\n *\n * @api private\n */\n\nfunction Context(){}\n\n/**\n * Set or get the context `Runnable` to `runnable`.\n *\n * @param {Runnable} runnable\n * @return {Context}\n * @api private\n */\n\nContext.prototype.runnable = function(runnable){\n  if (0 == arguments.length) return this._runnable;\n  this.test = this._runnable = runnable;\n  return this;\n};\n\n/**\n * Set test timeout `ms`.\n *\n * @param {Number} ms\n * @return {Context} self\n * @api private\n */\n\nContext.prototype.timeout = function(ms){\n  if (arguments.length === 0) return this.runnable().timeout();\n  this.runnable().timeout(ms);\n  return this;\n};\n\n/**\n * Set test timeout `enabled`.\n *\n * @param {Boolean} enabled\n * @return {Context} self\n * @api private\n */\n\nContext.prototype.enableTimeouts = function (enabled) {\n  this.runnable().enableTimeouts(enabled);\n  return this;\n};\n\n\n/**\n * Set test slowness threshold `ms`.\n *\n * @param {Number} ms\n * @return {Context} self\n * @api private\n */\n\nContext.prototype.slow = function(ms){\n  this.runnable().slow(ms);\n  return this;\n};\n\n/**\n * Mark a test as skipped.\n *\n * @return {Context} self\n * @api private\n */\n\nContext.prototype.skip = function(){\n    this.runnable().skip();\n    return this;\n};\n\n/**\n * Inspect the context void of `._runnable`.\n *\n * @return {String}\n * @api private\n */\n\nContext.prototype.inspect = function(){\n  return JSON.stringify(this, function(key, val){\n    if ('_runnable' == key) return;\n    if ('test' == key) return;\n    return val;\n  }, 2);\n};\n\n}); // module: context.js\n\nrequire.register(\"hook.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\n\n/**\n * Expose `Hook`.\n */\n\nmodule.exports = Hook;\n\n/**\n * Initialize a new `Hook` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\n\nfunction Hook(title, fn) {\n  Runnable.call(this, title, fn);\n  this.type = 'hook';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\n\nfunction F(){};\nF.prototype = Runnable.prototype;\nHook.prototype = new F;\nHook.prototype.constructor = Hook;\n\n\n/**\n * Get or set the test `err`.\n *\n * @param {Error} err\n * @return {Error}\n * @api public\n */\n\nHook.prototype.error = function(err){\n  if (0 == arguments.length) {\n    var err = this._error;\n    this._error = null;\n    return err;\n  }\n\n  this._error = err;\n};\n\n}); // module: hook.js\n\nrequire.register(\"interfaces/bdd.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite')\n  , Test = require('../test')\n  , utils = require('../utils')\n  , escapeRe = require('browser/escape-string-regexp');\n\n/**\n * BDD-style interface:\n *\n *      describe('Array', function(){\n *        describe('#indexOf()', function(){\n *          it('should return -1 when not present', function(){\n *\n *          });\n *\n *          it('should return the index when present', function(){\n *\n *          });\n *        });\n *      });\n *\n */\n\nmodule.exports = function(suite){\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha){\n\n    var common = require('./common')(suites, context);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.describe = context.context = function(title, fn){\n      var suite = Suite.create(suites[0], title);\n      suite.file = file;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n      return suite;\n    };\n\n    /**\n     * Pending describe.\n     */\n\n    context.xdescribe =\n    context.xcontext =\n    context.describe.skip = function(title, fn){\n      var suite = Suite.create(suites[0], title);\n      suite.pending = true;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n    };\n\n    /**\n     * Exclusive suite.\n     */\n\n    context.describe.only = function(title, fn){\n      var suite = context.describe(title, fn);\n      mocha.grep(suite.fullTitle());\n      return suite;\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.it = context.specify = function(title, fn){\n      var suite = suites[0];\n      if (suite.pending) fn = null;\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.it.only = function(title, fn){\n      var test = context.it(title, fn);\n      var reString = '^' + escapeRe(test.fullTitle()) + '$';\n      mocha.grep(new RegExp(reString));\n      return test;\n    };\n\n    /**\n     * Pending test case.\n     */\n\n    context.xit =\n    context.xspecify =\n    context.it.skip = function(title){\n      context.it(title);\n    };\n\n  });\n};\n\n}); // module: interfaces/bdd.js\n\nrequire.register(\"interfaces/common.js\", function(module, exports, require){\n/**\n * Functions common to more than one interface\n * @module lib/interfaces/common\n */\n\n'use strict';\n\nmodule.exports = function (suites, context) {\n\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha.  It triggers\n     * root suite execution.  Returns a function which runs the root suite.\n     */\n    runWithSuite: function runWithSuite(suite) {\n      return function run() {\n        suite.run();\n      };\n    },\n\n    /**\n     * Execute before running tests.\n     */\n    before: function (name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n\n    /**\n     * Execute after running tests.\n     */\n    after: function (name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n\n    /**\n     * Execute before each test case.\n     */\n    beforeEach: function (name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n\n    /**\n     * Execute after each test case.\n     */\n    afterEach: function (name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n\n    test: {\n      /**\n       * Pending test case.\n       */\n      skip: function (title) {\n        context.test(title);\n      }\n    }\n  }\n};\n\n}); // module: interfaces/common.js\n\nrequire.register(\"interfaces/exports.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite')\n  , Test = require('../test');\n\n/**\n * TDD-style interface:\n *\n *     exports.Array = {\n *       '#indexOf()': {\n *         'should return -1 when the value is not present': function(){\n *\n *         },\n *\n *         'should return the correct index when the value is present': function(){\n *\n *         }\n *       }\n *     };\n *\n */\n\nmodule.exports = function(suite){\n  var suites = [suite];\n\n  suite.on('require', visit);\n\n  function visit(obj, file) {\n    var suite;\n    for (var key in obj) {\n      if ('function' == typeof obj[key]) {\n        var fn = obj[key];\n        switch (key) {\n          case 'before':\n            suites[0].beforeAll(fn);\n            break;\n          case 'after':\n            suites[0].afterAll(fn);\n            break;\n          case 'beforeEach':\n            suites[0].beforeEach(fn);\n            break;\n          case 'afterEach':\n            suites[0].afterEach(fn);\n            break;\n          default:\n            var test = new Test(key, fn);\n            test.file = file;\n            suites[0].addTest(test);\n        }\n      } else {\n        suite = Suite.create(suites[0], key);\n        suites.unshift(suite);\n        visit(obj[key]);\n        suites.shift();\n      }\n    }\n  }\n};\n\n}); // module: interfaces/exports.js\n\nrequire.register(\"interfaces/index.js\", function(module, exports, require){\nexports.bdd = require('./bdd');\nexports.tdd = require('./tdd');\nexports.qunit = require('./qunit');\nexports.exports = require('./exports');\n\n}); // module: interfaces/index.js\n\nrequire.register(\"interfaces/qunit.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite')\n  , Test = require('../test')\n  , escapeRe = require('browser/escape-string-regexp')\n  , utils = require('../utils');\n\n/**\n * QUnit-style interface:\n *\n *     suite('Array');\n *\n *     test('#length', function(){\n *       var arr = [1,2,3];\n *       ok(arr.length == 3);\n *     });\n *\n *     test('#indexOf()', function(){\n *       var arr = [1,2,3];\n *       ok(arr.indexOf(1) == 0);\n *       ok(arr.indexOf(2) == 1);\n *       ok(arr.indexOf(3) == 2);\n *     });\n *\n *     suite('String');\n *\n *     test('#length', function(){\n *       ok('foo'.length == 3);\n *     });\n *\n */\n\nmodule.exports = function(suite){\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha){\n\n    var common = require('./common')(suites, context);\n\n    context.before = common.before;\n    context.after = common.after;\n    context.beforeEach = common.beforeEach;\n    context.afterEach = common.afterEach;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`.\n     */\n\n    context.suite = function(title){\n      if (suites.length > 1) suites.shift();\n      var suite = Suite.create(suites[0], title);\n      suite.file = file;\n      suites.unshift(suite);\n      return suite;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.suite.only = function(title, fn){\n      var suite = context.suite(title, fn);\n      mocha.grep(suite.fullTitle());\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.test = function(title, fn){\n      var test = new Test(title, fn);\n      test.file = file;\n      suites[0].addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.test.only = function(title, fn){\n      var test = context.test(title, fn);\n      var reString = '^' + escapeRe(test.fullTitle()) + '$';\n      mocha.grep(new RegExp(reString));\n    };\n\n    context.test.skip = common.test.skip;\n\n  });\n};\n\n}); // module: interfaces/qunit.js\n\nrequire.register(\"interfaces/tdd.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite')\n  , Test = require('../test')\n  , escapeRe = require('browser/escape-string-regexp')\n  , utils = require('../utils');\n\n/**\n * TDD-style interface:\n *\n *      suite('Array', function(){\n *        suite('#indexOf()', function(){\n *          suiteSetup(function(){\n *\n *          });\n *\n *          test('should return -1 when not present', function(){\n *\n *          });\n *\n *          test('should return the index when present', function(){\n *\n *          });\n *\n *          suiteTeardown(function(){\n *\n *          });\n *        });\n *      });\n *\n */\n\nmodule.exports = function(suite){\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha){\n\n    var common = require('./common')(suites, context);\n\n    context.setup = common.beforeEach;\n    context.teardown = common.afterEach;\n    context.suiteSetup = common.before;\n    context.suiteTeardown = common.after;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n    /**\n     * Describe a \"suite\" with the given `title`\n     * and callback `fn` containing nested suites\n     * and/or tests.\n     */\n\n    context.suite = function(title, fn){\n      var suite = Suite.create(suites[0], title);\n      suite.file = file;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n      return suite;\n    };\n\n    /**\n     * Pending suite.\n     */\n    context.suite.skip = function(title, fn) {\n      var suite = Suite.create(suites[0], title);\n      suite.pending = true;\n      suites.unshift(suite);\n      fn.call(suite);\n      suites.shift();\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.suite.only = function(title, fn){\n      var suite = context.suite(title, fn);\n      mocha.grep(suite.fullTitle());\n    };\n\n    /**\n     * Describe a specification or test-case\n     * with the given `title` and callback `fn`\n     * acting as a thunk.\n     */\n\n    context.test = function(title, fn){\n      var suite = suites[0];\n      if (suite.pending) fn = null;\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.test.only = function(title, fn){\n      var test = context.test(title, fn);\n      var reString = '^' + escapeRe(test.fullTitle()) + '$';\n      mocha.grep(new RegExp(reString));\n    };\n\n    context.test.skip = common.test.skip;\n  });\n};\n\n}); // module: interfaces/tdd.js\n\nrequire.register(\"mocha.js\", function(module, exports, require){\n/*!\n * mocha\n * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar path = require('browser/path')\n  , escapeRe = require('browser/escape-string-regexp')\n  , utils = require('./utils');\n\n/**\n * Expose `Mocha`.\n */\n\nexports = module.exports = Mocha;\n\n/**\n * To require local UIs and reporters when running in node.\n */\n\nif (typeof process !== 'undefined' && typeof process.cwd === 'function') {\n  var join = path.join\n    , cwd = process.cwd();\n  module.paths.push(cwd, join(cwd, 'node_modules'));\n}\n\n/**\n * Expose internals.\n */\n\nexports.utils = utils;\nexports.interfaces = require('./interfaces');\nexports.reporters = require('./reporters');\nexports.Runnable = require('./runnable');\nexports.Context = require('./context');\nexports.Runner = require('./runner');\nexports.Suite = require('./suite');\nexports.Hook = require('./hook');\nexports.Test = require('./test');\n\n/**\n * Return image `name` path.\n *\n * @param {String} name\n * @return {String}\n * @api private\n */\n\nfunction image(name) {\n  return __dirname + '/../images/' + name + '.png';\n}\n\n/**\n * Setup mocha with `options`.\n *\n * Options:\n *\n *   - `ui` name \"bdd\", \"tdd\", \"exports\" etc\n *   - `reporter` reporter instance, defaults to `mocha.reporters.spec`\n *   - `globals` array of accepted globals\n *   - `timeout` timeout in milliseconds\n *   - `bail` bail on the first test failure\n *   - `slow` milliseconds to wait before considering a test slow\n *   - `ignoreLeaks` ignore global leaks\n *   - `fullTrace` display the full stack-trace on failing\n *   - `grep` string or regexp to filter tests with\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Mocha(options) {\n  options = options || {};\n  this.files = [];\n  this.options = options;\n  if (options.grep) this.grep(new RegExp(options.grep));\n  if (options.fgrep) this.grep(options.fgrep);\n  this.suite = new exports.Suite('', new exports.Context);\n  this.ui(options.ui);\n  this.bail(options.bail);\n  this.reporter(options.reporter, options.reporterOptions);\n  if (null != options.timeout) this.timeout(options.timeout);\n  this.useColors(options.useColors);\n  if (options.enableTimeouts !== null) this.enableTimeouts(options.enableTimeouts);\n  if (options.slow) this.slow(options.slow);\n\n  this.suite.on('pre-require', function (context) {\n    exports.afterEach = context.afterEach || context.teardown;\n    exports.after = context.after || context.suiteTeardown;\n    exports.beforeEach = context.beforeEach || context.setup;\n    exports.before = context.before || context.suiteSetup;\n    exports.describe = context.describe || context.suite;\n    exports.it = context.it || context.test;\n    exports.setup = context.setup || context.beforeEach;\n    exports.suiteSetup = context.suiteSetup || context.before;\n    exports.suiteTeardown = context.suiteTeardown || context.after;\n    exports.suite = context.suite || context.describe;\n    exports.teardown = context.teardown || context.afterEach;\n    exports.test = context.test || context.it;\n    exports.run = context.run;\n  });\n}\n\n/**\n * Enable or disable bailing on the first failure.\n *\n * @param {Boolean} [bail]\n * @api public\n */\n\nMocha.prototype.bail = function(bail){\n  if (0 == arguments.length) bail = true;\n  this.suite.bail(bail);\n  return this;\n};\n\n/**\n * Add test `file`.\n *\n * @param {String} file\n * @api public\n */\n\nMocha.prototype.addFile = function(file){\n  this.files.push(file);\n  return this;\n};\n\n/**\n * Set reporter to `reporter`, defaults to \"spec\".\n *\n * @param {String|Function} reporter name or constructor\n * @param {Object} reporterOptions optional options\n * @api public\n */\nMocha.prototype.reporter = function(reporter, reporterOptions){\n  if ('function' == typeof reporter) {\n    this._reporter = reporter;\n  } else {\n    reporter = reporter || 'spec';\n    var _reporter;\n    try { _reporter = require('./reporters/' + reporter); } catch (err) {}\n    if (!_reporter) try { _reporter = require(reporter); } catch (err) {\n      err.message.indexOf('Cannot find module') !== -1\n        ? console.warn('\"' + reporter + '\" reporter not found')\n        : console.warn('\"' + reporter + '\" reporter blew up with error:\\n' + err.stack);\n    }\n    if (!_reporter && reporter === 'teamcity')\n      console.warn('The Teamcity reporter was moved to a package named ' +\n        'mocha-teamcity-reporter ' +\n        '(https://npmjs.org/package/mocha-teamcity-reporter).');\n    if (!_reporter) throw new Error('invalid reporter \"' + reporter + '\"');\n    this._reporter = _reporter;\n  }\n  this.options.reporterOptions = reporterOptions;\n  return this;\n};\n\n/**\n * Set test UI `name`, defaults to \"bdd\".\n *\n * @param {String} bdd\n * @api public\n */\n\nMocha.prototype.ui = function(name){\n  name = name || 'bdd';\n  this._ui = exports.interfaces[name];\n  if (!this._ui) try { this._ui = require(name); } catch (err) {}\n  if (!this._ui) throw new Error('invalid interface \"' + name + '\"');\n  this._ui = this._ui(this.suite);\n  return this;\n};\n\n/**\n * Load registered files.\n *\n * @api private\n */\n\nMocha.prototype.loadFiles = function(fn){\n  var self = this;\n  var suite = this.suite;\n  var pending = this.files.length;\n  this.files.forEach(function(file){\n    file = path.resolve(file);\n    suite.emit('pre-require', global, file, self);\n    suite.emit('require', require(file), file, self);\n    suite.emit('post-require', global, file, self);\n    --pending || (fn && fn());\n  });\n};\n\n/**\n * Enable growl support.\n *\n * @api private\n */\n\nMocha.prototype._growl = function(runner, reporter) {\n  var notify = require('growl');\n\n  runner.on('end', function(){\n    var stats = reporter.stats;\n    if (stats.failures) {\n      var msg = stats.failures + ' of ' + runner.total + ' tests failed';\n      notify(msg, { name: 'mocha', title: 'Failed', image: image('error') });\n    } else {\n      notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {\n          name: 'mocha'\n        , title: 'Passed'\n        , image: image('ok')\n      });\n    }\n  });\n};\n\n/**\n * Add regexp to grep, if `re` is a string it is escaped.\n *\n * @param {RegExp|String} re\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.grep = function(re){\n  this.options.grep = 'string' == typeof re\n    ? new RegExp(escapeRe(re))\n    : re;\n  return this;\n};\n\n/**\n * Invert `.grep()` matches.\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.invert = function(){\n  this.options.invert = true;\n  return this;\n};\n\n/**\n * Ignore global leaks.\n *\n * @param {Boolean} ignore\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.ignoreLeaks = function(ignore){\n  this.options.ignoreLeaks = !!ignore;\n  return this;\n};\n\n/**\n * Enable global leak checking.\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.checkLeaks = function(){\n  this.options.ignoreLeaks = false;\n  return this;\n};\n\n/**\n * Display long stack-trace on failing\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.fullTrace = function() {\n  this.options.fullStackTrace = true;\n  return this;\n};\n\n/**\n * Enable growl support.\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.growl = function(){\n  this.options.growl = true;\n  return this;\n};\n\n/**\n * Ignore `globals` array or string.\n *\n * @param {Array|String} globals\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.globals = function(globals){\n  this.options.globals = (this.options.globals || []).concat(globals);\n  return this;\n};\n\n/**\n * Emit color output.\n *\n * @param {Boolean} colors\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.useColors = function(colors){\n  if (colors !== undefined) {\n    this.options.useColors = colors;\n  }\n  return this;\n};\n\n/**\n * Use inline diffs rather than +/-.\n *\n * @param {Boolean} inlineDiffs\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.useInlineDiffs = function(inlineDiffs) {\n  this.options.useInlineDiffs = arguments.length && inlineDiffs != undefined\n  ? inlineDiffs\n  : false;\n  return this;\n};\n\n/**\n * Set the timeout in milliseconds.\n *\n * @param {Number} timeout\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.timeout = function(timeout){\n  this.suite.timeout(timeout);\n  return this;\n};\n\n/**\n * Set slowness threshold in milliseconds.\n *\n * @param {Number} slow\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.slow = function(slow){\n  this.suite.slow(slow);\n  return this;\n};\n\n/**\n * Enable timeouts.\n *\n * @param {Boolean} enabled\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.enableTimeouts = function(enabled) {\n  this.suite.enableTimeouts(arguments.length && enabled !== undefined\n    ? enabled\n    : true);\n  return this\n};\n\n/**\n * Makes all tests async (accepting a callback)\n *\n * @return {Mocha}\n * @api public\n */\n\nMocha.prototype.asyncOnly = function(){\n  this.options.asyncOnly = true;\n  return this;\n};\n\n/**\n * Disable syntax highlighting (in browser).\n * @returns {Mocha}\n * @api public\n */\nMocha.prototype.noHighlighting = function() {\n  this.options.noHighlighting = true;\n  return this;\n};\n\n/**\n * Delay root suite execution.\n * @returns {Mocha}\n * @api public\n */\nMocha.prototype.delay = function delay() {\n  this.options.delay = true;\n  return this;\n};\n\n/**\n * Run tests and invoke `fn()` when complete.\n *\n * @param {Function} fn\n * @return {Runner}\n * @api public\n */\nMocha.prototype.run = function(fn){\n  if (this.files.length) this.loadFiles();\n  var suite = this.suite;\n  var options = this.options;\n  options.files = this.files;\n  var runner = new exports.Runner(suite, options.delay);\n  var reporter = new this._reporter(runner, options);\n  runner.ignoreLeaks = false !== options.ignoreLeaks;\n  runner.fullStackTrace = options.fullStackTrace;\n  runner.asyncOnly = options.asyncOnly;\n  if (options.grep) runner.grep(options.grep, options.invert);\n  if (options.globals) runner.globals(options.globals);\n  if (options.growl) this._growl(runner, reporter);\n  if (options.useColors !== undefined) {\n    exports.reporters.Base.useColors = options.useColors;\n  }\n  exports.reporters.Base.inlineDiffs = options.useInlineDiffs;\n\n  function done(failures) {\n      if (reporter.done) {\n          reporter.done(failures, fn);\n      } else fn && fn(failures);\n  }\n\n  return runner.run(done);\n};\n\n}); // module: mocha.js\n\nrequire.register(\"ms.js\", function(module, exports, require){\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options['long'] ? longFormat(val) : shortFormat(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  var match = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction shortFormat(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction longFormat(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n}); // module: ms.js\n\nrequire.register(\"pending.js\", function(module, exports, require){\n\n/**\n * Expose `Pending`.\n */\n\nmodule.exports = Pending;\n\n/**\n * Initialize a new `Pending` error with the given message.\n *\n * @param {String} message\n */\n\nfunction Pending(message) {\n    this.message = message;\n}\n\n}); // module: pending.js\n\nrequire.register(\"reporters/base.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar tty = require('browser/tty')\n  , diff = require('browser/diff')\n  , ms = require('../ms')\n  , utils = require('../utils')\n  , supportsColor = process.env ? require('supports-color') : null;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date\n  , setTimeout = global.setTimeout\n  , setInterval = global.setInterval\n  , clearTimeout = global.clearTimeout\n  , clearInterval = global.clearInterval;\n\n/**\n * Check if both stdio streams are associated with a tty.\n */\n\nvar isatty = tty.isatty(1) && tty.isatty(2);\n\n/**\n * Expose `Base`.\n */\n\nexports = module.exports = Base;\n\n/**\n * Enable coloring by default, except in the browser interface.\n */\n\nexports.useColors = process.env\n  ? (supportsColor || (process.env.MOCHA_COLORS !== undefined))\n  : false;\n\n/**\n * Inline diffs instead of +/-\n */\n\nexports.inlineDiffs = false;\n\n/**\n * Default color map.\n */\n\nexports.colors = {\n    'pass': 90\n  , 'fail': 31\n  , 'bright pass': 92\n  , 'bright fail': 91\n  , 'bright yellow': 93\n  , 'pending': 36\n  , 'suite': 0\n  , 'error title': 0\n  , 'error message': 31\n  , 'error stack': 90\n  , 'checkmark': 32\n  , 'fast': 90\n  , 'medium': 33\n  , 'slow': 31\n  , 'green': 32\n  , 'light': 90\n  , 'diff gutter': 90\n  , 'diff added': 42\n  , 'diff removed': 41\n};\n\n/**\n * Default symbol map.\n */\n\nexports.symbols = {\n  ok: '✓',\n  err: '✖',\n  dot: '․'\n};\n\n// With node.js on Windows: use symbols available in terminal default fonts\nif ('win32' == process.platform) {\n  exports.symbols.ok = '\\u221A';\n  exports.symbols.err = '\\u00D7';\n  exports.symbols.dot = '.';\n}\n\n/**\n * Color `str` with the given `type`,\n * allowing colors to be disabled,\n * as well as user-defined color\n * schemes.\n *\n * @param {String} type\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nvar color = exports.color = function(type, str) {\n  if (!exports.useColors) return String(str);\n  return '\\u001b[' + exports.colors[type] + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Expose term window size, with some\n * defaults for when stderr is not a tty.\n */\n\nexports.window = {\n  width: isatty\n    ? process.stdout.getWindowSize\n      ? process.stdout.getWindowSize(1)[0]\n      : tty.getWindowSize()[1]\n    : 75\n};\n\n/**\n * Expose some basic cursor interactions\n * that are common among reporters.\n */\n\nexports.cursor = {\n  hide: function(){\n    isatty && process.stdout.write('\\u001b[?25l');\n  },\n\n  show: function(){\n    isatty && process.stdout.write('\\u001b[?25h');\n  },\n\n  deleteLine: function(){\n    isatty && process.stdout.write('\\u001b[2K');\n  },\n\n  beginningOfLine: function(){\n    isatty && process.stdout.write('\\u001b[0G');\n  },\n\n  CR: function(){\n    if (isatty) {\n      exports.cursor.deleteLine();\n      exports.cursor.beginningOfLine();\n    } else {\n      process.stdout.write('\\r');\n    }\n  }\n};\n\n/**\n * Outut the given `failures` as a list.\n *\n * @param {Array} failures\n * @api public\n */\n\nexports.list = function(failures){\n  console.log();\n  failures.forEach(function(test, i){\n    // format\n    var fmt = color('error title', '  %s) %s:\\n')\n      + color('error message', '     %s')\n      + color('error stack', '\\n%s\\n');\n\n    // msg\n    var err = test.err\n      , message = err.message || ''\n      , stack = err.stack || message\n      , index = stack.indexOf(message)\n      , actual = err.actual\n      , expected = err.expected\n      , escape = true;\n    if (index === -1) {\n      msg = message;\n    } else {\n      index += message.length;\n      msg = stack.slice(0, index);\n      // remove msg from stack\n      stack = stack.slice(index + 1);\n    }\n\n    // uncaught\n    if (err.uncaught) {\n      msg = 'Uncaught ' + msg;\n    }\n    // explicitly show diff\n    if (err.showDiff !== false && sameType(actual, expected)\n        && expected !== undefined) {\n\n      if ('string' !== typeof actual) {\n        escape = false;\n        err.actual = actual = utils.stringify(actual);\n        err.expected = expected = utils.stringify(expected);\n      }\n\n      fmt = color('error title', '  %s) %s:\\n%s') + color('error stack', '\\n%s\\n');\n      var match = message.match(/^([^:]+): expected/);\n      msg = '\\n      ' + color('error message', match ? match[1] : msg);\n\n      if (exports.inlineDiffs) {\n        msg += inlineDiff(err, escape);\n      } else {\n        msg += unifiedDiff(err, escape);\n      }\n    }\n\n    // indent stack trace\n    stack = stack.replace(/^/gm, '  ');\n\n    console.log(fmt, (i + 1), test.fullTitle(), msg, stack);\n  });\n};\n\n/**\n * Initialize a new `Base` reporter.\n *\n * All other reporters generally\n * inherit from this reporter, providing\n * stats such as test duration, number\n * of tests passed / failed etc.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Base(runner) {\n  var self = this\n    , stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 }\n    , failures = this.failures = [];\n\n  if (!runner) return;\n  this.runner = runner;\n\n  runner.stats = stats;\n\n  runner.on('start', function(){\n    stats.start = new Date;\n  });\n\n  runner.on('suite', function(suite){\n    stats.suites = stats.suites || 0;\n    suite.root || stats.suites++;\n  });\n\n  runner.on('test end', function(test){\n    stats.tests = stats.tests || 0;\n    stats.tests++;\n  });\n\n  runner.on('pass', function(test){\n    stats.passes = stats.passes || 0;\n\n    var medium = test.slow() / 2;\n    test.speed = test.duration > test.slow()\n      ? 'slow'\n      : test.duration > medium\n        ? 'medium'\n        : 'fast';\n\n    stats.passes++;\n  });\n\n  runner.on('fail', function(test, err){\n    stats.failures = stats.failures || 0;\n    stats.failures++;\n    test.err = err;\n    failures.push(test);\n  });\n\n  runner.on('end', function(){\n    stats.end = new Date;\n    stats.duration = new Date - stats.start;\n  });\n\n  runner.on('pending', function(){\n    stats.pending++;\n  });\n}\n\n/**\n * Output common epilogue used by many of\n * the bundled reporters.\n *\n * @api public\n */\n\nBase.prototype.epilogue = function(){\n  var stats = this.stats;\n  var tests;\n  var fmt;\n\n  console.log();\n\n  // passes\n  fmt = color('bright pass', ' ')\n    + color('green', ' %d passing')\n    + color('light', ' (%s)');\n\n  console.log(fmt,\n    stats.passes || 0,\n    ms(stats.duration));\n\n  // pending\n  if (stats.pending) {\n    fmt = color('pending', ' ')\n      + color('pending', ' %d pending');\n\n    console.log(fmt, stats.pending);\n  }\n\n  // failures\n  if (stats.failures) {\n    fmt = color('fail', '  %d failing');\n\n    console.log(fmt, stats.failures);\n\n    Base.list(this.failures);\n    console.log();\n  }\n\n  console.log();\n};\n\n/**\n * Pad the given `str` to `len`.\n *\n * @param {String} str\n * @param {String} len\n * @return {String}\n * @api private\n */\n\nfunction pad(str, len) {\n  str = String(str);\n  return Array(len - str.length + 1).join(' ') + str;\n}\n\n\n/**\n * Returns an inline diff between 2 strings with coloured ANSI output\n *\n * @param {Error} Error with actual/expected\n * @return {String} Diff\n * @api private\n */\n\nfunction inlineDiff(err, escape) {\n  var msg = errorDiff(err, 'WordsWithSpace', escape);\n\n  // linenos\n  var lines = msg.split('\\n');\n  if (lines.length > 4) {\n    var width = String(lines.length).length;\n    msg = lines.map(function(str, i){\n      return pad(++i, width) + ' |' + ' ' + str;\n    }).join('\\n');\n  }\n\n  // legend\n  msg = '\\n'\n    + color('diff removed', 'actual')\n    + ' '\n    + color('diff added', 'expected')\n    + '\\n\\n'\n    + msg\n    + '\\n';\n\n  // indent\n  msg = msg.replace(/^/gm, '      ');\n  return msg;\n}\n\n/**\n * Returns a unified diff between 2 strings\n *\n * @param {Error} Error with actual/expected\n * @return {String} Diff\n * @api private\n */\n\nfunction unifiedDiff(err, escape) {\n  var indent = '      ';\n  function cleanUp(line) {\n    if (escape) {\n      line = escapeInvisibles(line);\n    }\n    if (line[0] === '+') return indent + colorLines('diff added', line);\n    if (line[0] === '-') return indent + colorLines('diff removed', line);\n    if (line.match(/\\@\\@/)) return null;\n    if (line.match(/\\\\ No newline/)) return null;\n    else return indent + line;\n  }\n  function notBlank(line) {\n    return line != null;\n  }\n  var msg = diff.createPatch('string', err.actual, err.expected);\n  var lines = msg.split('\\n').splice(4);\n  return '\\n      '\n         + colorLines('diff added',   '+ expected') + ' '\n         + colorLines('diff removed', '- actual')\n         + '\\n\\n'\n         + lines.map(cleanUp).filter(notBlank).join('\\n');\n}\n\n/**\n * Return a character diff for `err`.\n *\n * @param {Error} err\n * @return {String}\n * @api private\n */\n\nfunction errorDiff(err, type, escape) {\n  var actual   = escape ? escapeInvisibles(err.actual)   : err.actual;\n  var expected = escape ? escapeInvisibles(err.expected) : err.expected;\n  return diff['diff' + type](actual, expected).map(function(str){\n    if (str.added) return colorLines('diff added', str.value);\n    if (str.removed) return colorLines('diff removed', str.value);\n    return str.value;\n  }).join('');\n}\n\n/**\n * Returns a string with all invisible characters in plain text\n *\n * @param {String} line\n * @return {String}\n * @api private\n */\nfunction escapeInvisibles(line) {\n    return line.replace(/\\t/g, '<tab>')\n               .replace(/\\r/g, '<CR>')\n               .replace(/\\n/g, '<LF>\\n');\n}\n\n/**\n * Color lines for `str`, using the color `name`.\n *\n * @param {String} name\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction colorLines(name, str) {\n  return str.split('\\n').map(function(str){\n    return color(name, str);\n  }).join('\\n');\n}\n\n/**\n * Check that a / b have the same type.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Boolean}\n * @api private\n */\n\nfunction sameType(a, b) {\n  a = Object.prototype.toString.call(a);\n  b = Object.prototype.toString.call(b);\n  return a == b;\n}\n\n}); // module: reporters/base.js\n\nrequire.register(\"reporters/doc.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , utils = require('../utils');\n\n/**\n * Expose `Doc`.\n */\n\nexports = module.exports = Doc;\n\n/**\n * Initialize a new `Doc` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Doc(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , total = runner.total\n    , indents = 2;\n\n  function indent() {\n    return Array(indents).join('  ');\n  }\n\n  runner.on('suite', function(suite){\n    if (suite.root) return;\n    ++indents;\n    console.log('%s<section class=\"suite\">', indent());\n    ++indents;\n    console.log('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n    console.log('%s<dl>', indent());\n  });\n\n  runner.on('suite end', function(suite){\n    if (suite.root) return;\n    console.log('%s</dl>', indent());\n    --indents;\n    console.log('%s</section>', indent());\n    --indents;\n  });\n\n  runner.on('pass', function(test){\n    console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n    var code = utils.escape(utils.clean(test.fn.toString()));\n    console.log('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n  });\n\n  runner.on('fail', function(test, err){\n    console.log('%s  <dt class=\"error\">%s</dt>', indent(), utils.escape(test.title));\n    var code = utils.escape(utils.clean(test.fn.toString()));\n    console.log('%s  <dd class=\"error\"><pre><code>%s</code></pre></dd>', indent(), code);\n    console.log('%s  <dd class=\"error\">%s</dd>', indent(), utils.escape(err));\n  });\n}\n\n}); // module: reporters/doc.js\n\nrequire.register(\"reporters/dot.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , color = Base.color;\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = Dot;\n\n/**\n * Initialize a new `Dot` matrix test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Dot(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , width = Base.window.width * .75 | 0\n    , n = -1;\n\n  runner.on('start', function(){\n    process.stdout.write('\\n');\n  });\n\n  runner.on('pending', function(test){\n    if (++n % width == 0) process.stdout.write('\\n  ');\n    process.stdout.write(color('pending', Base.symbols.dot));\n  });\n\n  runner.on('pass', function(test){\n    if (++n % width == 0) process.stdout.write('\\n  ');\n    if ('slow' == test.speed) {\n      process.stdout.write(color('bright yellow', Base.symbols.dot));\n    } else {\n      process.stdout.write(color(test.speed, Base.symbols.dot));\n    }\n  });\n\n  runner.on('fail', function(test, err){\n    if (++n % width == 0) process.stdout.write('\\n  ');\n    process.stdout.write(color('fail', Base.symbols.dot));\n  });\n\n  runner.on('end', function(){\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nDot.prototype = new F;\nDot.prototype.constructor = Dot;\n\n\n}); // module: reporters/dot.js\n\nrequire.register(\"reporters/html-cov.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar JSONCov = require('./json-cov')\n  , fs = require('browser/fs');\n\n/**\n * Expose `HTMLCov`.\n */\n\nexports = module.exports = HTMLCov;\n\n/**\n * Initialize a new `JsCoverage` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction HTMLCov(runner) {\n  var jade = require('jade')\n    , file = __dirname + '/templates/coverage.jade'\n    , str = fs.readFileSync(file, 'utf8')\n    , fn = jade.compile(str, { filename: file })\n    , self = this;\n\n  JSONCov.call(this, runner, false);\n\n  runner.on('end', function(){\n    process.stdout.write(fn({\n        cov: self.cov\n      , coverageClass: coverageClass\n    }));\n  });\n}\n\n/**\n * Return coverage class for `n`.\n *\n * @return {String}\n * @api private\n */\n\nfunction coverageClass(n) {\n  if (n >= 75) return 'high';\n  if (n >= 50) return 'medium';\n  if (n >= 25) return 'low';\n  return 'terrible';\n}\n\n}); // module: reporters/html-cov.js\n\nrequire.register(\"reporters/html.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , utils = require('../utils')\n  , Progress = require('../browser/progress')\n  , escape = utils.escape;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date\n  , setTimeout = global.setTimeout\n  , setInterval = global.setInterval\n  , clearTimeout = global.clearTimeout\n  , clearInterval = global.clearInterval;\n\n/**\n * Expose `HTML`.\n */\n\nexports = module.exports = HTML;\n\n/**\n * Stats template.\n */\n\nvar statsTemplate = '<ul id=\"mocha-stats\">'\n  + '<li class=\"progress\"><canvas width=\"40\" height=\"40\"></canvas></li>'\n  + '<li class=\"passes\"><a href=\"#\">passes:</a> <em>0</em></li>'\n  + '<li class=\"failures\"><a href=\"#\">failures:</a> <em>0</em></li>'\n  + '<li class=\"duration\">duration: <em>0</em>s</li>'\n  + '</ul>';\n\n/**\n * Initialize a new `HTML` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction HTML(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , total = runner.total\n    , stat = fragment(statsTemplate)\n    , items = stat.getElementsByTagName('li')\n    , passes = items[1].getElementsByTagName('em')[0]\n    , passesLink = items[1].getElementsByTagName('a')[0]\n    , failures = items[2].getElementsByTagName('em')[0]\n    , failuresLink = items[2].getElementsByTagName('a')[0]\n    , duration = items[3].getElementsByTagName('em')[0]\n    , canvas = stat.getElementsByTagName('canvas')[0]\n    , report = fragment('<ul id=\"mocha-report\"></ul>')\n    , stack = [report]\n    , progress\n    , ctx\n    , root = document.getElementById('mocha');\n\n  if (canvas.getContext) {\n    var ratio = window.devicePixelRatio || 1;\n    canvas.style.width = canvas.width;\n    canvas.style.height = canvas.height;\n    canvas.width *= ratio;\n    canvas.height *= ratio;\n    ctx = canvas.getContext('2d');\n    ctx.scale(ratio, ratio);\n    progress = new Progress;\n  }\n\n  if (!root) return error('#mocha div missing, add it to your document');\n\n  // pass toggle\n  on(passesLink, 'click', function(){\n    unhide();\n    var name = /pass/.test(report.className) ? '' : ' pass';\n    report.className = report.className.replace(/fail|pass/g, '') + name;\n    if (report.className.trim()) hideSuitesWithout('test pass');\n  });\n\n  // failure toggle\n  on(failuresLink, 'click', function(){\n    unhide();\n    var name = /fail/.test(report.className) ? '' : ' fail';\n    report.className = report.className.replace(/fail|pass/g, '') + name;\n    if (report.className.trim()) hideSuitesWithout('test fail');\n  });\n\n  root.appendChild(stat);\n  root.appendChild(report);\n\n  if (progress) progress.size(40);\n\n  runner.on('suite', function(suite){\n    if (suite.root) return;\n\n    // suite\n    var url = self.suiteURL(suite);\n    var el = fragment('<li class=\"suite\"><h1><a href=\"%s\">%s</a></h1></li>', url, escape(suite.title));\n\n    // container\n    stack[0].appendChild(el);\n    stack.unshift(document.createElement('ul'));\n    el.appendChild(stack[0]);\n  });\n\n  runner.on('suite end', function(suite){\n    if (suite.root) return;\n    stack.shift();\n  });\n\n  runner.on('fail', function(test, err){\n    if ('hook' == test.type) runner.emit('test end', test);\n  });\n\n  runner.on('test end', function(test){\n    // TODO: add to stats\n    var percent = stats.tests / this.total * 100 | 0;\n    if (progress) progress.update(percent).draw(ctx);\n\n    // update stats\n    var ms = new Date - stats.start;\n    text(passes, stats.passes);\n    text(failures, stats.failures);\n    text(duration, (ms / 1000).toFixed(2));\n\n    // test\n    if ('passed' == test.state) {\n      var url = self.testURL(test);\n      var el = fragment('<li class=\"test pass %e\"><h2>%e<span class=\"duration\">%ems</span> <a href=\"%s\" class=\"replay\">‣</a></h2></li>', test.speed, test.title, test.duration, url);\n    } else if (test.pending) {\n      var el = fragment('<li class=\"test pass pending\"><h2>%e</h2></li>', test.title);\n    } else {\n      var el = fragment('<li class=\"test fail\"><h2>%e <a href=\"%e\" class=\"replay\">‣</a></h2></li>', test.title, self.testURL(test));\n      var str = test.err.stack || test.err.toString();\n\n      // FF / Opera do not add the message\n      if (!~str.indexOf(test.err.message)) {\n        str = test.err.message + '\\n' + str;\n      }\n\n      // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we\n      // check for the result of the stringifying.\n      if ('[object Error]' == str) str = test.err.message;\n\n      // Safari doesn't give you a stack. Let's at least provide a source line.\n      if (!test.err.stack && test.err.sourceURL && test.err.line !== undefined) {\n        str += \"\\n(\" + test.err.sourceURL + \":\" + test.err.line + \")\";\n      }\n\n      el.appendChild(fragment('<pre class=\"error\">%e</pre>', str));\n    }\n\n    // toggle code\n    // TODO: defer\n    if (!test.pending) {\n      var h2 = el.getElementsByTagName('h2')[0];\n\n      on(h2, 'click', function(){\n        pre.style.display = 'none' == pre.style.display\n          ? 'block'\n          : 'none';\n      });\n\n      var pre = fragment('<pre><code>%e</code></pre>', utils.clean(test.fn.toString()));\n      el.appendChild(pre);\n      pre.style.display = 'none';\n    }\n\n    // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.\n    if (stack[0]) stack[0].appendChild(el);\n  });\n}\n\n/**\n * Makes a URL, preserving querystring (\"search\") parameters.\n * @param {string} s\n * @returns {string} your new URL\n */\nvar makeUrl = function makeUrl(s) {\n  var search = window.location.search;\n\n  // Remove previous grep query parameter if present\n  if (search) {\n    search = search.replace(/[?&]grep=[^&\\s]*/g, '').replace(/^&/, '?');\n  }\n\n  return window.location.pathname + (search ? search + '&' : '?' ) + 'grep=' + encodeURIComponent(s);\n};\n\n/**\n * Provide suite URL\n *\n * @param {Object} [suite]\n */\nHTML.prototype.suiteURL = function(suite){\n  return makeUrl(suite.fullTitle());\n};\n\n/**\n * Provide test URL\n *\n * @param {Object} [test]\n */\n\nHTML.prototype.testURL = function(test){\n  return makeUrl(test.fullTitle());\n};\n\n/**\n * Display error `msg`.\n */\n\nfunction error(msg) {\n  document.body.appendChild(fragment('<div id=\"mocha-error\">%s</div>', msg));\n}\n\n/**\n * Return a DOM fragment from `html`.\n */\n\nfunction fragment(html) {\n  var args = arguments\n    , div = document.createElement('div')\n    , i = 1;\n\n  div.innerHTML = html.replace(/%([se])/g, function(_, type){\n    switch (type) {\n      case 's': return String(args[i++]);\n      case 'e': return escape(args[i++]);\n    }\n  });\n\n  return div.firstChild;\n}\n\n/**\n * Check for suites that do not have elements\n * with `classname`, and hide them.\n */\n\nfunction hideSuitesWithout(classname) {\n  var suites = document.getElementsByClassName('suite');\n  for (var i = 0; i < suites.length; i++) {\n    var els = suites[i].getElementsByClassName(classname);\n    if (0 == els.length) suites[i].className += ' hidden';\n  }\n}\n\n/**\n * Unhide .hidden suites.\n */\n\nfunction unhide() {\n  var els = document.getElementsByClassName('suite hidden');\n  for (var i = 0; i < els.length; ++i) {\n    els[i].className = els[i].className.replace('suite hidden', 'suite');\n  }\n}\n\n/**\n * Set `el` text to `str`.\n */\n\nfunction text(el, str) {\n  if (el.textContent) {\n    el.textContent = str;\n  } else {\n    el.innerText = str;\n  }\n}\n\n/**\n * Listen on `event` with callback `fn`.\n */\n\nfunction on(el, event, fn) {\n  if (el.addEventListener) {\n    el.addEventListener(event, fn, false);\n  } else {\n    el.attachEvent('on' + event, fn);\n  }\n}\n\n}); // module: reporters/html.js\n\nrequire.register(\"reporters/index.js\", function(module, exports, require){\nexports.Base = require('./base');\nexports.Dot = require('./dot');\nexports.Doc = require('./doc');\nexports.TAP = require('./tap');\nexports.JSON = require('./json');\nexports.HTML = require('./html');\nexports.List = require('./list');\nexports.Min = require('./min');\nexports.Spec = require('./spec');\nexports.Nyan = require('./nyan');\nexports.XUnit = require('./xunit');\nexports.Markdown = require('./markdown');\nexports.Progress = require('./progress');\nexports.Landing = require('./landing');\nexports.JSONCov = require('./json-cov');\nexports.HTMLCov = require('./html-cov');\nexports.JSONStream = require('./json-stream');\n\n}); // module: reporters/index.js\n\nrequire.register(\"reporters/json-cov.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `JSONCov`.\n */\n\nexports = module.exports = JSONCov;\n\n/**\n * Initialize a new `JsCoverage` reporter.\n *\n * @param {Runner} runner\n * @param {Boolean} output\n * @api public\n */\n\nfunction JSONCov(runner, output) {\n  var self = this\n    , output = 1 == arguments.length ? true : output;\n\n  Base.call(this, runner);\n\n  var tests = []\n    , failures = []\n    , passes = [];\n\n  runner.on('test end', function(test){\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test){\n    passes.push(test);\n  });\n\n  runner.on('fail', function(test){\n    failures.push(test);\n  });\n\n  runner.on('end', function(){\n    var cov = global._$jscoverage || {};\n    var result = self.cov = map(cov);\n    result.stats = self.stats;\n    result.tests = tests.map(clean);\n    result.failures = failures.map(clean);\n    result.passes = passes.map(clean);\n    if (!output) return;\n    process.stdout.write(JSON.stringify(result, null, 2 ));\n  });\n}\n\n/**\n * Map jscoverage data to a JSON structure\n * suitable for reporting.\n *\n * @param {Object} cov\n * @return {Object}\n * @api private\n */\n\nfunction map(cov) {\n  var ret = {\n      instrumentation: 'node-jscoverage'\n    , sloc: 0\n    , hits: 0\n    , misses: 0\n    , coverage: 0\n    , files: []\n  };\n\n  for (var filename in cov) {\n    var data = coverage(filename, cov[filename]);\n    ret.files.push(data);\n    ret.hits += data.hits;\n    ret.misses += data.misses;\n    ret.sloc += data.sloc;\n  }\n\n  ret.files.sort(function(a, b) {\n    return a.filename.localeCompare(b.filename);\n  });\n\n  if (ret.sloc > 0) {\n    ret.coverage = (ret.hits / ret.sloc) * 100;\n  }\n\n  return ret;\n}\n\n/**\n * Map jscoverage data for a single source file\n * to a JSON structure suitable for reporting.\n *\n * @param {String} filename name of the source file\n * @param {Object} data jscoverage coverage data\n * @return {Object}\n * @api private\n */\n\nfunction coverage(filename, data) {\n  var ret = {\n    filename: filename,\n    coverage: 0,\n    hits: 0,\n    misses: 0,\n    sloc: 0,\n    source: {}\n  };\n\n  data.source.forEach(function(line, num){\n    num++;\n\n    if (data[num] === 0) {\n      ret.misses++;\n      ret.sloc++;\n    } else if (data[num] !== undefined) {\n      ret.hits++;\n      ret.sloc++;\n    }\n\n    ret.source[num] = {\n        source: line\n      , coverage: data[num] === undefined\n        ? ''\n        : data[num]\n    };\n  });\n\n  ret.coverage = ret.hits / ret.sloc * 100;\n\n  return ret;\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @param {Object} test\n * @return {Object}\n * @api private\n */\n\nfunction clean(test) {\n  return {\n      title: test.title\n    , fullTitle: test.fullTitle()\n    , duration: test.duration\n  }\n}\n\n}); // module: reporters/json-cov.js\n\nrequire.register(\"reporters/json-stream.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , color = Base.color;\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction List(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , total = runner.total;\n\n  runner.on('start', function(){\n    console.log(JSON.stringify(['start', { total: total }]));\n  });\n\n  runner.on('pass', function(test){\n    console.log(JSON.stringify(['pass', clean(test)]));\n  });\n\n  runner.on('fail', function(test, err){\n    test = clean(test);\n    test.err = err.message;\n    console.log(JSON.stringify(['fail', test]));\n  });\n\n  runner.on('end', function(){\n    process.stdout.write(JSON.stringify(['end', self.stats]));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @param {Object} test\n * @return {Object}\n * @api private\n */\n\nfunction clean(test) {\n  return {\n      title: test.title\n    , fullTitle: test.fullTitle()\n    , duration: test.duration\n  }\n}\n\n}); // module: reporters/json-stream.js\n\nrequire.register(\"reporters/json.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `JSON`.\n */\n\nexports = module.exports = JSONReporter;\n\n/**\n * Initialize a new `JSON` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction JSONReporter(runner) {\n  var self = this;\n  Base.call(this, runner);\n\n  var tests = []\n    , pending = []\n    , failures = []\n    , passes = [];\n\n  runner.on('test end', function(test){\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test){\n    passes.push(test);\n  });\n\n  runner.on('fail', function(test){\n    failures.push(test);\n  });\n\n  runner.on('pending', function(test){\n    pending.push(test);\n  });\n\n  runner.on('end', function(){\n    var obj = {\n      stats: self.stats,\n      tests: tests.map(clean),\n      pending: pending.map(clean),\n      failures: failures.map(clean),\n      passes: passes.map(clean)\n    };\n\n    runner.testResults = obj;\n\n    process.stdout.write(JSON.stringify(obj, null, 2));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @param {Object} test\n * @return {Object}\n * @api private\n */\n\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    err: errorJSON(test.err || {})\n  }\n}\n\n/**\n * Transform `error` into a JSON object.\n * @param {Error} err\n * @return {Object}\n */\n\nfunction errorJSON(err) {\n  var res = {};\n  Object.getOwnPropertyNames(err).forEach(function(key) {\n    res[key] = err[key];\n  }, err);\n  return res;\n}\n\n}); // module: reporters/json.js\n\nrequire.register(\"reporters/landing.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `Landing`.\n */\n\nexports = module.exports = Landing;\n\n/**\n * Airplane color.\n */\n\nBase.colors.plane = 0;\n\n/**\n * Airplane crash color.\n */\n\nBase.colors['plane crash'] = 31;\n\n/**\n * Runway color.\n */\n\nBase.colors.runway = 90;\n\n/**\n * Initialize a new `Landing` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Landing(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , width = Base.window.width * .75 | 0\n    , total = runner.total\n    , stream = process.stdout\n    , plane = color('plane', '✈')\n    , crashed = -1\n    , n = 0;\n\n  function runway() {\n    var buf = Array(width).join('-');\n    return '  ' + color('runway', buf);\n  }\n\n  runner.on('start', function(){\n    stream.write('\\n\\n\\n  ');\n    cursor.hide();\n  });\n\n  runner.on('test end', function(test){\n    // check if the plane crashed\n    var col = -1 == crashed\n      ? width * ++n / total | 0\n      : crashed;\n\n    // show the crash\n    if ('failed' == test.state) {\n      plane = color('plane crash', '✈');\n      crashed = col;\n    }\n\n    // render landing strip\n    stream.write('\\u001b['+(width+1)+'D\\u001b[2A');\n    stream.write(runway());\n    stream.write('\\n  ');\n    stream.write(color('runway', Array(col).join('⋅')));\n    stream.write(plane)\n    stream.write(color('runway', Array(width - col).join('⋅') + '\\n'));\n    stream.write(runway());\n    stream.write('\\u001b[0m');\n  });\n\n  runner.on('end', function(){\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nLanding.prototype = new F;\nLanding.prototype.constructor = Landing;\n\n\n}); // module: reporters/landing.js\n\nrequire.register(\"reporters/list.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction List(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , n = 0;\n\n  runner.on('start', function(){\n    console.log();\n  });\n\n  runner.on('test', function(test){\n    process.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));\n  });\n\n  runner.on('pending', function(test){\n    var fmt = color('checkmark', '  -')\n      + color('pending', ' %s');\n    console.log(fmt, test.fullTitle());\n  });\n\n  runner.on('pass', function(test){\n    var fmt = color('checkmark', '  '+Base.symbols.dot)\n      + color('pass', ' %s: ')\n      + color(test.speed, '%dms');\n    cursor.CR();\n    console.log(fmt, test.fullTitle(), test.duration);\n  });\n\n  runner.on('fail', function(test, err){\n    cursor.CR();\n    console.log(color('fail', '  %d) %s'), ++n, test.fullTitle());\n  });\n\n  runner.on('end', self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nList.prototype = new F;\nList.prototype.constructor = List;\n\n\n}); // module: reporters/list.js\n\nrequire.register(\"reporters/markdown.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , utils = require('../utils');\n\n/**\n * Constants\n */\n\nvar SUITE_PREFIX = '$';\n\n/**\n * Expose `Markdown`.\n */\n\nexports = module.exports = Markdown;\n\n/**\n * Initialize a new `Markdown` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Markdown(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , level = 0\n    , buf = '';\n\n  function title(str) {\n    return Array(level).join('#') + ' ' + str;\n  }\n\n  function indent() {\n    return Array(level).join('  ');\n  }\n\n  function mapTOC(suite, obj) {\n    var ret = obj,\n        key = SUITE_PREFIX + suite.title;\n    obj = obj[key] = obj[key] || { suite: suite };\n    suite.suites.forEach(function(suite){\n      mapTOC(suite, obj);\n    });\n    return ret;\n  }\n\n  function stringifyTOC(obj, level) {\n    ++level;\n    var buf = '';\n    var link;\n    for (var key in obj) {\n      if ('suite' == key) continue;\n      if (key !== SUITE_PREFIX) {\n        link = ' - [' + key.substring(1) + ']';\n        link += '(#' + utils.slug(obj[key].suite.fullTitle()) + ')\\n';\n        buf += Array(level).join('  ') + link;\n      }\n      buf += stringifyTOC(obj[key], level);\n    }\n    return buf;\n  }\n\n  function generateTOC(suite) {\n    var obj = mapTOC(suite, {});\n    return stringifyTOC(obj, 0);\n  }\n\n  generateTOC(runner.suite);\n\n  runner.on('suite', function(suite){\n    ++level;\n    var slug = utils.slug(suite.fullTitle());\n    buf += '<a name=\"' + slug + '\"></a>' + '\\n';\n    buf += title(suite.title) + '\\n';\n  });\n\n  runner.on('suite end', function(suite){\n    --level;\n  });\n\n  runner.on('pass', function(test){\n    var code = utils.clean(test.fn.toString());\n    buf += test.title + '.\\n';\n    buf += '\\n```js\\n';\n    buf += code + '\\n';\n    buf += '```\\n\\n';\n  });\n\n  runner.on('end', function(){\n    process.stdout.write('# TOC\\n');\n    process.stdout.write(generateTOC(runner.suite));\n    process.stdout.write(buf);\n  });\n}\n\n}); // module: reporters/markdown.js\n\nrequire.register(\"reporters/min.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `Min`.\n */\n\nexports = module.exports = Min;\n\n/**\n * Initialize a new `Min` minimal test reporter (best used with --watch).\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Min(runner) {\n  Base.call(this, runner);\n\n  runner.on('start', function(){\n    // clear screen\n    process.stdout.write('\\u001b[2J');\n    // set cursor position\n    process.stdout.write('\\u001b[1;3H');\n  });\n\n  runner.on('end', this.epilogue.bind(this));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nMin.prototype = new F;\nMin.prototype.constructor = Min;\n\n\n}); // module: reporters/min.js\n\nrequire.register(\"reporters/nyan.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = NyanCat;\n\n/**\n * Initialize a new `Dot` matrix test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction NyanCat(runner) {\n  Base.call(this, runner);\n  var self = this\n    , stats = this.stats\n    , width = Base.window.width * .75 | 0\n    , rainbowColors = this.rainbowColors = self.generateColors()\n    , colorIndex = this.colorIndex = 0\n    , numerOfLines = this.numberOfLines = 4\n    , trajectories = this.trajectories = [[], [], [], []]\n    , nyanCatWidth = this.nyanCatWidth = 11\n    , trajectoryWidthMax = this.trajectoryWidthMax = (width - nyanCatWidth)\n    , scoreboardWidth = this.scoreboardWidth = 5\n    , tick = this.tick = 0\n    , n = 0;\n\n  runner.on('start', function(){\n    Base.cursor.hide();\n    self.draw();\n  });\n\n  runner.on('pending', function(test){\n    self.draw();\n  });\n\n  runner.on('pass', function(test){\n    self.draw();\n  });\n\n  runner.on('fail', function(test, err){\n    self.draw();\n  });\n\n  runner.on('end', function(){\n    Base.cursor.show();\n    for (var i = 0; i < self.numberOfLines; i++) write('\\n');\n    self.epilogue();\n  });\n}\n\n/**\n * Draw the nyan cat\n *\n * @api private\n */\n\nNyanCat.prototype.draw = function(){\n  this.appendRainbow();\n  this.drawScoreboard();\n  this.drawRainbow();\n  this.drawNyanCat();\n  this.tick = !this.tick;\n};\n\n/**\n * Draw the \"scoreboard\" showing the number\n * of passes, failures and pending tests.\n *\n * @api private\n */\n\nNyanCat.prototype.drawScoreboard = function(){\n  var stats = this.stats;\n\n  function draw(type, n) {\n    write(' ');\n    write(Base.color(type, n));\n    write('\\n');\n  }\n\n  draw('green', stats.passes);\n  draw('fail', stats.failures);\n  draw('pending', stats.pending);\n  write('\\n');\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Append the rainbow.\n *\n * @api private\n */\n\nNyanCat.prototype.appendRainbow = function(){\n  var segment = this.tick ? '_' : '-';\n  var rainbowified = this.rainbowify(segment);\n\n  for (var index = 0; index < this.numberOfLines; index++) {\n    var trajectory = this.trajectories[index];\n    if (trajectory.length >= this.trajectoryWidthMax) trajectory.shift();\n    trajectory.push(rainbowified);\n  }\n};\n\n/**\n * Draw the rainbow.\n *\n * @api private\n */\n\nNyanCat.prototype.drawRainbow = function(){\n  var self = this;\n\n  this.trajectories.forEach(function(line, index) {\n    write('\\u001b[' + self.scoreboardWidth + 'C');\n    write(line.join(''));\n    write('\\n');\n  });\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Draw the nyan cat\n *\n * @api private\n */\n\nNyanCat.prototype.drawNyanCat = function() {\n  var self = this;\n  var startWidth = this.scoreboardWidth + this.trajectories[0].length;\n  var dist = '\\u001b[' + startWidth + 'C';\n  var padding = '';\n\n  write(dist);\n  write('_,------,');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? '  ' : '   ';\n  write('_|' + padding + '/\\\\_/\\\\ ');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? '_' : '__';\n  var tail = self.tick ? '~' : '^';\n  var face;\n  write(tail + '|' + padding + this.face() + ' ');\n  write('\\n');\n\n  write(dist);\n  padding = self.tick ? ' ' : '  ';\n  write(padding + '\"\"  \"\" ');\n  write('\\n');\n\n  this.cursorUp(this.numberOfLines);\n};\n\n/**\n * Draw nyan cat face.\n *\n * @return {String}\n * @api private\n */\n\nNyanCat.prototype.face = function() {\n  var stats = this.stats;\n  if (stats.failures) {\n    return '( x .x)';\n  } else if (stats.pending) {\n    return '( o .o)';\n  } else if(stats.passes) {\n    return '( ^ .^)';\n  } else {\n    return '( - .-)';\n  }\n};\n\n/**\n * Move cursor up `n`.\n *\n * @param {Number} n\n * @api private\n */\n\nNyanCat.prototype.cursorUp = function(n) {\n  write('\\u001b[' + n + 'A');\n};\n\n/**\n * Move cursor down `n`.\n *\n * @param {Number} n\n * @api private\n */\n\nNyanCat.prototype.cursorDown = function(n) {\n  write('\\u001b[' + n + 'B');\n};\n\n/**\n * Generate rainbow colors.\n *\n * @return {Array}\n * @api private\n */\n\nNyanCat.prototype.generateColors = function(){\n  var colors = [];\n\n  for (var i = 0; i < (6 * 7); i++) {\n    var pi3 = Math.floor(Math.PI / 3);\n    var n = (i * (1.0 / 6));\n    var r = Math.floor(3 * Math.sin(n) + 3);\n    var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\n    var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\n    colors.push(36 * r + 6 * g + b + 16);\n  }\n\n  return colors;\n};\n\n/**\n * Apply rainbow to the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nNyanCat.prototype.rainbowify = function(str){\n  if (!Base.useColors)\n    return str;\n  var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\n  this.colorIndex += 1;\n  return '\\u001b[38;5;' + color + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Stdout helper.\n */\n\nfunction write(string) {\n  process.stdout.write(string);\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nNyanCat.prototype = new F;\nNyanCat.prototype.constructor = NyanCat;\n\n\n}); // module: reporters/nyan.js\n\nrequire.register(\"reporters/progress.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `Progress`.\n */\n\nexports = module.exports = Progress;\n\n/**\n * General progress bar color.\n */\n\nBase.colors.progress = 90;\n\n/**\n * Initialize a new `Progress` bar test reporter.\n *\n * @param {Runner} runner\n * @param {Object} options\n * @api public\n */\n\nfunction Progress(runner, options) {\n  Base.call(this, runner);\n\n  var self = this\n    , options = options || {}\n    , stats = this.stats\n    , width = Base.window.width * .50 | 0\n    , total = runner.total\n    , complete = 0\n    , max = Math.max\n    , lastN = -1;\n\n  // default chars\n  options.open = options.open || '[';\n  options.complete = options.complete || '▬';\n  options.incomplete = options.incomplete || Base.symbols.dot;\n  options.close = options.close || ']';\n  options.verbose = false;\n\n  // tests started\n  runner.on('start', function(){\n    console.log();\n    cursor.hide();\n  });\n\n  // tests complete\n  runner.on('test end', function(){\n    complete++;\n    var incomplete = total - complete\n      , percent = complete / total\n      , n = width * percent | 0\n      , i = width - n;\n\n    if (lastN === n && !options.verbose) {\n      // Don't re-render the line if it hasn't changed\n      return;\n    }\n    lastN = n;\n\n    cursor.CR();\n    process.stdout.write('\\u001b[J');\n    process.stdout.write(color('progress', '  ' + options.open));\n    process.stdout.write(Array(n).join(options.complete));\n    process.stdout.write(Array(i).join(options.incomplete));\n    process.stdout.write(color('progress', options.close));\n    if (options.verbose) {\n      process.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n    }\n  });\n\n  // tests are complete, output some stats\n  // and the failures if any\n  runner.on('end', function(){\n    cursor.show();\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nProgress.prototype = new F;\nProgress.prototype.constructor = Progress;\n\n\n}); // module: reporters/progress.js\n\nrequire.register(\"reporters/spec.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `Spec`.\n */\n\nexports = module.exports = Spec;\n\n/**\n * Initialize a new `Spec` test reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Spec(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , indents = 0\n    , n = 0;\n\n  function indent() {\n    return Array(indents).join('  ')\n  }\n\n  runner.on('start', function(){\n    console.log();\n  });\n\n  runner.on('suite', function(suite){\n    ++indents;\n    console.log(color('suite', '%s%s'), indent(), suite.title);\n  });\n\n  runner.on('suite end', function(suite){\n    --indents;\n    if (1 == indents) console.log();\n  });\n\n  runner.on('pending', function(test){\n    var fmt = indent() + color('pending', '  - %s');\n    console.log(fmt, test.title);\n  });\n\n  runner.on('pass', function(test){\n    if ('fast' == test.speed) {\n      var fmt = indent()\n        + color('checkmark', '  ' + Base.symbols.ok)\n        + color('pass', ' %s');\n      cursor.CR();\n      console.log(fmt, test.title);\n    } else {\n      var fmt = indent()\n        + color('checkmark', '  ' + Base.symbols.ok)\n        + color('pass', ' %s')\n        + color(test.speed, ' (%dms)');\n      cursor.CR();\n      console.log(fmt, test.title, test.duration);\n    }\n  });\n\n  runner.on('fail', function(test, err){\n    cursor.CR();\n    console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);\n  });\n\n  runner.on('end', self.epilogue.bind(self));\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nSpec.prototype = new F;\nSpec.prototype.constructor = Spec;\n\n\n}); // module: reporters/spec.js\n\nrequire.register(\"reporters/tap.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , cursor = Base.cursor\n  , color = Base.color;\n\n/**\n * Expose `TAP`.\n */\n\nexports = module.exports = TAP;\n\n/**\n * Initialize a new `TAP` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction TAP(runner) {\n  Base.call(this, runner);\n\n  var self = this\n    , stats = this.stats\n    , n = 1\n    , passes = 0\n    , failures = 0;\n\n  runner.on('start', function(){\n    var total = runner.grepTotal(runner.suite);\n    console.log('%d..%d', 1, total);\n  });\n\n  runner.on('test end', function(){\n    ++n;\n  });\n\n  runner.on('pending', function(test){\n    console.log('ok %d %s # SKIP -', n, title(test));\n  });\n\n  runner.on('pass', function(test){\n    passes++;\n    console.log('ok %d %s', n, title(test));\n  });\n\n  runner.on('fail', function(test, err){\n    failures++;\n    console.log('not ok %d %s', n, title(test));\n    if (err.stack) console.log(err.stack.replace(/^/gm, '  '));\n  });\n\n  runner.on('end', function(){\n    console.log('# tests ' + (passes + failures));\n    console.log('# pass ' + passes);\n    console.log('# fail ' + failures);\n  });\n}\n\n/**\n * Return a TAP-safe title of `test`\n *\n * @param {Object} test\n * @return {String}\n * @api private\n */\n\nfunction title(test) {\n  return test.fullTitle().replace(/#/g, '');\n}\n\n}); // module: reporters/tap.js\n\nrequire.register(\"reporters/xunit.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Base = require('./base')\n  , utils = require('../utils')\n  , fs = require('browser/fs')\n  , escape = utils.escape;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date\n  , setTimeout = global.setTimeout\n  , setInterval = global.setInterval\n  , clearTimeout = global.clearTimeout\n  , clearInterval = global.clearInterval;\n\n/**\n * Expose `XUnit`.\n */\n\nexports = module.exports = XUnit;\n\n/**\n * Initialize a new `XUnit` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction XUnit(runner, options) {\n  Base.call(this, runner);\n  var stats = this.stats\n    , tests = []\n    , self = this;\n\n  if (options.reporterOptions && options.reporterOptions.output) {\n      if (! fs.createWriteStream) {\n          throw new Error('file output not supported in browser');\n      }\n      self.fileStream = fs.createWriteStream(options.reporterOptions.output);\n  }\n\n  runner.on('pending', function(test){\n    tests.push(test);\n  });\n\n  runner.on('pass', function(test){\n    tests.push(test);\n  });\n\n  runner.on('fail', function(test){\n    tests.push(test);\n  });\n\n  runner.on('end', function(){\n    self.write(tag('testsuite', {\n        name: 'Mocha Tests'\n      , tests: stats.tests\n      , failures: stats.failures\n      , errors: stats.failures\n      , skipped: stats.tests - stats.failures - stats.passes\n      , timestamp: (new Date).toUTCString()\n      , time: (stats.duration / 1000) || 0\n    }, false));\n\n    tests.forEach(function(t) { self.test(t); });\n    self.write('</testsuite>');\n  });\n}\n\n/**\n * Override done to close the stream (if it's a file).\n */\nXUnit.prototype.done = function(failures, fn) {\n    if (this.fileStream) {\n        this.fileStream.end(function() {\n            fn(failures);\n        });\n    } else {\n        fn(failures);\n    }\n};\n\n/**\n * Inherit from `Base.prototype`.\n */\n\nfunction F(){};\nF.prototype = Base.prototype;\nXUnit.prototype = new F;\nXUnit.prototype.constructor = XUnit;\n\n\n/**\n * Write out the given line\n */\nXUnit.prototype.write = function(line) {\n    if (this.fileStream) {\n        this.fileStream.write(line + '\\n');\n    } else {\n        console.log(line);\n    }\n};\n\n/**\n * Output tag for the given `test.`\n */\n\nXUnit.prototype.test = function(test, ostream) {\n  var attrs = {\n      classname: test.parent.fullTitle()\n    , name: test.title\n    , time: (test.duration / 1000) || 0\n  };\n\n  if ('failed' == test.state) {\n    var err = test.err;\n    this.write(tag('testcase', attrs, false, tag('failure', {}, false, cdata(escape(err.message) + \"\\n\" + err.stack))));\n  } else if (test.pending) {\n    this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));\n  } else {\n    this.write(tag('testcase', attrs, true) );\n  }\n};\n\n/**\n * HTML tag helper.\n */\n\nfunction tag(name, attrs, close, content) {\n  var end = close ? '/>' : '>'\n    , pairs = []\n    , tag;\n\n  for (var key in attrs) {\n    pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n  }\n\n  tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n  if (content) tag += content + '</' + name + end;\n  return tag;\n}\n\n/**\n * Return cdata escaped CDATA `str`.\n */\n\nfunction cdata(str) {\n  return '<![CDATA[' + escape(str) + ']]>';\n}\n\n}); // module: reporters/xunit.js\n\nrequire.register(\"runnable.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('browser/events').EventEmitter\n  , debug = require('browser/debug')('mocha:runnable')\n  , Pending = require('./pending')\n  , milliseconds = require('./ms')\n  , utils = require('./utils');\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date\n  , setTimeout = global.setTimeout\n  , setInterval = global.setInterval\n  , clearTimeout = global.clearTimeout\n  , clearInterval = global.clearInterval;\n\n/**\n * Object#toString().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Expose `Runnable`.\n */\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\n\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.async = fn && fn.length;\n  this.sync = ! this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this.timedOut = false;\n  this._trace = new Error('done() called multiple times')\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nfunction F(){};\nF.prototype = EventEmitter.prototype;\nRunnable.prototype = new F;\nRunnable.prototype.constructor = Runnable;\n\n\n/**\n * Set & get timeout `ms`.\n *\n * @param {Number|String} ms\n * @return {Runnable|Number} ms or self\n * @api private\n */\n\nRunnable.prototype.timeout = function(ms){\n  if (0 == arguments.length) return this._timeout;\n  if (ms === 0) this._enableTimeouts = false;\n  if ('string' == typeof ms) ms = milliseconds(ms);\n  debug('timeout %d', ms);\n  this._timeout = ms;\n  if (this.timer) this.resetTimeout();\n  return this;\n};\n\n/**\n * Set & get slow `ms`.\n *\n * @param {Number|String} ms\n * @return {Runnable|Number} ms or self\n * @api private\n */\n\nRunnable.prototype.slow = function(ms){\n  if (0 === arguments.length) return this._slow;\n  if ('string' == typeof ms) ms = milliseconds(ms);\n  debug('timeout %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set and & get timeout `enabled`.\n *\n * @param {Boolean} enabled\n * @return {Runnable|Boolean} enabled or self\n * @api private\n */\n\nRunnable.prototype.enableTimeouts = function(enabled){\n  if (arguments.length === 0) return this._enableTimeouts;\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @api private\n */\n\nRunnable.prototype.skip = function(){\n    throw new Pending();\n};\n\n/**\n * Return the full title generated by recursively\n * concatenating the parent's full title.\n *\n * @return {String}\n * @api public\n */\n\nRunnable.prototype.fullTitle = function(){\n  return this.parent.fullTitle() + ' ' + this.title;\n};\n\n/**\n * Clear the timeout.\n *\n * @api private\n */\n\nRunnable.prototype.clearTimeout = function(){\n  clearTimeout(this.timer);\n};\n\n/**\n * Inspect the runnable void of private properties.\n *\n * @return {String}\n * @api private\n */\n\nRunnable.prototype.inspect = function(){\n  return JSON.stringify(this, function(key, val){\n    if ('_' == key[0]) return;\n    if ('parent' == key) return '#<Suite>';\n    if ('ctx' == key) return '#<Context>';\n    return val;\n  }, 2);\n};\n\n/**\n * Reset the timeout.\n *\n * @api private\n */\n\nRunnable.prototype.resetTimeout = function(){\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) return;\n  this.clearTimeout();\n  this.timer = setTimeout(function(){\n    if (!self._enableTimeouts) return;\n    self.callback(new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.'));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Whitelist these globals for this test run\n *\n * @api private\n */\nRunnable.prototype.globals = function(arr){\n  var self = this;\n  this._allowedGlobals = arr;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\n\nRunnable.prototype.run = function(fn){\n  var self = this\n    , start = new Date\n    , ctx = this.ctx\n    , finished\n    , emitted;\n\n  // Some times the ctx exists but it is not runnable\n  if (ctx && ctx.runnable) ctx.runnable(this);\n\n  // called multiple times\n  function multiple(err) {\n    if (emitted) return;\n    emitted = true;\n    self.emit('error', err || new Error('done() called multiple times; stacktrace may be inaccurate'));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) return;\n    if (finished) return multiple(err || self._trace);\n\n    // Discard the resolution if this test has already failed asynchronously\n    if (self.state) return;\n\n    self.clearTimeout();\n    self.duration = new Date - start;\n    finished = true;\n    if (!err && self.duration > ms && self._enableTimeouts) err = new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.');\n    fn(err);\n  }\n\n  // for .resetTimeout()\n  this.callback = done;\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    try {\n      this.fn.call(ctx, function(err){\n        if (err instanceof Error || toString.call(err) === \"[object Error]\") return done(err);\n        if (null != err) {\n          if (Object.prototype.toString.call(err) === '[object Object]') {\n            return done(new Error('done() invoked with non-Error: ' + JSON.stringify(err)));\n          } else {\n            return done(new Error('done() invoked with non-Error: ' + err));\n          }\n        }\n        done();\n      });\n    } catch (err) {\n      done(utils.getError(err));\n    }\n    return;\n  }\n\n  if (this.asyncOnly) {\n    return done(new Error('--async-only option in use without declaring `done()`'));\n  }\n\n  // sync or promise-returning\n  try {\n    if (this.pending) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    done(utils.getError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result\n        .then(function() {\n          done()\n        },\n        function(reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'))\n        });\n    } else {\n      done();\n    }\n  }\n};\n\n}); // module: runnable.js\n\nrequire.register(\"runner.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('browser/events').EventEmitter\n  , debug = require('browser/debug')('mocha:runner')\n  , Pending = require('./pending')\n  , Test = require('./test')\n  , utils = require('./utils')\n  , filter = utils.filter\n  , keys = utils.keys\n  , type = utils.type\n  , stringify = utils.stringify\n  , stackFilter = utils.stackTraceFilter();\n\n/**\n * Non-enumerable globals.\n */\n\nvar globals = [\n  'setTimeout',\n  'clearTimeout',\n  'setInterval',\n  'clearInterval',\n  'XMLHttpRequest',\n  'Date',\n  'setImmediate',\n  'clearImmediate'\n];\n\n/**\n * Expose `Runner`.\n */\n\nmodule.exports = Runner;\n\n/**\n * Initialize a `Runner` for the given `suite`.\n *\n * Events:\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n *\n * @param {Suite} suite Root suite\n * @param {boolean} [delay] Whether or not to delay execution of root suite\n *   until ready.\n * @api public\n */\n\nfunction Runner(suite, delay) {\n  var self = this;\n  this._globals = [];\n  this._abort = false;\n  this._delay = delay;\n  this.suite = suite;\n  this.total = suite.total();\n  this.failures = 0;\n  this.on('test end', function(test){ self.checkGlobals(test); });\n  this.on('hook end', function(hook){ self.checkGlobals(hook); });\n  this.grep(/.*/);\n  this.globals(this.globalProps().concat(extraGlobals()));\n}\n\n/**\n * Wrapper for setImmediate, process.nextTick, or browser polyfill.\n *\n * @param {Function} fn\n * @api private\n */\n\nRunner.immediately = global.setImmediate || process.nextTick;\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nfunction F(){};\nF.prototype = EventEmitter.prototype;\nRunner.prototype = new F;\nRunner.prototype.constructor = Runner;\n\n\n/**\n * Run tests with full titles matching `re`. Updates runner.total\n * with number of tests matched.\n *\n * @param {RegExp} re\n * @param {Boolean} invert\n * @return {Runner} for chaining\n * @api public\n */\n\nRunner.prototype.grep = function(re, invert){\n  debug('grep %s', re);\n  this._grep = re;\n  this._invert = invert;\n  this.total = this.grepTotal(this.suite);\n  return this;\n};\n\n/**\n * Returns the number of tests matching the grep search for the\n * given suite.\n *\n * @param {Suite} suite\n * @return {Number}\n * @api public\n */\n\nRunner.prototype.grepTotal = function(suite) {\n  var self = this;\n  var total = 0;\n\n  suite.eachTest(function(test){\n    var match = self._grep.test(test.fullTitle());\n    if (self._invert) match = !match;\n    if (match) total++;\n  });\n\n  return total;\n};\n\n/**\n * Return a list of global properties.\n *\n * @return {Array}\n * @api private\n */\n\nRunner.prototype.globalProps = function() {\n  var props = utils.keys(global);\n\n  // non-enumerables\n  for (var i = 0; i < globals.length; ++i) {\n    if (~utils.indexOf(props, globals[i])) continue;\n    props.push(globals[i]);\n  }\n\n  return props;\n};\n\n/**\n * Allow the given `arr` of globals.\n *\n * @param {Array} arr\n * @return {Runner} for chaining\n * @api public\n */\n\nRunner.prototype.globals = function(arr){\n  if (0 == arguments.length) return this._globals;\n  debug('globals %j', arr);\n  this._globals = this._globals.concat(arr);\n  return this;\n};\n\n/**\n * Check for global variable leaks.\n *\n * @api private\n */\n\nRunner.prototype.checkGlobals = function(test){\n  if (this.ignoreLeaks) return;\n  var ok = this._globals;\n\n  var globals = this.globalProps();\n  var leaks;\n\n  if (test) {\n    ok = ok.concat(test._allowedGlobals || []);\n  }\n\n  if(this.prevGlobalsLength == globals.length) return;\n  this.prevGlobalsLength = globals.length;\n\n  leaks = filterLeaks(ok, globals);\n  this._globals = this._globals.concat(leaks);\n\n  if (leaks.length > 1) {\n    this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));\n  } else if (leaks.length) {\n    this.fail(test, new Error('global leak detected: ' + leaks[0]));\n  }\n};\n\n/**\n * Fail the given `test`.\n *\n * @param {Test} test\n * @param {Error} err\n * @api private\n */\n\nRunner.prototype.fail = function(test, err) {\n  ++this.failures;\n  test.state = 'failed';\n\n  if (!(err instanceof Error)) {\n    err = new Error('the ' + type(err) + ' ' + stringify(err) + ' was thrown, throw an Error :)');\n  }\n\n  err.stack = (this.fullStackTrace || !err.stack)\n    ? err.stack\n    : stackFilter(err.stack);\n\n  this.emit('fail', test, err);\n};\n\n/**\n * Fail the given `hook` with `err`.\n *\n * Hook failures work in the following pattern:\n * - If bail, then exit\n * - Failed `before` hook skips all tests in a suite and subsuites,\n *   but jumps to corresponding `after` hook\n * - Failed `before each` hook skips remaining tests in a\n *   suite and jumps to corresponding `after each` hook,\n *   which is run only once\n * - Failed `after` hook does not alter\n *   execution order\n * - Failed `after each` hook skips remaining tests in a\n *   suite and subsuites, but executes other `after each`\n *   hooks\n *\n * @param {Hook} hook\n * @param {Error} err\n * @api private\n */\n\nRunner.prototype.failHook = function(hook, err){\n  this.fail(hook, err);\n  if (this.suite.bail()) {\n    this.emit('end');\n  }\n};\n\n/**\n * Run hook `name` callbacks and then invoke `fn()`.\n *\n * @param {String} name\n * @param {Function} function\n * @api private\n */\n\nRunner.prototype.hook = function(name, fn){\n  var suite = this.suite\n    , hooks = suite['_' + name]\n    , self = this\n    , timer;\n\n  function next(i) {\n    var hook = hooks[i];\n    if (!hook) return fn();\n    self.currentRunnable = hook;\n\n    hook.ctx.currentTest = self.test;\n\n    self.emit('hook', hook);\n\n    hook.on('error', function(err){\n      self.failHook(hook, err);\n    });\n\n    hook.run(function(err){\n      hook.removeAllListeners('error');\n      var testError = hook.error();\n      if (testError) self.fail(self.test, testError);\n      if (err) {\n        if (err instanceof Pending) {\n          suite.pending = true;\n        } else {\n          self.failHook(hook, err);\n\n          // stop executing hooks, notify callee of hook err\n          return fn(err);\n        }\n      }\n      self.emit('hook end', hook);\n      delete hook.ctx.currentTest;\n      next(++i);\n    });\n  }\n\n  Runner.immediately(function(){\n    next(0);\n  });\n};\n\n/**\n * Run hook `name` for the given array of `suites`\n * in order, and callback `fn(err, errSuite)`.\n *\n * @param {String} name\n * @param {Array} suites\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.hooks = function(name, suites, fn){\n  var self = this\n    , orig = this.suite;\n\n  function next(suite) {\n    self.suite = suite;\n\n    if (!suite) {\n      self.suite = orig;\n      return fn();\n    }\n\n    self.hook(name, function(err){\n      if (err) {\n        var errSuite = self.suite;\n        self.suite = orig;\n        return fn(err, errSuite);\n      }\n\n      next(suites.pop());\n    });\n  }\n\n  next(suites.pop());\n};\n\n/**\n * Run hooks from the top level down.\n *\n * @param {String} name\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.hookUp = function(name, fn){\n  var suites = [this.suite].concat(this.parents()).reverse();\n  this.hooks(name, suites, fn);\n};\n\n/**\n * Run hooks from the bottom up.\n *\n * @param {String} name\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.hookDown = function(name, fn){\n  var suites = [this.suite].concat(this.parents());\n  this.hooks(name, suites, fn);\n};\n\n/**\n * Return an array of parent Suites from\n * closest to furthest.\n *\n * @return {Array}\n * @api private\n */\n\nRunner.prototype.parents = function(){\n  var suite = this.suite\n    , suites = [];\n  while (suite = suite.parent) suites.push(suite);\n  return suites;\n};\n\n/**\n * Run the current test and callback `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.runTest = function(fn){\n  var test = this.test\n    , self = this;\n\n  if (this.asyncOnly) test.asyncOnly = true;\n\n  try {\n    test.on('error', function(err){\n      self.fail(test, err);\n    });\n    test.run(fn);\n  } catch (err) {\n    fn(err);\n  }\n};\n\n/**\n * Run tests in the given `suite` and invoke\n * the callback `fn()` when complete.\n *\n * @param {Suite} suite\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.runTests = function(suite, fn){\n  var self = this\n    , tests = suite.tests.slice()\n    , test;\n\n\n  function hookErr(err, errSuite, after) {\n    // before/after Each hook for errSuite failed:\n    var orig = self.suite;\n\n    // for failed 'after each' hook start from errSuite parent,\n    // otherwise start from errSuite itself\n    self.suite = after ? errSuite.parent : errSuite;\n\n    if (self.suite) {\n      // call hookUp afterEach\n      self.hookUp('afterEach', function(err2, errSuite2) {\n        self.suite = orig;\n        // some hooks may fail even now\n        if (err2) return hookErr(err2, errSuite2, true);\n        // report error suite\n        fn(errSuite);\n      });\n    } else {\n      // there is no need calling other 'after each' hooks\n      self.suite = orig;\n      fn(errSuite);\n    }\n  }\n\n  function next(err, errSuite) {\n    // if we bail after first err\n    if (self.failures && suite._bail) return fn();\n\n    if (self._abort) return fn();\n\n    if (err) return hookErr(err, errSuite, true);\n\n    // next test\n    test = tests.shift();\n\n    // all done\n    if (!test) return fn();\n\n    // grep\n    var match = self._grep.test(test.fullTitle());\n    if (self._invert) match = !match;\n    if (!match) return next();\n\n    // pending\n    if (test.pending) {\n      self.emit('pending', test);\n      self.emit('test end', test);\n      return next();\n    }\n\n    // execute test and hook(s)\n    self.emit('test', self.test = test);\n    self.hookDown('beforeEach', function(err, errSuite){\n\n      if (suite.pending) {\n        self.emit('pending', test);\n        self.emit('test end', test);\n        return next();\n      }\n      if (err) return hookErr(err, errSuite, false);\n\n      self.currentRunnable = self.test;\n      self.runTest(function(err){\n        test = self.test;\n\n        if (err) {\n          if (err instanceof Pending) {\n            self.emit('pending', test);\n          } else {\n            self.fail(test, err);\n          }\n          self.emit('test end', test);\n\n          if (err instanceof Pending) {\n            return next();\n          }\n\n          return self.hookUp('afterEach', next);\n        }\n\n        test.state = 'passed';\n        self.emit('pass', test);\n        self.emit('test end', test);\n        self.hookUp('afterEach', next);\n      });\n    });\n  }\n\n  this.next = next;\n  next();\n};\n\n/**\n * Run the given `suite` and invoke the\n * callback `fn()` when complete.\n *\n * @param {Suite} suite\n * @param {Function} fn\n * @api private\n */\n\nRunner.prototype.runSuite = function(suite, fn){\n  var total = this.grepTotal(suite)\n    , self = this\n    , i = 0;\n\n  debug('run suite %s', suite.fullTitle());\n\n  if (!total) return fn();\n\n  this.emit('suite', this.suite = suite);\n\n  function next(errSuite) {\n    if (errSuite) {\n      // current suite failed on a hook from errSuite\n      if (errSuite == suite) {\n        // if errSuite is current suite\n        // continue to the next sibling suite\n        return done();\n      } else {\n        // errSuite is among the parents of current suite\n        // stop execution of errSuite and all sub-suites\n        return done(errSuite);\n      }\n    }\n\n    if (self._abort) return done();\n\n    var curr = suite.suites[i++];\n    if (!curr) return done();\n    self.runSuite(curr, next);\n  }\n\n  function done(errSuite) {\n    self.suite = suite;\n    self.hook('afterAll', function(){\n      self.emit('suite end', suite);\n      fn(errSuite);\n    });\n  }\n\n  this.hook('beforeAll', function(err){\n    if (err) return done();\n    self.runTests(suite, next);\n  });\n};\n\n/**\n * Handle uncaught exceptions.\n *\n * @param {Error} err\n * @api private\n */\n\nRunner.prototype.uncaught = function(err){\n  if (err) {\n    debug('uncaught exception %s', err !== function () {\n      return this;\n    }.call(err) ? err : ( err.message || err ));\n  } else {\n    debug('uncaught undefined exception');\n    err = utils.undefinedError();\n  }\n  err.uncaught = true;\n\n  var runnable = this.currentRunnable;\n  if (!runnable) return;\n\n  runnable.clearTimeout();\n\n  // Ignore errors if complete\n  if (runnable.state) return;\n  this.fail(runnable, err);\n\n  // recover from test\n  if ('test' == runnable.type) {\n    this.emit('test end', runnable);\n    this.hookUp('afterEach', this.next);\n    return;\n  }\n\n  // bail on hooks\n  this.emit('end');\n};\n\n/**\n * Run the root suite and invoke `fn(failures)`\n * on completion.\n *\n * @param {Function} fn\n * @return {Runner} for chaining\n * @api public\n */\n\nRunner.prototype.run = function(fn){\n  var self = this,\n    rootSuite = this.suite;\n\n  fn = fn || function(){};\n\n  function uncaught(err){\n    self.uncaught(err);\n  }\n\n  function start() {\n    self.emit('start');\n    self.runSuite(rootSuite, function(){\n      debug('finished running');\n      self.emit('end');\n    });\n  }\n\n  debug('start');\n\n  // callback\n  this.on('end', function(){\n    debug('end');\n    process.removeListener('uncaughtException', uncaught);\n    fn(self.failures);\n  });\n\n  // uncaught exception\n  process.on('uncaughtException', uncaught);\n\n  if (this._delay) {\n    // for reporters, I guess.\n    // might be nice to debounce some dots while we wait.\n    this.emit('waiting', rootSuite);\n    rootSuite.once('run', start);\n  }\n  else {\n    start();\n  }\n\n  return this;\n};\n\n/**\n * Cleanly abort execution\n *\n * @return {Runner} for chaining\n * @api public\n */\nRunner.prototype.abort = function(){\n  debug('aborting');\n  this._abort = true;\n};\n\n/**\n * Filter leaks with the given globals flagged as `ok`.\n *\n * @param {Array} ok\n * @param {Array} globals\n * @return {Array}\n * @api private\n */\n\nfunction filterLeaks(ok, globals) {\n  return filter(globals, function(key){\n    // Firefox and Chrome exposes iframes as index inside the window object\n    if (/^d+/.test(key)) return false;\n\n    // in firefox\n    // if runner runs in an iframe, this iframe's window.getInterface method not init at first\n    // it is assigned in some seconds\n    if (global.navigator && /^getInterface/.test(key)) return false;\n\n    // an iframe could be approached by window[iframeIndex]\n    // in ie6,7,8 and opera, iframeIndex is enumerable, this could cause leak\n    if (global.navigator && /^\\d+/.test(key)) return false;\n\n    // Opera and IE expose global variables for HTML element IDs (issue #243)\n    if (/^mocha-/.test(key)) return false;\n\n    var matched = filter(ok, function(ok){\n      if (~ok.indexOf('*')) return 0 == key.indexOf(ok.split('*')[0]);\n      return key == ok;\n    });\n    return matched.length == 0 && (!global.navigator || 'onerror' !== key);\n  });\n}\n\n/**\n * Array of globals dependent on the environment.\n *\n * @return {Array}\n * @api private\n */\n\nfunction extraGlobals() {\n if (typeof(process) === 'object' &&\n     typeof(process.version) === 'string') {\n\n   var nodeVersion = process.version.split('.').reduce(function(a, v) {\n     return a << 8 | v;\n   });\n\n   // 'errno' was renamed to process._errno in v0.9.11.\n\n   if (nodeVersion < 0x00090B) {\n     return ['errno'];\n   }\n }\n\n return [];\n}\n\n}); // module: runner.js\n\nrequire.register(\"suite.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('browser/events').EventEmitter\n  , debug = require('browser/debug')('mocha:suite')\n  , milliseconds = require('./ms')\n  , utils = require('./utils')\n  , Hook = require('./hook');\n\n/**\n * Expose `Suite`.\n */\n\nexports = module.exports = Suite;\n\n/**\n * Create a new `Suite` with the given `title`\n * and parent `Suite`. When a suite with the\n * same title is already present, that suite\n * is returned to provide nicer reporter\n * and more flexible meta-testing.\n *\n * @param {Suite} parent\n * @param {String} title\n * @return {Suite}\n * @api public\n */\n\nexports.create = function(parent, title){\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n  if (parent.pending) suite.pending = true;\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n};\n\n/**\n * Initialize a new `Suite` with the given\n * `title` and `ctx`.\n *\n * @param {String} title\n * @param {Context} ctx\n * @api private\n */\n\nfunction Suite(title, parentContext) {\n  this.title = title;\n  var context = function() {};\n  context.prototype = parentContext;\n  this.ctx = new context();\n  this.suites = [];\n  this.tests = [];\n  this.pending = false;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this.root = !title;\n  this._timeout = 2000;\n  this._enableTimeouts = true;\n  this._slow = 75;\n  this._bail = false;\n  this.delayed = false;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nfunction F(){};\nF.prototype = EventEmitter.prototype;\nSuite.prototype = new F;\nSuite.prototype.constructor = Suite;\n\n\n/**\n * Return a clone of this `Suite`.\n *\n * @return {Suite}\n * @api private\n */\n\nSuite.prototype.clone = function(){\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.timeout(this.timeout());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n};\n\n/**\n * Set timeout `ms` or short-hand such as \"2s\".\n *\n * @param {Number|String} ms\n * @return {Suite|Number} for chaining\n * @api private\n */\n\nSuite.prototype.timeout = function(ms){\n  if (0 == arguments.length) return this._timeout;\n  if (ms.toString() === '0') this._enableTimeouts = false;\n  if ('string' == typeof ms) ms = milliseconds(ms);\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n};\n\n/**\n  * Set timeout `enabled`.\n  *\n  * @param {Boolean} enabled\n  * @return {Suite|Boolean} self or enabled\n  * @api private\n  */\n\nSuite.prototype.enableTimeouts = function(enabled){\n  if (arguments.length === 0) return this._enableTimeouts;\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Set slow `ms` or short-hand such as \"2s\".\n *\n * @param {Number|String} ms\n * @return {Suite|Number} for chaining\n * @api private\n */\n\nSuite.prototype.slow = function(ms){\n  if (0 === arguments.length) return this._slow;\n  if ('string' == typeof ms) ms = milliseconds(ms);\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Sets whether to bail after first error.\n *\n * @param {Boolean} bail\n * @return {Suite|Number} for chaining\n * @api private\n */\n\nSuite.prototype.bail = function(bail){\n  if (0 == arguments.length) return this._bail;\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before running tests.\n *\n * @param {Function} fn\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.beforeAll = function(title, fn){\n  if (this.pending) return this;\n  if ('function' === typeof title) {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeAll.push(hook);\n  this.emit('beforeAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after running tests.\n *\n * @param {Function} fn\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.afterAll = function(title, fn){\n  if (this.pending) return this;\n  if ('function' === typeof title) {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterAll.push(hook);\n  this.emit('afterAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before each test case.\n *\n * @param {Function} fn\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.beforeEach = function(title, fn){\n  if (this.pending) return this;\n  if ('function' === typeof title) {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeEach.push(hook);\n  this.emit('beforeEach', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after each test case.\n *\n * @param {Function} fn\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.afterEach = function(title, fn){\n  if (this.pending) return this;\n  if ('function' === typeof title) {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterEach.push(hook);\n  this.emit('afterEach', hook);\n  return this;\n};\n\n/**\n * Add a test `suite`.\n *\n * @param {Suite} suite\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.addSuite = function(suite){\n  suite.parent = this;\n  suite.timeout(this.timeout());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit('suite', suite);\n  return this;\n};\n\n/**\n * Add a `test` to this suite.\n *\n * @param {Test} test\n * @return {Suite} for chaining\n * @api private\n */\n\nSuite.prototype.addTest = function(test){\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.enableTimeouts(this.enableTimeouts());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit('test', test);\n  return this;\n};\n\n/**\n * Return the full title generated by recursively\n * concatenating the parent's full title.\n *\n * @return {String}\n * @api public\n */\n\nSuite.prototype.fullTitle = function(){\n  if (this.parent) {\n    var full = this.parent.fullTitle();\n    if (full) return full + ' ' + this.title;\n  }\n  return this.title;\n};\n\n/**\n * Return the total number of tests.\n *\n * @return {Number}\n * @api public\n */\n\nSuite.prototype.total = function(){\n  return utils.reduce(this.suites, function(sum, suite){\n    return sum + suite.total();\n  }, 0) + this.tests.length;\n};\n\n/**\n * Iterates through each suite recursively to find\n * all tests. Applies a function in the format\n * `fn(test)`.\n *\n * @param {Function} fn\n * @return {Suite}\n * @api private\n */\n\nSuite.prototype.eachTest = function(fn){\n  utils.forEach(this.tests, fn);\n  utils.forEach(this.suites, function(suite){\n    suite.eachTest(fn);\n  });\n  return this;\n};\n\n/**\n * This will run the root suite if we happen to be running in delayed mode.\n */\nSuite.prototype.run = function run() {\n  if (this.root) {\n    this.emit('run');\n  }\n};\n\n}); // module: suite.js\n\nrequire.register(\"test.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\n\n/**\n * Expose `Test`.\n */\n\nmodule.exports = Test;\n\n/**\n * Initialize a new `Test` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\n\nfunction Test(title, fn) {\n  Runnable.call(this, title, fn);\n  this.pending = !fn;\n  this.type = 'test';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\n\nfunction F(){};\nF.prototype = Runnable.prototype;\nTest.prototype = new F;\nTest.prototype.constructor = Test;\n\n\n}); // module: test.js\n\nrequire.register(\"utils.js\", function(module, exports, require){\n/**\n * Module dependencies.\n */\n\nvar fs = require('browser/fs')\n  , path = require('browser/path')\n  , basename = path.basename\n  , exists = fs.existsSync || path.existsSync\n  , glob = require('browser/glob')\n  , join = path.join\n  , debug = require('browser/debug')('mocha:watch');\n\n/**\n * Ignored directories.\n */\n\nvar ignore = ['node_modules', '.git'];\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function(html){\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n};\n\n/**\n * Array#forEach (<=IE8)\n *\n * @param {Array} array\n * @param {Function} fn\n * @param {Object} scope\n * @api private\n */\n\nexports.forEach = function(arr, fn, scope){\n  for (var i = 0, l = arr.length; i < l; i++)\n    fn.call(scope, arr[i], i);\n};\n\n/**\n * Array#map (<=IE8)\n *\n * @param {Array} array\n * @param {Function} fn\n * @param {Object} scope\n * @api private\n */\n\nexports.map = function(arr, fn, scope){\n  var result = [];\n  for (var i = 0, l = arr.length; i < l; i++)\n    result.push(fn.call(scope, arr[i], i, arr));\n  return result;\n};\n\n/**\n * Array#indexOf (<=IE8)\n *\n * @parma {Array} arr\n * @param {Object} obj to find index of\n * @param {Number} start\n * @api private\n */\n\nexports.indexOf = function(arr, obj, start){\n  for (var i = start || 0, l = arr.length; i < l; i++) {\n    if (arr[i] === obj)\n      return i;\n  }\n  return -1;\n};\n\n/**\n * Array#reduce (<=IE8)\n *\n * @param {Array} array\n * @param {Function} fn\n * @param {Object} initial value\n * @api private\n */\n\nexports.reduce = function(arr, fn, val){\n  var rval = val;\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    rval = fn(rval, arr[i], i, arr);\n  }\n\n  return rval;\n};\n\n/**\n * Array#filter (<=IE8)\n *\n * @param {Array} array\n * @param {Function} fn\n * @api private\n */\n\nexports.filter = function(arr, fn){\n  var ret = [];\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    var val = arr[i];\n    if (fn(val, i, arr)) ret.push(val);\n  }\n\n  return ret;\n};\n\n/**\n * Object.keys (<=IE8)\n *\n * @param {Object} obj\n * @return {Array} keys\n * @api private\n */\n\nexports.keys = Object.keys || function(obj) {\n  var keys = []\n    , has = Object.prototype.hasOwnProperty; // for `window` on <=IE8\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n\n  return keys;\n};\n\n/**\n * Watch the given `files` for changes\n * and invoke `fn(file)` on modification.\n *\n * @param {Array} files\n * @param {Function} fn\n * @api private\n */\n\nexports.watch = function(files, fn){\n  var options = { interval: 100 };\n  files.forEach(function(file){\n    debug('file %s', file);\n    fs.watchFile(file, options, function(curr, prev){\n      if (prev.mtime < curr.mtime) fn(file);\n    });\n  });\n};\n\n/**\n * Array.isArray (<=IE8)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nvar isArray = Array.isArray || function (obj) {\n  return '[object Array]' == {}.toString.call(obj);\n};\n\n/**\n * @description\n * Buffer.prototype.toJSON polyfill\n * @type {Function}\n */\nif(typeof Buffer !== 'undefined' && Buffer.prototype) {\n  Buffer.prototype.toJSON = Buffer.prototype.toJSON || function () {\n    return Array.prototype.slice.call(this, 0);\n  };\n}\n\n/**\n * Ignored files.\n */\n\nfunction ignored(path){\n  return !~ignore.indexOf(path);\n}\n\n/**\n * Lookup files in the given `dir`.\n *\n * @return {Array}\n * @api private\n */\n\nexports.files = function(dir, ext, ret){\n  ret = ret || [];\n  ext = ext || ['js'];\n\n  var re = new RegExp('\\\\.(' + ext.join('|') + ')$');\n\n  fs.readdirSync(dir)\n    .filter(ignored)\n    .forEach(function(path){\n      path = join(dir, path);\n      if (fs.statSync(path).isDirectory()) {\n        exports.files(path, ext, ret);\n      } else if (path.match(re)) {\n        ret.push(path);\n      }\n    });\n\n  return ret;\n};\n\n/**\n * Compute a slug from the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.slug = function(str){\n  return str\n    .toLowerCase()\n    .replace(/ +/g, '-')\n    .replace(/[^-\\w]/g, '');\n};\n\n/**\n * Strip the function definition from `str`,\n * and re-indent for pre whitespace.\n */\n\nexports.clean = function(str) {\n  str = str\n    .replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, \"\\n\").replace(/^\\uFEFF/, '')\n    .replace(/^function *\\(.*\\)\\s*{|\\(.*\\) *=> *{?/, '')\n    .replace(/\\s+\\}$/, '');\n\n  var spaces = str.match(/^\\n?( *)/)[1].length\n    , tabs = str.match(/^\\n?(\\t*)/)[1].length\n    , re = new RegExp('^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs ? tabs : spaces) + '}', 'gm');\n\n  str = str.replace(re, '');\n\n  return exports.trim(str);\n};\n\n/**\n * Trim the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.trim = function(str){\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\n\n/**\n * Parse the given `qs`.\n *\n * @param {String} qs\n * @return {Object}\n * @api private\n */\n\nexports.parseQuery = function(qs){\n  return exports.reduce(qs.replace('?', '').split('&'), function(obj, pair){\n    var i = pair.indexOf('=')\n      , key = pair.slice(0, i)\n      , val = pair.slice(++i);\n\n    obj[key] = decodeURIComponent(val);\n    return obj;\n  }, {});\n};\n\n/**\n * Highlight the given string of `js`.\n *\n * @param {String} js\n * @return {String}\n * @api private\n */\n\nfunction highlight(js) {\n  return js\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n    .replace(/('.*?')/gm, '<span class=\"string\">$1</span>')\n    .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/\\bnew[ \\t]+(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n    .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>')\n}\n\n/**\n * Highlight the contents of tag `name`.\n *\n * @param {String} name\n * @api private\n */\n\nexports.highlightTags = function(name) {\n  var code = document.getElementById('mocha').getElementsByTagName(name);\n  for (var i = 0, len = code.length; i < len; ++i) {\n    code[i].innerHTML = highlight(code[i].innerHTML);\n  }\n};\n\n/**\n * If a value could have properties, and has none, this function is called, which returns\n * a string representation of the empty value.\n *\n * Functions w/ no properties return `'[Function]'`\n * Arrays w/ length === 0 return `'[]'`\n * Objects w/ no properties return `'{}'`\n * All else: return result of `value.toString()`\n *\n * @param {*} value Value to inspect\n * @param {string} [type] The type of the value, if known.\n * @returns {string}\n */\nvar emptyRepresentation = function emptyRepresentation(value, type) {\n  type = type || exports.type(value);\n\n  switch(type) {\n    case 'function':\n      return '[Function]';\n    case 'object':\n      return '{}';\n    case 'array':\n      return '[]';\n    default:\n      return value.toString();\n  }\n};\n\n/**\n * Takes some variable and asks `{}.toString()` what it thinks it is.\n * @param {*} value Anything\n * @example\n * type({}) // 'object'\n * type([]) // 'array'\n * type(1) // 'number'\n * type(false) // 'boolean'\n * type(Infinity) // 'number'\n * type(null) // 'null'\n * type(new Date()) // 'date'\n * type(/foo/) // 'regexp'\n * type('type') // 'string'\n * type(global) // 'global'\n * @api private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n * @returns {string}\n */\nexports.type = function type(value) {\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n    return 'buffer';\n  }\n  return Object.prototype.toString.call(value)\n    .replace(/^\\[.+\\s(.+?)\\]$/, '$1')\n    .toLowerCase();\n};\n\n/**\n * @summary Stringify `value`.\n * @description Different behavior depending on type of value.\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n * - If `value` is an *empty* object, function, or array, return result of function\n *   {@link emptyRepresentation}.\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n *   JSON.stringify().\n *\n * @see exports.type\n * @param {*} value\n * @return {string}\n * @api private\n */\n\nexports.stringify = function(value) {\n  var type = exports.type(value);\n\n  if (!~exports.indexOf(['object', 'array', 'function'], type)) {\n    if(type != 'buffer') {\n      return jsonStringify(value);\n    }\n    var json = value.toJSON();\n    // Based on the toJSON result\n    return jsonStringify(json.data && json.type ? json.data : json, 2)\n      .replace(/,(\\n|$)/g, '$1');\n  }\n\n  for (var prop in value) {\n    if (Object.prototype.hasOwnProperty.call(value, prop)) {\n      return jsonStringify(exports.canonicalize(value), 2).replace(/,(\\n|$)/g, '$1');\n    }\n  }\n\n  return emptyRepresentation(value, type);\n};\n\n/**\n * @description\n * like JSON.stringify but more sense.\n * @param {Object}  object\n * @param {Number=} spaces\n * @param {number=} depth\n * @returns {*}\n * @private\n */\nfunction jsonStringify(object, spaces, depth) {\n  if(typeof spaces == 'undefined') return _stringify(object);  // primitive types\n\n  depth = depth || 1;\n  var space = spaces * depth\n    , str = isArray(object) ? '[' : '{'\n    , end = isArray(object) ? ']' : '}'\n    , length = object.length || exports.keys(object).length\n    , repeat = function(s, n) { return new Array(n).join(s); }; // `.repeat()` polyfill\n\n  function _stringify(val) {\n    switch (exports.type(val)) {\n      case 'null':\n      case 'undefined':\n        val = '[' + val + ']';\n        break;\n      case 'array':\n      case 'object':\n        val = jsonStringify(val, spaces, depth + 1);\n        break;\n      case 'boolean':\n      case 'regexp':\n      case 'number':\n        val = val === 0 && (1/val) === -Infinity // `-0`\n          ? '-0'\n          : val.toString();\n        break;\n      case 'date':\n        val = '[Date: ' + val.toISOString() + ']';\n        break;\n      case 'buffer':\n        var json = val.toJSON();\n        // Based on the toJSON result\n        json = json.data && json.type ? json.data : json;\n        val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n        break;\n      default:\n        val = (val == '[Function]' || val == '[Circular]')\n          ? val\n          : '\"' + val + '\"'; //string\n    }\n    return val;\n  }\n\n  for(var i in object) {\n    if(!object.hasOwnProperty(i)) continue;        // not my business\n    --length;\n    str += '\\n ' + repeat(' ', space)\n      + (isArray(object) ? '' : '\"' + i + '\": ') // key\n      +  _stringify(object[i])                   // value\n      + (length ? ',' : '');                     // comma\n  }\n\n  return str + (str.length != 1                    // [], {}\n    ? '\\n' + repeat(' ', --space) + end\n    : end);\n}\n\n/**\n * Return if obj is a Buffer\n * @param {Object} arg\n * @return {Boolean}\n * @api private\n */\nexports.isBuffer = function (arg) {\n  return typeof Buffer !== 'undefined' && Buffer.isBuffer(arg);\n};\n\n/**\n * @summary Return a new Thing that has the keys in sorted order.  Recursive.\n * @description If the Thing...\n * - has already been seen, return string `'[Circular]'`\n * - is `undefined`, return string `'[undefined]'`\n * - is `null`, return value `null`\n * - is some other primitive, return the value\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n *\n * @param {*} value Thing to inspect.  May or may not have properties.\n * @param {Array} [stack=[]] Stack of seen values\n * @return {(Object|Array|Function|string|undefined)}\n * @see {@link exports.stringify}\n * @api private\n */\n\nexports.canonicalize = function(value, stack) {\n  var canonicalizedObj,\n    type = exports.type(value),\n    prop,\n    withStack = function withStack(value, fn) {\n      stack.push(value);\n      fn();\n      stack.pop();\n    };\n\n  stack = stack || [];\n\n  if (exports.indexOf(stack, value) !== -1) {\n    return '[Circular]';\n  }\n\n  switch(type) {\n    case 'undefined':\n    case 'buffer':\n    case 'null':\n      canonicalizedObj = value;\n      break;\n    case 'array':\n      withStack(value, function () {\n        canonicalizedObj = exports.map(value, function (item) {\n          return exports.canonicalize(item, stack);\n        });\n      });\n      break;\n    case 'function':\n      for (prop in value) {\n        canonicalizedObj = {};\n        break;\n      }\n      if (!canonicalizedObj) {\n        canonicalizedObj = emptyRepresentation(value, type);\n        break;\n      }\n    /* falls through */\n    case 'object':\n      canonicalizedObj = canonicalizedObj || {};\n      withStack(value, function () {\n        exports.forEach(exports.keys(value).sort(), function (key) {\n          canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n        });\n      });\n      break;\n    case 'date':\n    case 'number':\n    case 'regexp':\n    case 'boolean':\n      canonicalizedObj = value;\n      break;\n    default:\n      canonicalizedObj = value.toString();\n  }\n\n  return canonicalizedObj;\n};\n\n/**\n * Lookup file names at the given `path`.\n */\nexports.lookupFiles = function lookupFiles(path, extensions, recursive) {\n  var files = [];\n  var re = new RegExp('\\\\.(' + extensions.join('|') + ')$');\n\n  if (!exists(path)) {\n    if (exists(path + '.js')) {\n      path += '.js';\n    } else {\n      files = glob.sync(path);\n      if (!files.length) throw new Error(\"cannot resolve path (or pattern) '\" + path + \"'\");\n      return files;\n    }\n  }\n\n  try {\n    var stat = fs.statSync(path);\n    if (stat.isFile()) return path;\n  }\n  catch (ignored) {\n    return;\n  }\n\n  fs.readdirSync(path).forEach(function(file) {\n    file = join(path, file);\n    try {\n      var stat = fs.statSync(file);\n      if (stat.isDirectory()) {\n        if (recursive) {\n          files = files.concat(lookupFiles(file, extensions, recursive));\n        }\n        return;\n      }\n    }\n    catch (ignored) {\n      return;\n    }\n    if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') return;\n    files.push(file);\n  });\n\n  return files;\n};\n\n/**\n * Generate an undefined error with a message warning the user.\n *\n * @return {Error}\n */\n\nexports.undefinedError = function() {\n  return new Error('Caught undefined error, did you throw without specifying what?');\n};\n\n/**\n * Generate an undefined error if `err` is not defined.\n *\n * @param {Error} err\n * @return {Error}\n */\n\nexports.getError = function(err) {\n  return err || exports.undefinedError();\n};\n\n\n/**\n * @summary\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n * @description\n * When invoking this function you get a filter function that get the Error.stack as an input,\n * and return a prettify output.\n * (i.e: strip Mocha, node_modules, bower and componentJS from stack trace).\n * @returns {Function}\n */\n\nexports.stackTraceFilter = function() {\n  var slash = '/'\n    , is = typeof document === 'undefined'\n      ? { node: true }\n      : { browser: true }\n    , cwd = is.node\n      ? process.cwd() + slash\n      : location.href.replace(/\\/[^\\/]*$/, '/');\n\n  function isNodeModule (line) {\n    return (~line.indexOf('node_modules'));\n  }\n\n  function isMochaInternal (line) {\n    return (~line.indexOf('node_modules' + slash + 'mocha'))  ||\n      (~line.indexOf('components' + slash + 'mochajs'))       ||\n      (~line.indexOf('components' + slash + 'mocha'));\n  }\n\n  // node_modules, bower, componentJS\n  function isBrowserModule(line) {\n    return (~line.indexOf('node_modules')) ||\n      (~line.indexOf('components'));\n  }\n\n  function isNodeInternal (line) {\n    return (~line.indexOf('(timers.js:')) ||\n      (~line.indexOf('(events.js:'))      ||\n      (~line.indexOf('(node.js:'))        ||\n      (~line.indexOf('(module.js:'))      ||\n      (~line.indexOf('GeneratorFunctionPrototype.next (native)')) ||\n      false\n  }\n\n  return function(stack) {\n    stack = stack.split('\\n');\n\n    stack = exports.reduce(stack, function(list, line) {\n      if (is.node && (isNodeModule(line) ||\n        isMochaInternal(line) ||\n        isNodeInternal(line)))\n        return list;\n\n      if (is.browser && (isBrowserModule(line)))\n        return list;\n\n      // Clean up cwd(absolute)\n      list.push(line.replace(cwd, ''));\n      return list;\n    }, []);\n\n    return stack.join('\\n');\n  }\n};\n}); // module: utils.js\n// The global object is \"self\" in Web Workers.\nvar global = (function() { return this; })();\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n\n/**\n * Node shims.\n *\n * These are meant only to allow\n * mocha.js to run untouched, not\n * to allow running node code in\n * the browser.\n */\n\nvar process = {};\nprocess.exit = function(status){};\nprocess.stdout = {};\n\nvar uncaughtExceptionHandlers = [];\n\nvar originalOnerrorHandler = global.onerror;\n\n/**\n * Remove uncaughtException listener.\n * Revert to original onerror handler if previously defined.\n */\n\nprocess.removeListener = function(e, fn){\n  if ('uncaughtException' == e) {\n    if (originalOnerrorHandler) {\n      global.onerror = originalOnerrorHandler;\n    } else {\n      global.onerror = function() {};\n    }\n    var i = Mocha.utils.indexOf(uncaughtExceptionHandlers, fn);\n    if (i != -1) { uncaughtExceptionHandlers.splice(i, 1); }\n  }\n};\n\n/**\n * Implements uncaughtException listener.\n */\n\nprocess.on = function(e, fn){\n  if ('uncaughtException' == e) {\n    global.onerror = function(err, url, line){\n      fn(new Error(err + ' (' + url + ':' + line + ')'));\n      return true;\n    };\n    uncaughtExceptionHandlers.push(fn);\n  }\n};\n\n/**\n * Expose mocha.\n */\n\nvar Mocha = global.Mocha = require('mocha'),\n    mocha = global.mocha = new Mocha({ reporter: 'html' });\n\n// The BDD UI is registered by default, but no UI will be functional in the\n// browser without an explicit call to the overridden `mocha.ui` (see below).\n// Ensure that this default UI does not expose its methods to the global scope.\nmocha.suite.removeAllListeners('pre-require');\n\nvar immediateQueue = []\n  , immediateTimeout;\n\nfunction timeslice() {\n  var immediateStart = new Date().getTime();\n  while (immediateQueue.length && (new Date().getTime() - immediateStart) < 100) {\n    immediateQueue.shift()();\n  }\n  if (immediateQueue.length) {\n    immediateTimeout = setTimeout(timeslice, 0);\n  } else {\n    immediateTimeout = null;\n  }\n}\n\n/**\n * High-performance override of Runner.immediately.\n */\n\nMocha.Runner.immediately = function(callback) {\n  immediateQueue.push(callback);\n  if (!immediateTimeout) {\n    immediateTimeout = setTimeout(timeslice, 0);\n  }\n};\n\n/**\n * Function to allow assertion libraries to throw errors directly into mocha.\n * This is useful when running tests in a browser because window.onerror will\n * only receive the 'message' attribute of the Error.\n */\nmocha.throwError = function(err) {\n  Mocha.utils.forEach(uncaughtExceptionHandlers, function (fn) {\n    fn(err);\n  });\n  throw err;\n};\n\n/**\n * Override ui to ensure that the ui functions are initialized.\n * Normally this would happen in Mocha.prototype.loadFiles.\n */\n\nmocha.ui = function(ui){\n  Mocha.prototype.ui.call(this, ui);\n  this.suite.emit('pre-require', global, null, this);\n  return this;\n};\n\n/**\n * Setup mocha with the given setting options.\n */\n\nmocha.setup = function(opts){\n  if ('string' == typeof opts) opts = { ui: opts };\n  for (var opt in opts) this[opt](opts[opt]);\n  return this;\n};\n\n/**\n * Run mocha, returning the Runner.\n */\n\nmocha.run = function(fn){\n  var options = mocha.options;\n  mocha.globals('location');\n\n  var query = Mocha.utils.parseQuery(global.location.search || '');\n  if (query.grep) mocha.grep(new RegExp(query.grep));\n  if (query.fgrep) mocha.grep(query.fgrep);\n  if (query.invert) mocha.invert();\n\n  return Mocha.prototype.run.call(mocha, function(err){\n    // The DOM Document is not available in Web Workers.\n    var document = global.document;\n    if (document && document.getElementById('mocha') && options.noHighlighting !== true) {\n      Mocha.utils.highlightTags('code');\n    }\n    if (fn) fn(err);\n  });\n};\n\n/**\n * Expose the process shim.\n */\n\nMocha.process = process;\n})();\n";

},24:function(n,e,t){/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var r=[],e=n.exports={};/*!
	 * Chai version
	 */
e.version="2.2.0",/*!
	 * Assertion Error
	 */
e.AssertionError=t(60);/*!
	 * Utils for plugins (not exported)
	 */
var i=t(35);e.use=function(n){return~r.indexOf(n)||(n(this,i),r.push(n)),this},/*!
	 * Utility Functions
	 */
e.util=i;/*!
	 * Configuration
	 */
var o=t(29);e.config=o;/*!
	 * Primary `Assertion` prototype
	 */
var s=t(30);e.use(s);/*!
	 * Core Assertions
	 */
var a=t(31);e.use(a);/*!
	 * Expect interface
	 */
var u=t(32);e.use(u);/*!
	 * Should interface
	 */
var c=t(33);e.use(c);/*!
	 * Assert interface
	 */
var l=t(34);e.use(l)},25:function(n,e,t){n.exports=function(){var n=[];return n.toString=function(){for(var n=[],e=0;e<this.length;e++){var t=this[e];n.push(t[2]?"@media "+t[2]+"{"+t[1]+"}":t[1])}return n.join("")},n}},29:function(n,e,t){n.exports={includeStack:!1,showDiff:!0,truncateThreshold:40}},30:function(n,e,t){/*!
	 * chai
	 * http://chaijs.com
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var r=t(29);n.exports=function(n,e){/*!
	   * Assertion Constructor
	   *
	   * Creates object for chaining.
	   *
	   * @api private
	   */
function t(n,e,t){o(this,"ssfi",t||arguments.callee),o(this,"object",n),o(this,"message",e)}/*!
	   * Module dependencies.
	   */
var i=n.AssertionError,o=e.flag;/*!
	   * Module export.
	   */
n.Assertion=t,Object.defineProperty(t,"includeStack",{get:function(){return console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),r.includeStack},set:function(n){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),r.includeStack=n}}),Object.defineProperty(t,"showDiff",{get:function(){return console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),r.showDiff},set:function(n){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),r.showDiff=n}}),t.addProperty=function(n,t){e.addProperty(this.prototype,n,t)},t.addMethod=function(n,t){e.addMethod(this.prototype,n,t)},t.addChainableMethod=function(n,t,r){e.addChainableMethod(this.prototype,n,t,r)},t.overwriteProperty=function(n,t){e.overwriteProperty(this.prototype,n,t)},t.overwriteMethod=function(n,t){e.overwriteMethod(this.prototype,n,t)},t.overwriteChainableMethod=function(n,t,r){e.overwriteChainableMethod(this.prototype,n,t,r)},/*!
	   * ### .assert(expression, message, negateMessage, expected, actual)
	   *
	   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.
	   *
	   * @name assert
	   * @param {Philosophical} expression to be tested
	   * @param {String or Function} message or function that returns message to display if expression fails
	   * @param {String or Function} negatedMessage or function that returns negatedMessage to display if negated expression fails
	   * @param {Mixed} expected value (remember to check for negation)
	   * @param {Mixed} actual (optional) will default to `this.obj`
	   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails
	   * @api private
	   */
t.prototype.assert=function(n,t,s,a,u,c){var l=e.test(this,arguments);if(!0!==c&&(c=!1),!0!==r.showDiff&&(c=!1),!l){var t=e.getMessage(this,arguments),f=e.getActual(this,arguments);throw new i(t,{actual:f,expected:a,showDiff:c},r.includeStack?this.assert:o(this,"ssfi"))}},/*!
	   * ### ._obj
	   *
	   * Quick reference to stored `actual` value for plugin developers.
	   *
	   * @api private
	   */
Object.defineProperty(t.prototype,"_obj",{get:function(){return o(this,"object")},set:function(n){o(this,"object",n)}})}},31:function(n,e,t){/*!
	 * chai
	 * http://chaijs.com
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e){function t(n,t){t&&k(this,"message",t),n=n.toLowerCase();var r=k(this,"object"),i=~["a","e","i","o","u"].indexOf(n.charAt(0))?"an ":"a ";this.assert(n===e.type(r),"expected #{this} to be "+i+n,"expected #{this} not to be "+i+n)}function r(){k(this,"contains",!0)}function i(n,t){t&&k(this,"message",t);var r=k(this,"object"),i=!1;if("array"===e.type(r)&&"object"===e.type(n)){for(var o in r)if(e.eql(r[o],n)){i=!0;break}}else if("object"===e.type(n)){if(!k(this,"negate")){for(var s in n)new j(r).property(s,n[s]);return}var a={};for(var s in n)a[s]=r[s];i=e.eql(a,n)}else i=r&&~r.indexOf(n);this.assert(i,"expected #{this} to include "+e.inspect(n),"expected #{this} to not include "+e.inspect(n))}function o(){var n=k(this,"object"),e=Object.prototype.toString.call(n);this.assert("[object Arguments]"===e,"expected #{this} to be arguments but got "+e,"expected #{this} to not be arguments")}function s(n,e){e&&k(this,"message",e);var t=k(this,"object");return k(this,"deep")?this.eql(n):void this.assert(n===t,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",n,this._obj,!0)}function a(n,t){t&&k(this,"message",t),this.assert(e.eql(n,k(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",n,this._obj,!0)}function u(n,e){e&&k(this,"message",e);var t=k(this,"object");if(k(this,"doLength")){new j(t,e).to.have.property("length");var r=t.length;this.assert(r>n,"expected #{this} to have a length above #{exp} but got #{act}","expected #{this} to not have a length above #{exp}",n,r)}else this.assert(t>n,"expected #{this} to be above "+n,"expected #{this} to be at most "+n)}function c(n,e){e&&k(this,"message",e);var t=k(this,"object");if(k(this,"doLength")){new j(t,e).to.have.property("length");var r=t.length;this.assert(r>=n,"expected #{this} to have a length at least #{exp} but got #{act}","expected #{this} to have a length below #{exp}",n,r)}else this.assert(t>=n,"expected #{this} to be at least "+n,"expected #{this} to be below "+n)}function l(n,e){e&&k(this,"message",e);var t=k(this,"object");if(k(this,"doLength")){new j(t,e).to.have.property("length");var r=t.length;this.assert(n>r,"expected #{this} to have a length below #{exp} but got #{act}","expected #{this} to not have a length below #{exp}",n,r)}else this.assert(n>t,"expected #{this} to be below "+n,"expected #{this} to be at least "+n)}function f(n,e){e&&k(this,"message",e);var t=k(this,"object");if(k(this,"doLength")){new j(t,e).to.have.property("length");var r=t.length;this.assert(n>=r,"expected #{this} to have a length at most #{exp} but got #{act}","expected #{this} to have a length above #{exp}",n,r)}else this.assert(n>=t,"expected #{this} to be at most "+n,"expected #{this} to be above "+n)}function p(n,t){t&&k(this,"message",t);var r=e.getName(n);this.assert(k(this,"object")instanceof n,"expected #{this} to be an instance of "+r,"expected #{this} to not be an instance of "+r)}function h(n,t){t&&k(this,"message",t);var r=k(this,"object");this.assert(r.hasOwnProperty(n),"expected #{this} to have own property "+e.inspect(n),"expected #{this} to not have own property "+e.inspect(n))}function d(){k(this,"doLength",!0)}function g(n,e){e&&k(this,"message",e);var t=k(this,"object");new j(t,e).to.have.property("length");var r=t.length;this.assert(r==n,"expected #{this} to have a length of #{exp} but got #{act}","expected #{this} to not have a length of #{act}",n,r)}function m(n){var t,r=k(this,"object"),i=!0,o="keys must be given single argument of Array|Object|String, or multiple String arguments";switch(e.type(n)){case"array":if(arguments.length>1)throw new Error(o);break;case"object":if(arguments.length>1)throw new Error(o);n=Object.keys(n);break;default:n=Array.prototype.slice.call(arguments)}if(!n.length)throw new Error("keys required");var s=Object.keys(r),a=n,u=n.length,c=k(this,"any"),l=k(this,"all");if(c||l||(l=!0),c){var f=a.filter(function(n){return~s.indexOf(n)});i=f.length>0}if(l&&(i=n.every(function(n){return~s.indexOf(n)}),k(this,"negate")||k(this,"contains")||(i=i&&n.length==s.length)),u>1){n=n.map(function(n){return e.inspect(n)});var p=n.pop();l&&(t=n.join(", ")+", and "+p),c&&(t=n.join(", ")+", or "+p)}else t=e.inspect(n[0]);t=(u>1?"keys ":"key ")+t,t=(k(this,"contains")?"contain ":"have ")+t,this.assert(i,"expected #{this} to "+t,"expected #{this} to not "+t,a.slice(0).sort(),s.sort(),!0)}function b(n,t,r){r&&k(this,"message",r);var i=k(this,"object");new j(i,r).is.a("function");var o=!1,s=null,a=null,u=null;0===arguments.length?(t=null,n=null):n&&(n instanceof RegExp||"string"==typeof n)?(t=n,n=null):n&&n instanceof Error?(s=n,n=null,t=null):"function"==typeof n?(a=n.prototype.name||n.name,"Error"===a&&n!==Error&&(a=(new n).name)):n=null;try{i()}catch(c){if(s)return this.assert(c===s,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}",s instanceof Error?s.toString():s,c instanceof Error?c.toString():c),k(this,"object",c),this;if(n&&(this.assert(c instanceof n,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp} but #{act} was thrown",a,c instanceof Error?c.toString():c),!t))return k(this,"object",c),this;var l="object"===e.type(c)&&"message"in c?c.message:""+c;if(null!=l&&t&&t instanceof RegExp)return this.assert(t.exec(l),"expected #{this} to throw error matching #{exp} but got #{act}","expected #{this} to throw error not matching #{exp}",t,l),k(this,"object",c),this;if(null!=l&&t&&"string"==typeof t)return this.assert(~l.indexOf(t),"expected #{this} to throw error including #{exp} but got #{act}","expected #{this} to throw error not including #{act}",t,l),k(this,"object",c),this;o=!0,u=c}var f="",p=null!==a?a:s?"#{exp}":"an error";o&&(f=" but #{act} was thrown"),this.assert(o===!0,"expected #{this} to throw "+p+f,"expected #{this} to not throw "+p+f,s instanceof Error?s.toString():s,u instanceof Error?u.toString():u),k(this,"object",u)}function v(n,e,t){return n.every(function(n){return t?e.some(function(e){return t(n,e)}):-1!==e.indexOf(n)})}function y(n,e,t){t&&k(this,"message",t);var r=k(this,"object");new j(n,t).to.have.property(e),new j(r).is.a("function");var i=n[e];r(),this.assert(i!==n[e],"expected ."+e+" to change","expected ."+e+" to not change")}function w(n,e,t){t&&k(this,"message",t);var r=k(this,"object");new j(n,t).to.have.property(e),new j(r).is.a("function");var i=n[e];r(),this.assert(n[e]-i>0,"expected ."+e+" to increase","expected ."+e+" to not increase")}function x(n,e,t){t&&k(this,"message",t);var r=k(this,"object");new j(n,t).to.have.property(e),new j(r).is.a("function");var i=n[e];r(),this.assert(n[e]-i<0,"expected ."+e+" to decrease","expected ."+e+" to not decrease")}var j=n.Assertion,k=(Object.prototype.toString,e.flag);["to","be","been","is","and","has","have","with","that","which","at","of","same"].forEach(function(n){j.addProperty(n,function(){return this})}),j.addProperty("not",function(){k(this,"negate",!0)}),j.addProperty("deep",function(){k(this,"deep",!0)}),j.addProperty("any",function(){k(this,"any",!0),k(this,"all",!1)}),j.addProperty("all",function(){k(this,"all",!0),k(this,"any",!1)}),j.addChainableMethod("an",t),j.addChainableMethod("a",t),j.addChainableMethod("include",i,r),j.addChainableMethod("contain",i,r),j.addChainableMethod("contains",i,r),j.addChainableMethod("includes",i,r),j.addProperty("ok",function(){this.assert(k(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")}),j.addProperty("true",function(){this.assert(!0===k(this,"object"),"expected #{this} to be true","expected #{this} to be false",this.negate?!1:!0)}),j.addProperty("false",function(){this.assert(!1===k(this,"object"),"expected #{this} to be false","expected #{this} to be true",this.negate?!0:!1)}),j.addProperty("null",function(){this.assert(null===k(this,"object"),"expected #{this} to be null","expected #{this} not to be null")}),j.addProperty("undefined",function(){this.assert(void 0===k(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")}),j.addProperty("exist",function(){this.assert(null!=k(this,"object"),"expected #{this} to exist","expected #{this} to not exist")}),j.addProperty("empty",function(){var n=k(this,"object"),e=n;Array.isArray(n)||"string"==typeof object?e=n.length:"object"==typeof n&&(e=Object.keys(n).length),this.assert(!e,"expected #{this} to be empty","expected #{this} not to be empty")}),j.addProperty("arguments",o),j.addProperty("Arguments",o),j.addMethod("equal",s),j.addMethod("equals",s),j.addMethod("eq",s),j.addMethod("eql",a),j.addMethod("eqls",a),j.addMethod("above",u),j.addMethod("gt",u),j.addMethod("greaterThan",u),j.addMethod("least",c),j.addMethod("gte",c),j.addMethod("below",l),j.addMethod("lt",l),j.addMethod("lessThan",l),j.addMethod("most",f),j.addMethod("lte",f),j.addMethod("within",function(n,e,t){t&&k(this,"message",t);var r=k(this,"object"),i=n+".."+e;if(k(this,"doLength")){new j(r,t).to.have.property("length");var o=r.length;this.assert(o>=n&&e>=o,"expected #{this} to have a length within "+i,"expected #{this} to not have a length within "+i)}else this.assert(r>=n&&e>=r,"expected #{this} to be within "+i,"expected #{this} to not be within "+i)}),j.addMethod("instanceof",p),j.addMethod("instanceOf",p),j.addMethod("property",function(n,t,r){r&&k(this,"message",r);var i=!!k(this,"deep"),o=i?"deep property ":"property ",s=k(this,"negate"),a=k(this,"object"),u=i?e.getPathInfo(n,a):null,c=i?u.exists:e.hasProperty(n,a),l=i?u.value:a[n];if(s&&void 0!==t){if(void 0===l)throw r=null!=r?r+": ":"",new Error(r+e.inspect(a)+" has no "+o+e.inspect(n))}else this.assert(c,"expected #{this} to have a "+o+e.inspect(n),"expected #{this} to not have "+o+e.inspect(n));void 0!==t&&this.assert(t===l,"expected #{this} to have a "+o+e.inspect(n)+" of #{exp}, but got #{act}","expected #{this} to not have a "+o+e.inspect(n)+" of #{act}",t,l),k(this,"object",l)}),j.addMethod("ownProperty",h),j.addMethod("haveOwnProperty",h),j.addChainableMethod("length",g,d),j.addMethod("lengthOf",g),j.addMethod("match",function(n,e){e&&k(this,"message",e);var t=k(this,"object");this.assert(n.exec(t),"expected #{this} to match "+n,"expected #{this} not to match "+n)}),j.addMethod("string",function(n,t){t&&k(this,"message",t);var r=k(this,"object");new j(r,t).is.a("string"),this.assert(~r.indexOf(n),"expected #{this} to contain "+e.inspect(n),"expected #{this} to not contain "+e.inspect(n))}),j.addMethod("keys",m),j.addMethod("key",m),j.addMethod("throw",b),j.addMethod("throws",b),j.addMethod("Throw",b),j.addMethod("respondTo",function(n,t){t&&k(this,"message",t);var r=k(this,"object"),i=k(this,"itself"),o="function"!==e.type(r)||i?r[n]:r.prototype[n];this.assert("function"==typeof o,"expected #{this} to respond to "+e.inspect(n),"expected #{this} to not respond to "+e.inspect(n))}),j.addProperty("itself",function(){k(this,"itself",!0)}),j.addMethod("satisfy",function(n,t){t&&k(this,"message",t);var r=k(this,"object"),i=n(r);this.assert(i,"expected #{this} to satisfy "+e.objDisplay(n),"expected #{this} to not satisfy"+e.objDisplay(n),this.negate?!1:!0,i)}),j.addMethod("closeTo",function(n,t,r){r&&k(this,"message",r);var i=k(this,"object");if(new j(i,r).is.a("number"),"number"!==e.type(n)||"number"!==e.type(t))throw new Error("the arguments to closeTo must be numbers");this.assert(Math.abs(i-n)<=t,"expected #{this} to be close to "+n+" +/- "+t,"expected #{this} not to be close to "+n+" +/- "+t)}),j.addMethod("members",function(n,t){t&&k(this,"message",t);var r=k(this,"object");new j(r).to.be.an("array"),new j(n).to.be.an("array");var i=k(this,"deep")?e.eql:void 0;return k(this,"contains")?this.assert(v(n,r,i),"expected #{this} to be a superset of #{act}","expected #{this} to not be a superset of #{act}",r,n):void this.assert(v(r,n,i)&&v(n,r,i),"expected #{this} to have the same members as #{act}","expected #{this} to not have the same members as #{act}",r,n)}),j.addChainableMethod("change",y),j.addChainableMethod("changes",y),j.addChainableMethod("increase",w),j.addChainableMethod("increases",w),j.addChainableMethod("decrease",x),j.addChainableMethod("decreases",x)}},32:function(n,e,t){/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e){n.expect=function(e,t){return new n.Assertion(e,t)},n.expect.fail=function(e,t,r,i){throw r=r||"expect.fail()",new n.AssertionError(r,{actual:e,expected:t,operator:i},n.expect.fail)}}},33:function(n,e,t){/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e){function t(){function e(){return this instanceof String||this instanceof Number||this instanceof Boolean?new r(this.valueOf(),null,e):new r(this,null,e)}function t(n){Object.defineProperty(this,"should",{value:n,enumerable:!0,configurable:!0,writable:!0})}Object.defineProperty(Object.prototype,"should",{set:t,get:e,configurable:!0});var i={};return i.fail=function(e,t,r,o){throw r=r||"should.fail()",new n.AssertionError(r,{actual:e,expected:t,operator:o},i.fail)},i.equal=function(n,e,t){new r(n,t).to.equal(e)},i.Throw=function(n,e,t,i){new r(n,i).to.Throw(e,t)},i.exist=function(n,e){new r(n,e).to.exist},i.not={},i.not.equal=function(n,e,t){new r(n,t).to.not.equal(e)},i.not.Throw=function(n,e,t,i){new r(n,i).to.not.Throw(e,t)},i.not.exist=function(n,e){new r(n,e).to.not.exist},i["throw"]=i.Throw,i.not["throw"]=i.not.Throw,i}var r=n.Assertion;n.should=t,n.Should=t}},34:function(n,e,t){/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e){/*!
	   * Chai dependencies.
	   */
var t=n.Assertion,r=e.flag,i=n.assert=function(e,r){var i=new t(null,null,n.assert);i.assert(e,r,"[ negation message unavailable ]")};i.fail=function(e,t,r,o){throw r=r||"assert.fail()",new n.AssertionError(r,{actual:e,expected:t,operator:o},i.fail)},i.ok=function(n,e){new t(n,e).is.ok},i.notOk=function(n,e){new t(n,e).is.not.ok},i.equal=function(n,e,o){var s=new t(n,o,i.equal);s.assert(e==r(s,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",e,n)},i.notEqual=function(n,e,o){var s=new t(n,o,i.notEqual);s.assert(e!=r(s,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",e,n)},i.strictEqual=function(n,e,r){new t(n,r).to.equal(e)},i.notStrictEqual=function(n,e,r){new t(n,r).to.not.equal(e)},i.deepEqual=function(n,e,r){new t(n,r).to.eql(e)},i.notDeepEqual=function(n,e,r){new t(n,r).to.not.eql(e)},i.isAbove=function(n,e,r){new t(n,r).to.be.above(e)},i.isBelow=function(n,e,r){new t(n,r).to.be.below(e)},i.isTrue=function(n,e){new t(n,e).is["true"]},i.isFalse=function(n,e){new t(n,e).is["false"]},i.isNull=function(n,e){new t(n,e).to.equal(null)},i.isNotNull=function(n,e){new t(n,e).to.not.equal(null)},i.isUndefined=function(n,e){new t(n,e).to.equal(void 0)},i.isDefined=function(n,e){new t(n,e).to.not.equal(void 0)},i.isFunction=function(n,e){new t(n,e).to.be.a("function")},i.isNotFunction=function(n,e){new t(n,e).to.not.be.a("function")},i.isObject=function(n,e){new t(n,e).to.be.a("object")},i.isNotObject=function(n,e){new t(n,e).to.not.be.a("object")},i.isArray=function(n,e){new t(n,e).to.be.an("array")},i.isNotArray=function(n,e){new t(n,e).to.not.be.an("array")},i.isString=function(n,e){new t(n,e).to.be.a("string")},i.isNotString=function(n,e){new t(n,e).to.not.be.a("string")},i.isNumber=function(n,e){new t(n,e).to.be.a("number")},i.isNotNumber=function(n,e){new t(n,e).to.not.be.a("number")},i.isBoolean=function(n,e){new t(n,e).to.be.a("boolean")},i.isNotBoolean=function(n,e){new t(n,e).to.not.be.a("boolean")},i.typeOf=function(n,e,r){new t(n,r).to.be.a(e)},i.notTypeOf=function(n,e,r){new t(n,r).to.not.be.a(e)},i.instanceOf=function(n,e,r){new t(n,r).to.be.instanceOf(e)},i.notInstanceOf=function(n,e,r){new t(n,r).to.not.be.instanceOf(e)},i.include=function(n,e,r){new t(n,r,i.include).include(e)},i.notInclude=function(n,e,r){new t(n,r,i.notInclude).not.include(e)},i.match=function(n,e,r){new t(n,r).to.match(e)},i.notMatch=function(n,e,r){new t(n,r).to.not.match(e)},i.property=function(n,e,r){new t(n,r).to.have.property(e)},i.notProperty=function(n,e,r){new t(n,r).to.not.have.property(e)},i.deepProperty=function(n,e,r){new t(n,r).to.have.deep.property(e)},i.notDeepProperty=function(n,e,r){new t(n,r).to.not.have.deep.property(e)},i.propertyVal=function(n,e,r,i){new t(n,i).to.have.property(e,r)},i.propertyNotVal=function(n,e,r,i){new t(n,i).to.not.have.property(e,r)},i.deepPropertyVal=function(n,e,r,i){new t(n,i).to.have.deep.property(e,r)},i.deepPropertyNotVal=function(n,e,r,i){new t(n,i).to.not.have.deep.property(e,r)},i.lengthOf=function(n,e,r){new t(n,r).to.have.length(e)},i.Throw=function(n,e,i,o){("string"==typeof e||e instanceof RegExp)&&(i=e,e=null);var s=new t(n,o).to.Throw(e,i);return r(s,"object")},i.doesNotThrow=function(n,e,r){"string"==typeof e&&(r=e,e=null),new t(n,r).to.not.Throw(e)},i.operator=function(n,i,o,s){var a;switch(i){case"==":a=n==o;break;case"===":a=n===o;break;case">":a=n>o;break;case">=":a=n>=o;break;case"<":a=o>n;break;case"<=":a=o>=n;break;case"!=":a=n!=o;break;case"!==":a=n!==o;break;default:throw new Error('Invalid operator "'+i+'"')}var u=new t(a,s);u.assert(!0===r(u,"object"),"expected "+e.inspect(n)+" to be "+i+" "+e.inspect(o),"expected "+e.inspect(n)+" to not be "+i+" "+e.inspect(o))},i.closeTo=function(n,e,r,i){new t(n,i).to.be.closeTo(e,r)},i.sameMembers=function(n,e,r){new t(n,r).to.have.same.members(e)},i.sameDeepMembers=function(n,e,r){new t(n,r).to.have.same.deep.members(e)},i.includeMembers=function(n,e,r){new t(n,r).to.include.members(e)},i.changes=function(n,e,r){new t(n).to.change(e,r)},i.doesNotChange=function(n,e,r){new t(n).to.not.change(e,r)},i.increases=function(n,e,r){new t(n).to.increase(e,r)},i.doesNotIncrease=function(n,e,r){new t(n).to.not.increase(e,r)},i.decreases=function(n,e,r){new t(n).to.decrease(e,r)},i.doesNotDecrease=function(n,e,r){new t(n).to.not.decrease(e,r)},/*!
	   * Undocumented / untested
	   */
i.ifError=function(n,e){new t(n,e).to.not.be.ok},/*!
	   * Aliases.
	   */
function o(n,e){return i[e]=i[n],o}("Throw","throw")("Throw","throws")}},35:function(n,e,t){/*!
	 * chai
	 * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Main exports
	 */
var e=n.exports={};/*!
	 * test utility
	 */
e.test=t(65),/*!
	 * type utility
	 */
e.type=t(66),/*!
	 * message utility
	 */
e.getMessage=t(67),/*!
	 * actual utility
	 */
e.getActual=t(68),/*!
	 * Inspect util
	 */
e.inspect=t(69),/*!
	 * Object Display util
	 */
e.objDisplay=t(70),/*!
	 * Flag utility
	 */
e.flag=t(71),/*!
	 * Flag transferring utility
	 */
e.transferFlags=t(72),/*!
	 * Deep equal utility
	 */
e.eql=t(144),/*!
	 * Deep path value
	 */
e.getPathValue=t(73),/*!
	 * Deep path info
	 */
e.getPathInfo=t(74),/*!
	 * Check if a property exists
	 */
e.hasProperty=t(75),/*!
	 * Function name
	 */
e.getName=t(76),/*!
	 * add Property
	 */
e.addProperty=t(77),/*!
	 * add Method
	 */
e.addMethod=t(78),/*!
	 * overwrite Property
	 */
e.overwriteProperty=t(79),/*!
	 * overwrite Method
	 */
e.overwriteMethod=t(80),/*!
	 * Add a chainable method
	 */
e.addChainableMethod=t(81),/*!
	 * Overwrite chainable method
	 */
e.overwriteChainableMethod=t(82)},60:function(n,e,t){/*!
	 * assertion-error
	 * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>
	 * MIT Licensed
	 */
/*!
	 * Return a function that will copy properties from
	 * one object to another excluding any originally
	 * listed. Returned function will create a new `{}`.
	 *
	 * @param {String} excluded properties ...
	 * @return {Function}
	 */
function r(){function n(n,t){Object.keys(t).forEach(function(r){~e.indexOf(r)||(n[r]=t[r])})}var e=[].slice.call(arguments);return function(){for(var e=[].slice.call(arguments),t=0,r={};t<e.length;t++)n(r,e[t]);return r}}function i(n,e,t){var i=r("name","message","stack","constructor","toJSON"),o=i(e||{});this.message=n||"Unspecified AssertionError",this.showDiff=!1;for(var s in o)this[s]=o[s];t=t||arguments.callee,t&&Error.captureStackTrace&&Error.captureStackTrace(this,t)}/*!
	 * Primary Exports
	 */
n.exports=i,/*!
	 * Inherit from Error.prototype
	 */
i.prototype=Object.create(Error.prototype),/*!
	 * Statically set name
	 */
i.prototype.name="AssertionError",/*!
	 * Ensure correct constructor
	 */
i.prototype.constructor=i,i.prototype.toJSON=function(n){var e=r("constructor","toJSON","stack"),t=e({name:this.name},this);return!1!==n&&this.stack&&(t.stack=this.stack),t}},65:function(n,e,t){/*!
	 * Chai - test utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependancies
	 */
var r=t(71);n.exports=function(n,e){var t=r(n,"negate"),i=e[0];return t?!i:i}},66:function(n,e,t){/*!
	 * Chai - type utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Detectable javascript natives
	 */
var r={"[object Arguments]":"arguments","[object Array]":"array","[object Date]":"date","[object Function]":"function","[object Number]":"number","[object RegExp]":"regexp","[object String]":"string"};n.exports=function(n){var e=Object.prototype.toString.call(n);return r[e]?r[e]:null===n?"null":void 0===n?"undefined":n===Object(n)?"object":typeof n}},67:function(n,e,t){/*!
	 * Chai - message composition utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependancies
	 */
var r=t(71),i=t(68),o=(t(69),t(70));n.exports=function(n,e){var t=r(n,"negate"),s=r(n,"object"),a=e[3],u=i(n,e),c=t?e[2]:e[1],l=r(n,"message");return"function"==typeof c&&(c=c()),c=c||"",c=c.replace(/#{this}/g,o(s)).replace(/#{act}/g,o(u)).replace(/#{exp}/g,o(a)),l?l+": "+c:c}},68:function(n,e,t){/*!
	 * Chai - getActual utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e){return e.length>4?e[4]:n._obj}},69:function(n,e,t){function r(n,e,t,r){var o={showHidden:e,seen:[],stylize:function(n){return n}};return i(o,n,"undefined"==typeof t?2:t)}function i(n,t,r){if(t&&"function"==typeof t.inspect&&t.inspect!==e.inspect&&(!t.constructor||t.constructor.prototype!==t)){var d=t.inspect(r);return"string"!=typeof d&&(d=i(n,d,r)),d}var y=o(n,t);if(y)return y;if(v(t)){if("outerHTML"in t)return t.outerHTML;try{if(document.xmlVersion){var w=new XMLSerializer;return w.serializeToString(t)}var x="http://www.w3.org/1999/xhtml",j=document.createElementNS(x,"_");return j.appendChild(t.cloneNode(!1)),html=j.innerHTML.replace("><",">"+t.innerHTML+"<"),j.innerHTML="",html}catch(k){}}var S=b(t),E=n.showHidden?m(t):S;if(0===E.length||h(t)&&(1===E.length&&"stack"===E[0]||2===E.length&&"description"===E[0]&&"stack"===E[1])){if("function"==typeof t){var O=g(t),T=O?": "+O:"";return n.stylize("[Function"+T+"]","special")}if(f(t))return n.stylize(RegExp.prototype.toString.call(t),"regexp");if(p(t))return n.stylize(Date.prototype.toUTCString.call(t),"date");if(h(t))return s(t)}var q="",M=!1,P=["{","}"];if(l(t)&&(M=!0,P=["[","]"]),"function"==typeof t){var O=g(t),T=O?": "+O:"";q=" [Function"+T+"]"}if(f(t)&&(q=" "+RegExp.prototype.toString.call(t)),p(t)&&(q=" "+Date.prototype.toUTCString.call(t)),h(t))return s(t);if(0===E.length&&(!M||0==t.length))return P[0]+q+P[1];if(0>r)return f(t)?n.stylize(RegExp.prototype.toString.call(t),"regexp"):n.stylize("[Object]","special");n.seen.push(t);var R;return R=M?a(n,t,r,S,E):E.map(function(e){return u(n,t,r,S,e,M)}),n.seen.pop(),c(R,q,P)}function o(n,e){switch(typeof e){case"undefined":return n.stylize("undefined","undefined");case"string":var t="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return n.stylize(t,"string");case"number":return 0===e&&1/e===-(1/0)?n.stylize("-0","number"):n.stylize(""+e,"number");case"boolean":return n.stylize(""+e,"boolean")}return null===e?n.stylize("null","null"):void 0}function s(n){return"["+Error.prototype.toString.call(n)+"]"}function a(n,e,t,r,i){for(var o=[],s=0,a=e.length;a>s;++s)o.push(Object.prototype.hasOwnProperty.call(e,String(s))?u(n,e,t,r,String(s),!0):"");return i.forEach(function(i){i.match(/^\d+$/)||o.push(u(n,e,t,r,i,!0))}),o}function u(n,e,t,r,o,s){var a,u;if(e.__lookupGetter__&&(e.__lookupGetter__(o)?u=e.__lookupSetter__(o)?n.stylize("[Getter/Setter]","special"):n.stylize("[Getter]","special"):e.__lookupSetter__(o)&&(u=n.stylize("[Setter]","special"))),r.indexOf(o)<0&&(a="["+o+"]"),u||(n.seen.indexOf(e[o])<0?(u=null===t?i(n,e[o],null):i(n,e[o],t-1),u.indexOf("\n")>-1&&(u=s?u.split("\n").map(function(n){return"  "+n}).join("\n").substr(2):"\n"+u.split("\n").map(function(n){return"   "+n}).join("\n"))):u=n.stylize("[Circular]","special")),"undefined"==typeof a){if(s&&o.match(/^\d+$/))return u;a=JSON.stringify(""+o),a.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(a=a.substr(1,a.length-2),a=n.stylize(a,"name")):(a=a.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),a=n.stylize(a,"string"))}return a+": "+u}function c(n,e,t){var r=0,i=n.reduce(function(n,e){return r++,e.indexOf("\n")>=0&&r++,n+e.length+1},0);return i>60?t[0]+(""===e?"":e+"\n ")+" "+n.join(",\n  ")+" "+t[1]:t[0]+e+" "+n.join(", ")+" "+t[1]}function l(n){return Array.isArray(n)||"object"==typeof n&&"[object Array]"===d(n)}function f(n){return"object"==typeof n&&"[object RegExp]"===d(n)}function p(n){return"object"==typeof n&&"[object Date]"===d(n)}function h(n){return"object"==typeof n&&"[object Error]"===d(n)}function d(n){return Object.prototype.toString.call(n)}var g=t(76),m=t(146),b=t(147);n.exports=r;var v=function(n){return"object"==typeof HTMLElement?n instanceof HTMLElement:n&&"object"==typeof n&&1===n.nodeType&&"string"==typeof n.nodeName}},70:function(n,e,t){/*!
	 * Chai - flag utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependancies
	 */
var r=t(69),i=t(29);n.exports=function(n){var e=r(n),t=Object.prototype.toString.call(n);if(i.truncateThreshold&&e.length>=i.truncateThreshold){if("[object Function]"===t)return n.name&&""!==n.name?"[Function: "+n.name+"]":"[Function]";if("[object Array]"===t)return"[ Array("+n.length+") ]";if("[object Object]"===t){var o=Object.keys(n),s=o.length>2?o.splice(0,2).join(", ")+", ...":o.join(", ");return"{ Object ("+s+") }"}return e}return e}},71:function(n,e,t){/*!
	 * Chai - flag utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e,t){var r=n.__flags||(n.__flags=Object.create(null));return 3!==arguments.length?r[e]:void(r[e]=t)}},72:function(n,e,t){/*!
	 * Chai - transferFlags utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e,t){var r=n.__flags||(n.__flags=Object.create(null));e.__flags||(e.__flags=Object.create(null)),t=3===arguments.length?t:!0;for(var i in r)(t||"object"!==i&&"ssfi"!==i&&"message"!=i)&&(e.__flags[i]=r[i])}},73:function(n,e,t){/*!
	 * Chai - getPathValue utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * @see https://github.com/logicalparadox/filtr
	 * MIT Licensed
	 */
var r=t(74);n.exports=function(n,e){var t=r(n,e);return t.value}},74:function(n,e,t){/*!
	 * ## parsePath(path)
	 *
	 * Helper function used to parse string object
	 * paths. Use in conjunction with `_getPathValue`.
	 *
	 *      var parsed = parsePath('myobject.property.subprop');
	 *
	 * ### Paths:
	 *
	 * * Can be as near infinitely deep and nested
	 * * Arrays are also valid using the formal `myobject.document[3].property`.
	 * * Literal dots and brackets (not delimiter) must be backslash-escaped.
	 *
	 * @param {String} path
	 * @returns {Object} parsed
	 * @api private
	 */
function r(n){var e=n.replace(/([^\\])\[/g,"$1.["),t=e.match(/(\\\.|[^.]+?)+/g);return t.map(function(n){var e=/^\[(\d+)\]$/,t=e.exec(n);return t?{i:parseFloat(t[1])}:{p:n.replace(/\\([.\[\]])/g,"$1")}})}/*!
	 * ## _getPathValue(parsed, obj)
	 *
	 * Helper companion function for `.parsePath` that returns
	 * the value located at the parsed address.
	 *
	 *      var value = getPathValue(parsed, obj);
	 *
	 * @param {Object} parsed definition from `parsePath`.
	 * @param {Object} object to search against
	 * @param {Number} object to search against
	 * @returns {Object|Undefined} value
	 * @api private
	 */
function i(n,e,t){var r,i=e;t=void 0===t?n.length:t;for(var o=0,s=t;s>o;o++){var a=n[o];i?("undefined"!=typeof a.p?i=i[a.p]:"undefined"!=typeof a.i&&(i=i[a.i]),o==s-1&&(r=i)):r=void 0}return r}/*!
	 * Chai - getPathInfo utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var o=t(75);n.exports=function(n,e){var t=r(n),s=t[t.length-1],a={parent:t.length>1?i(t,e,t.length-1):e,name:s.p||s.i,value:i(t,e)};return a.exists=o(a.name,a.parent),a}},75:function(n,e,t){/*!
	 * Chai - hasProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var r=t(66),i={number:Number,string:String};n.exports=function(n,e){var t=r(e);return"null"===t||"undefined"===t?!1:(i[t]&&"object"!=typeof e&&(e=new i[t](e)),n in e)}},76:function(n,e,t){/*!
	 * Chai - getName utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n){if(n.name)return n.name;var e=/^\s?function ([^(]*)\(/.exec(n);return e&&e[1]?e[1]:""}},77:function(n,e,t){/*!
	 * Chai - addProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e,t){Object.defineProperty(n,e,{get:function(){var n=t.call(this);return void 0===n?this:n},configurable:!0})}},78:function(n,e,t){/*!
	 * Chai - addMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
var r=t(29),i=t(71);n.exports=function(n,e,t){n[e]=function(){var o=i(this,"ssfi");o&&r.includeStack===!1&&i(this,"ssfi",n[e]);var s=t.apply(this,arguments);return void 0===s?this:s}}},79:function(n,e,t){/*!
	 * Chai - overwriteProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e,t){var r=Object.getOwnPropertyDescriptor(n,e),i=function(){};r&&"function"==typeof r.get&&(i=r.get),Object.defineProperty(n,e,{get:function(){var n=t(i).call(this);return void 0===n?this:n},configurable:!0})}},80:function(n,e,t){/*!
	 * Chai - overwriteMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e,t){var r=n[e],i=function(){return this};r&&"function"==typeof r&&(i=r),n[e]=function(){var n=t(i).apply(this,arguments);return void 0===n?this:n}}},81:function(n,e,t){/*!
	 * Chai - addChainingMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependencies
	 */
var r=t(72),i=t(71),o=t(29),s="__proto__"in Object,a=/^(?:length|name|arguments|caller)$/,u=Function.prototype.call,c=Function.prototype.apply;n.exports=function(n,e,t,l){"function"!=typeof l&&(l=function(){});var f={method:t,chainingBehavior:l};n.__methods||(n.__methods={}),n.__methods[e]=f,Object.defineProperty(n,e,{get:function(){f.chainingBehavior.call(this);var e=function p(){var n=i(this,"ssfi");n&&o.includeStack===!1&&i(this,"ssfi",p);var e=f.method.apply(this,arguments);return void 0===e?this:e};if(s){var t=e.__proto__=Object.create(this);t.call=u,t.apply=c}else{var l=Object.getOwnPropertyNames(n);l.forEach(function(t){if(!a.test(t)){var r=Object.getOwnPropertyDescriptor(n,t);Object.defineProperty(e,t,r)}})}return r(this,e),e},configurable:!0})}},82:function(n,e,t){/*!
	 * Chai - overwriteChainableMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n,e,t,r){var i=n.__methods[e],o=i.chainingBehavior;i.chainingBehavior=function(){var n=r(o).call(this);return void 0===n?this:n};var s=i.method;i.method=function(){var n=t(s).apply(this,arguments);return void 0===n?this:n}}},144:function(n,e,t){n.exports=t(198)},146:function(n,e,t){/*!
	 * Chai - getProperties utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n){function e(n){-1===t.indexOf(n)&&t.push(n)}for(var t=Object.getOwnPropertyNames(subject),r=Object.getPrototypeOf(subject);null!==r;)Object.getOwnPropertyNames(r).forEach(e),r=Object.getPrototypeOf(r);return t}},147:function(n,e,t){/*!
	 * Chai - getEnumerableProperties utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
n.exports=function(n){var e=[];for(var t in n)e.push(t);return e}},198:function(n,e,t){function r(n,e,t){return i(n,e)?!0:"date"===g(n)?s(n,e):"regexp"===g(n)?a(n,e):d.isBuffer(n)?f(n,e):"arguments"===g(n)?u(n,e,t):o(n,e)?"object"!==g(n)&&"object"!==g(e)&&"array"!==g(n)&&"array"!==g(e)?i(n,e):h(n,e,t):!1}/*!
	 * Strict (egal) equality test. Ensures that NaN always
	 * equals NaN and `-0` does not equal `+0`.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} equal match
	 */
function i(n,e){return n===e?0!==n||1/n===1/e:n!==n&&e!==e}/*!
	 * Compare the types of two given objects and
	 * return if they are equal. Note that an Array
	 * has a type of `array` (not `object`) and arguments
	 * have a type of `arguments` (not `array`/`object`).
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */
function o(n,e){return g(n)===g(e)}/*!
	 * Compare two Date objects by asserting that
	 * the time values are equal using `saveValue`.
	 *
	 * @param {Date} a
	 * @param {Date} b
	 * @return {Boolean} result
	 */
function s(n,e){return"date"!==g(e)?!1:i(n.getTime(),e.getTime())}/*!
	 * Compare two regular expressions by converting them
	 * to string and checking for `sameValue`.
	 *
	 * @param {RegExp} a
	 * @param {RegExp} b
	 * @return {Boolean} result
	 */
function a(n,e){return"regexp"!==g(e)?!1:i(n.toString(),e.toString())}/*!
	 * Assert deep equality of two `arguments` objects.
	 * Unfortunately, these must be sliced to arrays
	 * prior to test to ensure no bad behavior.
	 *
	 * @param {Arguments} a
	 * @param {Arguments} b
	 * @param {Array} memoize (optional)
	 * @return {Boolean} result
	 */
function u(n,e,t){return"arguments"!==g(e)?!1:(n=[].slice.call(n),e=[].slice.call(e),r(n,e,t))}/*!
	 * Get enumerable properties of a given object.
	 *
	 * @param {Object} a
	 * @return {Array} property names
	 */
function c(n){var e=[];for(var t in n)e.push(t);return e}/*!
	 * Simple equality for flat iterable objects
	 * such as Arrays or Node.js buffers.
	 *
	 * @param {Iterable} a
	 * @param {Iterable} b
	 * @return {Boolean} result
	 */
function l(n,e){if(n.length!==e.length)return!1;for(var t=0,r=!0;t<n.length;t++)if(n[t]!==e[t]){r=!1;break}return r}/*!
	 * Extension to `iterableEqual` specifically
	 * for Node.js Buffers.
	 *
	 * @param {Buffer} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */
function f(n,e){return d.isBuffer(e)?l(n,e):!1}/*!
	 * Block for `objectEqual` ensuring non-existing
	 * values don't get in.
	 *
	 * @param {Mixed} object
	 * @return {Boolean} result
	 */
function p(n){return null!==n&&void 0!==n}/*!
	 * Recursively check the equality of two objects.
	 * Once basic sameness has been established it will
	 * defer to `deepEqual` for each enumerable key
	 * in the object.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */
function h(n,e,t){if(!p(n)||!p(e))return!1;if(n.prototype!==e.prototype)return!1;var i;if(t){for(i=0;i<t.length;i++)if(t[i][0]===n&&t[i][1]===e||t[i][0]===e&&t[i][1]===n)return!0}else t=[];try{var o=c(n),s=c(e)}catch(a){return!1}if(o.sort(),s.sort(),!l(o,s))return!1;t.push([n,e]);var u;for(i=o.length-1;i>=0;i--)if(u=o[i],!r(n[u],e[u],t))return!1;return!0}/*!
	 * deep-eql
	 * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Module dependencies
	 */
var d,g=t(212);try{d=t(211).Buffer}catch(m){d={},d.isBuffer=function(){return!1}}/*!
	 * Primary Export
	 */
n.exports=r},211:function(n,e,t){(function(n){function n(e,t){var r=this;if(!(r instanceof n))return new n(e,t);var i,o=typeof e;if("number"===o)i=+e;else if("string"===o)i=n.byteLength(e,t);else{if("object"!==o||null===e)throw new TypeError("must start with number, buffer, array or string");"Buffer"===e.type&&I(e.data)&&(e=e.data),i=+e.length}if(i>B)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+B.toString(16)+" bytes");0>i?i=0:i>>>=0,n.TYPED_ARRAY_SUPPORT?r=n._augment(new Uint8Array(i)):(r.length=i,r._isBuffer=!0);var s;if(n.TYPED_ARRAY_SUPPORT&&"number"==typeof e.byteLength)r._set(e);else if(E(e))if(n.isBuffer(e))for(s=0;i>s;s++)r[s]=e.readUInt8(s);else for(s=0;i>s;s++)r[s]=(e[s]%256+256)%256;else if("string"===o)r.write(e,0,t);else if("number"===o&&!n.TYPED_ARRAY_SUPPORT)for(s=0;i>s;s++)r[s]=0;return i>0&&i<=n.poolSize&&(r.parent=C),r}function r(e,t){if(!(this instanceof r))return new r(e,t);var i=new n(e,t);return delete i.parent,i}function i(n,e,t,r){t=Number(t)||0;var i=n.length-t;r?(r=Number(r),r>i&&(r=i)):r=i;var o=e.length;if(o%2!==0)throw new Error("Invalid hex string");r>o/2&&(r=o/2);for(var s=0;r>s;s++){var a=parseInt(e.substr(2*s,2),16);if(isNaN(a))throw new Error("Invalid hex string");n[t+s]=a}return s}function o(n,e,t,r){var i=R(T(e,n.length-t),n,t,r);return i}function s(n,e,t,r){var i=R(q(e),n,t,r);return i}function a(n,e,t,r){return s(n,e,t,r)}function u(n,e,t,r){var i=R(P(e),n,t,r);return i}function c(n,e,t,r){var i=R(M(e,n.length-t),n,t,r);return i}function l(n,e,t){return _.fromByteArray(0===e&&t===n.length?n:n.slice(e,t))}function f(n,e,t){var r="",i="";t=Math.min(n.length,t);for(var o=e;t>o;o++)n[o]<=127?(r+=A(i)+String.fromCharCode(n[o]),i=""):i+="%"+n[o].toString(16);return r+A(i)}function p(n,e,t){var r="";t=Math.min(n.length,t);for(var i=e;t>i;i++)r+=String.fromCharCode(127&n[i]);return r}function h(n,e,t){var r="";t=Math.min(n.length,t);for(var i=e;t>i;i++)r+=String.fromCharCode(n[i]);return r}function d(n,e,t){var r=n.length;(!e||0>e)&&(e=0),(!t||0>t||t>r)&&(t=r);for(var i="",o=e;t>o;o++)i+=O(n[o]);return i}function g(n,e,t){for(var r=n.slice(e,t),i="",o=0;o<r.length;o+=2)i+=String.fromCharCode(r[o]+256*r[o+1]);return i}function m(n,e,t){if(n%1!==0||0>n)throw new RangeError("offset is not uint");if(n+e>t)throw new RangeError("Trying to access beyond buffer length")}function b(e,t,r,i,o,s){if(!n.isBuffer(e))throw new TypeError("buffer must be a Buffer instance");if(t>o||s>t)throw new RangeError("value is out of bounds");if(r+i>e.length)throw new RangeError("index out of range")}function v(n,e,t,r){0>e&&(e=65535+e+1);for(var i=0,o=Math.min(n.length-t,2);o>i;i++)n[t+i]=(e&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function y(n,e,t,r){0>e&&(e=4294967295+e+1);for(var i=0,o=Math.min(n.length-t,4);o>i;i++)n[t+i]=e>>>8*(r?i:3-i)&255}function w(n,e,t,r,i,o){if(e>i||o>e)throw new RangeError("value is out of bounds");if(t+r>n.length)throw new RangeError("index out of range");if(0>t)throw new RangeError("index out of range")}function x(n,e,t,r,i){return i||w(n,e,t,4,3.4028234663852886e38,-3.4028234663852886e38),L.write(n,e,t,r,23,4),t+4}function j(n,e,t,r,i){return i||w(n,e,t,8,1.7976931348623157e308,-1.7976931348623157e308),L.write(n,e,t,r,52,8),t+8}function k(n){if(n=S(n).replace(D,""),n.length<2)return"";for(;n.length%4!==0;)n+="=";return n}function S(n){return n.trim?n.trim():n.replace(/^\s+|\s+$/g,"")}function E(e){return I(e)||n.isBuffer(e)||e&&"object"==typeof e&&"number"==typeof e.length}function O(n){return 16>n?"0"+n.toString(16):n.toString(16)}function T(n,e){e=e||1/0;for(var t,r=n.length,i=null,o=[],s=0;r>s;s++){if(t=n.charCodeAt(s),t>55295&&57344>t){if(!i){if(t>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===r){(e-=3)>-1&&o.push(239,191,189);continue}i=t;continue}if(56320>t){(e-=3)>-1&&o.push(239,191,189),i=t;continue}t=i-55296<<10|t-56320|65536,i=null}else i&&((e-=3)>-1&&o.push(239,191,189),i=null);if(128>t){if((e-=1)<0)break;o.push(t)}else if(2048>t){if((e-=2)<0)break;o.push(t>>6|192,63&t|128)}else if(65536>t){if((e-=3)<0)break;o.push(t>>12|224,t>>6&63|128,63&t|128)}else{if(!(2097152>t))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(t>>18|240,t>>12&63|128,t>>6&63|128,63&t|128)}}return o}function q(n){for(var e=[],t=0;t<n.length;t++)e.push(255&n.charCodeAt(t));return e}function M(n,e){for(var t,r,i,o=[],s=0;s<n.length&&!((e-=2)<0);s++)t=n.charCodeAt(s),r=t>>8,i=t%256,o.push(i),o.push(r);return o}function P(n){return _.toByteArray(k(n))}function R(n,e,t,r){for(var i=0;r>i&&!(i+t>=e.length||i>=n.length);i++)e[i+t]=n[i];return i}function A(n){try{return decodeURIComponent(n)}catch(e){return String.fromCharCode(65533)}}/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
var _=t(220),L=t(218),I=t(219);e.Buffer=n,e.SlowBuffer=r,e.INSPECT_MAX_BYTES=50,n.poolSize=8192;var B=1073741823,C={};n.TYPED_ARRAY_SUPPORT=function(){try{var n=new ArrayBuffer(0),e=new Uint8Array(n);return e.foo=function(){return 42},42===e.foo()&&"function"==typeof e.subarray&&0===new Uint8Array(1).subarray(1,1).byteLength}catch(t){return!1}}(),n.isBuffer=function(n){return!(null==n||!n._isBuffer)},n.compare=function(e,t){if(!n.isBuffer(e)||!n.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var r=e.length,i=t.length,o=0,s=Math.min(r,i);s>o&&e[o]===t[o];o++);return o!==s&&(r=e[o],i=t[o]),i>r?-1:r>i?1:0},n.isEncoding=function(n){switch(String(n).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},n.concat=function(e,t){if(!I(e))throw new TypeError("list argument must be an Array of Buffers.");if(0===e.length)return new n(0);if(1===e.length)return e[0];var r;if(void 0===t)for(t=0,r=0;r<e.length;r++)t+=e[r].length;var i=new n(t),o=0;for(r=0;r<e.length;r++){var s=e[r];s.copy(i,o),o+=s.length}return i},n.byteLength=function(n,e){var t;switch(n+="",e||"utf8"){case"ascii":case"binary":case"raw":t=n.length;break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":t=2*n.length;break;case"hex":t=n.length>>>1;break;case"utf8":case"utf-8":t=T(n).length;break;case"base64":t=P(n).length;break;default:t=n.length}return t},n.prototype.length=void 0,n.prototype.parent=void 0,n.prototype.toString=function(n,e,t){var r=!1;if(e>>>=0,t=void 0===t||t===1/0?this.length:t>>>0,n||(n="utf8"),0>e&&(e=0),t>this.length&&(t=this.length),e>=t)return"";for(;;)switch(n){case"hex":return d(this,e,t);case"utf8":case"utf-8":return f(this,e,t);case"ascii":return p(this,e,t);case"binary":return h(this,e,t);case"base64":return l(this,e,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return g(this,e,t);default:if(r)throw new TypeError("Unknown encoding: "+n);n=(n+"").toLowerCase(),r=!0}},n.prototype.equals=function(e){if(!n.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e?!0:0===n.compare(this,e)},n.prototype.inspect=function(){var n="",t=e.INSPECT_MAX_BYTES;return this.length>0&&(n=this.toString("hex",0,t).match(/.{2}/g).join(" "),this.length>t&&(n+=" ... ")),"<Buffer "+n+">"},n.prototype.compare=function(e){if(!n.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e?0:n.compare(this,e)},n.prototype.indexOf=function(e,t){function r(n,e,t){for(var r=-1,i=0;t+i<n.length;i++)if(n[t+i]===e[-1===r?0:i-r]){if(-1===r&&(r=i),i-r+1===e.length)return t+r}else r=-1;return-1}if(t>2147483647?t=2147483647:-2147483648>t&&(t=-2147483648),t>>=0,0===this.length)return-1;if(t>=this.length)return-1;if(0>t&&(t=Math.max(this.length+t,0)),"string"==typeof e)return 0===e.length?-1:String.prototype.indexOf.call(this,e,t);if(n.isBuffer(e))return r(this,e,t);if("number"==typeof e)return n.TYPED_ARRAY_SUPPORT&&"function"===Uint8Array.prototype.indexOf?Uint8Array.prototype.indexOf.call(this,e,t):r(this,[e],t);throw new TypeError("val must be string, number or Buffer")},n.prototype.get=function(n){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(n)},n.prototype.set=function(n,e){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(n,e)},n.prototype.write=function(n,e,t,r){if(isFinite(e))isFinite(t)||(r=t,t=void 0);else{var l=r;r=e,e=t,t=l}if(e=Number(e)||0,0>t||0>e||e>this.length)throw new RangeError("attempt to write outside buffer bounds");var f=this.length-e;t?(t=Number(t),t>f&&(t=f)):t=f,r=String(r||"utf8").toLowerCase();var p;switch(r){case"hex":p=i(this,n,e,t);break;case"utf8":case"utf-8":p=o(this,n,e,t);break;case"ascii":p=s(this,n,e,t);break;case"binary":p=a(this,n,e,t);break;case"base64":p=u(this,n,e,t);break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":p=c(this,n,e,t);break;default:throw new TypeError("Unknown encoding: "+r)}return p},n.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},n.prototype.slice=function(e,t){var r=this.length;e=~~e,t=void 0===t?r:~~t,0>e?(e+=r,0>e&&(e=0)):e>r&&(e=r),0>t?(t+=r,0>t&&(t=0)):t>r&&(t=r),e>t&&(t=e);var i;if(n.TYPED_ARRAY_SUPPORT)i=n._augment(this.subarray(e,t));else{var o=t-e;i=new n(o,void 0);for(var s=0;o>s;s++)i[s]=this[s+e]}return i.length&&(i.parent=this.parent||this),i},n.prototype.readUIntLE=function(n,e,t){n>>>=0,e>>>=0,t||m(n,e,this.length);for(var r=this[n],i=1,o=0;++o<e&&(i*=256);)r+=this[n+o]*i;return r},n.prototype.readUIntBE=function(n,e,t){n>>>=0,e>>>=0,t||m(n,e,this.length);for(var r=this[n+--e],i=1;e>0&&(i*=256);)r+=this[n+--e]*i;return r},n.prototype.readUInt8=function(n,e){return e||m(n,1,this.length),this[n]},n.prototype.readUInt16LE=function(n,e){return e||m(n,2,this.length),this[n]|this[n+1]<<8},n.prototype.readUInt16BE=function(n,e){return e||m(n,2,this.length),this[n]<<8|this[n+1]},n.prototype.readUInt32LE=function(n,e){return e||m(n,4,this.length),(this[n]|this[n+1]<<8|this[n+2]<<16)+16777216*this[n+3]},n.prototype.readUInt32BE=function(n,e){return e||m(n,4,this.length),16777216*this[n]+(this[n+1]<<16|this[n+2]<<8|this[n+3])},n.prototype.readIntLE=function(n,e,t){n>>>=0,e>>>=0,t||m(n,e,this.length);for(var r=this[n],i=1,o=0;++o<e&&(i*=256);)r+=this[n+o]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*e)),r},n.prototype.readIntBE=function(n,e,t){n>>>=0,e>>>=0,t||m(n,e,this.length);for(var r=e,i=1,o=this[n+--r];r>0&&(i*=256);)o+=this[n+--r]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},n.prototype.readInt8=function(n,e){return e||m(n,1,this.length),128&this[n]?-1*(255-this[n]+1):this[n]},n.prototype.readInt16LE=function(n,e){e||m(n,2,this.length);var t=this[n]|this[n+1]<<8;return 32768&t?4294901760|t:t},n.prototype.readInt16BE=function(n,e){e||m(n,2,this.length);var t=this[n+1]|this[n]<<8;return 32768&t?4294901760|t:t},n.prototype.readInt32LE=function(n,e){return e||m(n,4,this.length),this[n]|this[n+1]<<8|this[n+2]<<16|this[n+3]<<24},n.prototype.readInt32BE=function(n,e){return e||m(n,4,this.length),this[n]<<24|this[n+1]<<16|this[n+2]<<8|this[n+3]},n.prototype.readFloatLE=function(n,e){return e||m(n,4,this.length),L.read(this,n,!0,23,4)},n.prototype.readFloatBE=function(n,e){return e||m(n,4,this.length),L.read(this,n,!1,23,4)},n.prototype.readDoubleLE=function(n,e){return e||m(n,8,this.length),L.read(this,n,!0,52,8)},n.prototype.readDoubleBE=function(n,e){return e||m(n,8,this.length),L.read(this,n,!1,52,8)},n.prototype.writeUIntLE=function(n,e,t,r){n=+n,e>>>=0,t>>>=0,r||b(this,n,e,t,Math.pow(2,8*t),0);var i=1,o=0;for(this[e]=255&n;++o<t&&(i*=256);)this[e+o]=n/i>>>0&255;return e+t},n.prototype.writeUIntBE=function(n,e,t,r){n=+n,e>>>=0,t>>>=0,r||b(this,n,e,t,Math.pow(2,8*t),0);var i=t-1,o=1;for(this[e+i]=255&n;--i>=0&&(o*=256);)this[e+i]=n/o>>>0&255;return e+t},n.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,1,255,0),n.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=e,t+1},n.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,2,65535,0),n.TYPED_ARRAY_SUPPORT?(this[t]=e,this[t+1]=e>>>8):v(this,e,t,!0),t+2},n.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,2,65535,0),n.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=e):v(this,e,t,!1),t+2},n.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,4,4294967295,0),n.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=e):y(this,e,t,!0),t+4},n.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,4,4294967295,0),n.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e):y(this,e,t,!1),t+4},n.prototype.writeIntLE=function(n,e,t,r){n=+n,e>>>=0,r||b(this,n,e,t,Math.pow(2,8*t-1)-1,-Math.pow(2,8*t-1));var i=0,o=1,s=0>n?1:0;for(this[e]=255&n;++i<t&&(o*=256);)this[e+i]=(n/o>>0)-s&255;return e+t},n.prototype.writeIntBE=function(n,e,t,r){n=+n,e>>>=0,r||b(this,n,e,t,Math.pow(2,8*t-1)-1,-Math.pow(2,8*t-1));var i=t-1,o=1,s=0>n?1:0;for(this[e+i]=255&n;--i>=0&&(o*=256);)this[e+i]=(n/o>>0)-s&255;return e+t},n.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,1,127,-128),n.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),0>e&&(e=255+e+1),this[t]=e,t+1},n.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,2,32767,-32768),n.TYPED_ARRAY_SUPPORT?(this[t]=e,this[t+1]=e>>>8):v(this,e,t,!0),t+2},n.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,2,32767,-32768),n.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=e):v(this,e,t,!1),t+2},n.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,4,2147483647,-2147483648),n.TYPED_ARRAY_SUPPORT?(this[t]=e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):y(this,e,t,!0),t+4},n.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||b(this,e,t,4,2147483647,-2147483648),0>e&&(e=4294967295+e+1),n.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e):y(this,e,t,!1),t+4},n.prototype.writeFloatLE=function(n,e,t){return x(this,n,e,!0,t)},n.prototype.writeFloatBE=function(n,e,t){return x(this,n,e,!1,t)},n.prototype.writeDoubleLE=function(n,e,t){return j(this,n,e,!0,t)},n.prototype.writeDoubleBE=function(n,e,t){return j(this,n,e,!1,t)},n.prototype.copy=function(e,t,r,i){if(r||(r=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&r>i&&(i=r),i===r)return 0;if(0===e.length||0===this.length)return 0;if(0>t)throw new RangeError("targetStart out of bounds");if(0>r||r>=this.length)throw new RangeError("sourceStart out of bounds");if(0>i)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-r&&(i=e.length-t+r);var o=i-r;if(1e3>o||!n.TYPED_ARRAY_SUPPORT)for(var s=0;o>s;s++)e[s+t]=this[s+r];else e._set(this.subarray(r,r+o),t);return o},n.prototype.fill=function(n,e,t){if(n||(n=0),e||(e=0),t||(t=this.length),e>t)throw new RangeError("end < start");if(t!==e&&0!==this.length){if(0>e||e>=this.length)throw new RangeError("start out of bounds");if(0>t||t>this.length)throw new RangeError("end out of bounds");var r;if("number"==typeof n)for(r=e;t>r;r++)this[r]=n;else{var i=T(n.toString()),o=i.length;for(r=e;t>r;r++)this[r]=i[r%o]}return this}},n.prototype.toArrayBuffer=function(){if("undefined"!=typeof Uint8Array){if(n.TYPED_ARRAY_SUPPORT)return new n(this).buffer;for(var e=new Uint8Array(this.length),t=0,r=e.length;r>t;t+=1)e[t]=this[t];return e.buffer}throw new TypeError("Buffer.toArrayBuffer not supported in this browser")};var N=n.prototype;n._augment=function(e){return e.constructor=n,e._isBuffer=!0,e._set=e.set,e.get=N.get,e.set=N.set,e.write=N.write,e.toString=N.toString,e.toLocaleString=N.toString,e.toJSON=N.toJSON,e.equals=N.equals,e.compare=N.compare,e.indexOf=N.indexOf,e.copy=N.copy,e.slice=N.slice,e.readUIntLE=N.readUIntLE,e.readUIntBE=N.readUIntBE,e.readUInt8=N.readUInt8,e.readUInt16LE=N.readUInt16LE,e.readUInt16BE=N.readUInt16BE,e.readUInt32LE=N.readUInt32LE,e.readUInt32BE=N.readUInt32BE,e.readIntLE=N.readIntLE,e.readIntBE=N.readIntBE,e.readInt8=N.readInt8,e.readInt16LE=N.readInt16LE,e.readInt16BE=N.readInt16BE,e.readInt32LE=N.readInt32LE,e.readInt32BE=N.readInt32BE,e.readFloatLE=N.readFloatLE,e.readFloatBE=N.readFloatBE,e.readDoubleLE=N.readDoubleLE,e.readDoubleBE=N.readDoubleBE,e.writeUInt8=N.writeUInt8,e.writeUIntLE=N.writeUIntLE,e.writeUIntBE=N.writeUIntBE,e.writeUInt16LE=N.writeUInt16LE,e.writeUInt16BE=N.writeUInt16BE,e.writeUInt32LE=N.writeUInt32LE,e.writeUInt32BE=N.writeUInt32BE,e.writeIntLE=N.writeIntLE,e.writeIntBE=N.writeIntBE,e.writeInt8=N.writeInt8,e.writeInt16LE=N.writeInt16LE,e.writeInt16BE=N.writeInt16BE,e.writeInt32LE=N.writeInt32LE,e.writeInt32BE=N.writeInt32BE,e.writeFloatLE=N.writeFloatLE,e.writeFloatBE=N.writeFloatBE,e.writeDoubleLE=N.writeDoubleLE,e.writeDoubleBE=N.writeDoubleBE,e.fill=N.fill,e.inspect=N.inspect,e.toArrayBuffer=N.toArrayBuffer,e};var D=/[^+\/0-9A-z\-]/g}).call(e,t(211).Buffer)},212:function(n,e,t){n.exports=t(215)},215:function(n,e,t){function r(n){var e=Object.prototype.toString.call(n);return o[e]?o[e]:null===n?"null":void 0===n?"undefined":n===Object(n)?"object":typeof n}function i(){this.tests={}}/*!
	 * type-detect
	 * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */
/*!
	 * Primary Exports
	 */
var e=n.exports=r,o={"[object Array]":"array","[object RegExp]":"regexp","[object Function]":"function","[object Arguments]":"arguments","[object Date]":"date"};e.Library=i,i.prototype.of=r,i.prototype.define=function(n,e){return 1===arguments.length?this.tests[n]:(this.tests[n]=e,this)},i.prototype.test=function(n,e){if(e===r(n))return!0;var t=this.tests[e];if(t&&"regexp"===r(t))return t.test(n);if(t&&"function"===r(t))return t(n);throw new ReferenceError('Type test "'+e+'" not defined or invalid.')}},218:function(n,e,t){e.read=function(n,e,t,r,i){var o,s,a=8*i-r-1,u=(1<<a)-1,c=u>>1,l=-7,f=t?i-1:0,p=t?-1:1,h=n[e+f];for(f+=p,o=h&(1<<-l)-1,h>>=-l,l+=a;l>0;o=256*o+n[e+f],f+=p,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=r;l>0;s=256*s+n[e+f],f+=p,l-=8);if(0===o)o=1-c;else{if(o===u)return s?0/0:(h?-1:1)*(1/0);s+=Math.pow(2,r),o-=c}return(h?-1:1)*s*Math.pow(2,o-r)},e.write=function(n,e,t,r,i,o){var s,a,u,c=8*o-i-1,l=(1<<c)-1,f=l>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:o-1,d=r?1:-1,g=0>e||0===e&&0>1/e?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,s=l):(s=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-s))<1&&(s--,u*=2),e+=s+f>=1?p/u:p*Math.pow(2,1-f),e*u>=2&&(s++,u/=2),s+f>=l?(a=0,s=l):s+f>=1?(a=(e*u-1)*Math.pow(2,i),s+=f):(a=e*Math.pow(2,f-1)*Math.pow(2,i),s=0));i>=8;n[t+h]=255&a,h+=d,a/=256,i-=8);for(s=s<<i|a,c+=i;c>0;n[t+h]=255&s,h+=d,s/=256,c-=8);n[t+h-d]|=128*g}},219:function(n,e,t){var r=Array.isArray,i=Object.prototype.toString;n.exports=r||function(n){return!!n&&"[object Array]"==i.call(n)}},220:function(n,e,t){var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";!function(n){"use strict";function e(n){var e=n.charCodeAt(0);return e===s||e===f?62:e===a||e===p?63:u>e?-1:u+10>e?e-u+26+26:l+26>e?e-l:c+26>e?e-c+26:void 0}function t(n){function t(n){c[f++]=n}var r,i,s,a,u,c;if(n.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var l=n.length;u="="===n.charAt(l-2)?2:"="===n.charAt(l-1)?1:0,c=new o(3*n.length/4-u),s=u>0?n.length-4:n.length;var f=0;for(r=0,i=0;s>r;r+=4,i+=3)a=e(n.charAt(r))<<18|e(n.charAt(r+1))<<12|e(n.charAt(r+2))<<6|e(n.charAt(r+3)),t((16711680&a)>>16),t((65280&a)>>8),t(255&a);return 2===u?(a=e(n.charAt(r))<<2|e(n.charAt(r+1))>>4,t(255&a)):1===u&&(a=e(n.charAt(r))<<10|e(n.charAt(r+1))<<4|e(n.charAt(r+2))>>2,t(a>>8&255),t(255&a)),c}function i(n){function e(n){return r.charAt(n)}function t(n){return e(n>>18&63)+e(n>>12&63)+e(n>>6&63)+e(63&n)}var i,o,s,a=n.length%3,u="";for(i=0,s=n.length-a;s>i;i+=3)o=(n[i]<<16)+(n[i+1]<<8)+n[i+2],u+=t(o);switch(a){case 1:o=n[n.length-1],u+=e(o>>2),u+=e(o<<4&63),u+="==";break;case 2:o=(n[n.length-2]<<8)+n[n.length-1],u+=e(o>>10),u+=e(o>>4&63),u+=e(o<<2&63),u+="="}return u}var o="undefined"!=typeof Uint8Array?Uint8Array:Array,s="+".charCodeAt(0),a="/".charCodeAt(0),u="0".charCodeAt(0),c="a".charCodeAt(0),l="A".charCodeAt(0),f="-".charCodeAt(0),p="_".charCodeAt(0);n.toByteArray=t,n.fromByteArray=i}(e)}});